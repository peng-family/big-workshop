export const avaxPenguin = {
  contractName: "AvaxPenguin",
  abi: [
    {
      inputs: [
        {
          internalType: "string",
          name: "nftName",
          type: "string",
        },
        {
          internalType: "string",
          name: "nftSymbol",
          type: "string",
        },
        {
          internalType: "string",
          name: "baseTokenURI",
          type: "string",
        },
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          internalType: "address",
          name: "royalties",
          type: "address",
        },
      ],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "approved",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Approval",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          indexed: false,
          internalType: "bool",
          name: "approved",
          type: "bool",
        },
      ],
      name: "ApprovalForAll",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "_id",
          type: "uint256",
        },
      ],
      name: "Claim",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "previousOwner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "OwnershipTransferred",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Transfer",
      type: "event",
    },
    {
      stateMutability: "payable",
      type: "fallback",
      payable: true,
    },
    {
      inputs: [],
      name: "MAX_MINTABLE",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "MAX_PER_CLAIM",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "NFT_PRICE",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "ROYALTY_VALUE",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "approve",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
      ],
      name: "balanceOf",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "canClaim",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "getApproved",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          internalType: "address",
          name: "operator",
          type: "address",
        },
      ],
      name: "isApprovedForAll",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "minted",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "name",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "owner",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "ownerOf",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "royaltyInfo",
      outputs: [
        {
          internalType: "address",
          name: "receiver",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "royaltyAmount",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          internalType: "bool",
          name: "approved",
          type: "bool",
        },
      ],
      name: "setApprovalForAll",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "symbol",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "index",
          type: "uint256",
        },
      ],
      name: "tokenByIndex",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "index",
          type: "uint256",
        },
      ],
      name: "tokenOfOwnerByIndex",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "totalSupply",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      stateMutability: "payable",
      type: "receive",
      payable: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_owner",
          type: "address",
        },
      ],
      name: "tokensByAddress",
      outputs: [
        {
          internalType: "uint256[]",
          name: "",
          type: "uint256[]",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "toggleClaimability",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "n",
          type: "uint256",
        },
      ],
      name: "claim",
      outputs: [],
      stateMutability: "payable",
      type: "function",
      payable: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "transferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
        {
          internalType: "bytes",
          name: "_data",
          type: "bytes",
        },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "tokenURI",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "string",
          name: "uri",
          type: "string",
        },
      ],
      name: "setBaseUri",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "bytes4",
          name: "interfaceId",
          type: "bytes4",
        },
      ],
      name: "supportsInterface",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_ownerOfContract",
          type: "address",
        },
      ],
      name: "setOwner",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_royaltyAddress",
          type: "address",
        },
      ],
      name: "setRoyalty",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "withdraw",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  metadata:
    '{"compiler":{"version":"0.8.0+commit.c7dfd78e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"nftName","type":"string"},{"internalType":"string","name":"nftSymbol","type":"string"},{"internalType":"string","name":"baseTokenURI","type":"string"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"royalties","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_id","type":"uint256"}],"name":"Claim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"MAX_MINTABLE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PER_CLAIM","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NFT_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROYALTY_VALUE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"canClaim","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"}],"name":"setBaseUri","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_ownerOfContract","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_royaltyAddress","type":"address"}],"name":"setRoyalty","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"toggleClaimability","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"tokensByAddress","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"royaltyInfo(uint256,uint256)":{"params":{"_tokenId":"- the NFT asset queried for royalty information","_value":"- the sale price of the NFT asset specified by _tokenId"},"returns":{"receiver":"- address of who should be sent the royalty payment","royaltyAmount":"- the royalty payment amount for value sale price"}},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"project:/contracts/AvaxPenguin.sol":"AvaxPenguin"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7","license":"MIT","urls":["bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23","dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM"]},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"keccak256":"0x1ba5cf152c15dc0c785310feeb61e1f74387fc7bdc2aba5d90733f791606d4bf","license":"MIT","urls":["bzz-raw://38db14c62d6431df042a7ca07fd021ea52ccdbd03f0be2b5c4ab034a56126d38","dweb:/ipfs/QmbCHTCLP6bz8omQXrP8VuxFGdK9Hh3jqfrSTr38WNpTk4"]},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4","license":"MIT","urls":["bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de","dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv"]},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0x483b106386dd309f168672928252a19f30c30efb4d17d4b8e2b0f587ca784a11","license":"MIT","urls":["bzz-raw://189a39d066c6886ddbe86c79bb36d6cbe66e98bc6a94956e28f5503dae4ad406","dweb:/ipfs/QmT3s3PwCdXqHLJk26kcnedrRGTC9T18z52i9Be7PV9ppc"]},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"keccak256":"0x683793c78df81fc9033105d5c5e7173a3a295f94b55435129a385514213637e2","license":"MIT","urls":["bzz-raw://02d4dc9c619d54284ee14261f5f2a3edc03ad654f8b6fe16f257789d5d58475b","dweb:/ipfs/QmTuGzVWvDKSmNAXUNKRFWTDv86QBpwmi2vbCCqjctvc8h"]},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"keccak256":"0x42c041cfe2fba75264baa64c4c3c55b128e6667b54331df87028cc4da0a9606e","license":"MIT","urls":["bzz-raw://ed91e7e168e51bce00363a70677e368528179e6f29105b1b3d38f8948e670a01","dweb:/ipfs/QmPr58W3vqF9EMQyh5yzweRW5M1jtpS4UEjSxreYqMWtzA"]},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x6052c25b1021f2b0e733fb52ca11948cb2f08cb66076397507243a6e8a8d7776","license":"MIT","urls":["bzz-raw://32ac4547a76b28021a007853958284aa8a15a64f1aeec83cb797b7fd60a46b56","dweb:/ipfs/QmTJWQF8j586oaYNpdZv55xnzyHVQc68XN4eBNeiLbKX8d"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656","license":"MIT","urls":["bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe","dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt"]},"@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3","license":"MIT","urls":["bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405","dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu"]},"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x5fa25f305839292fab713256214f2868e0257d29826b14282bbd7f1e34f5af38","license":"MIT","urls":["bzz-raw://b3de4074848249e00e1336db857e3fa8f78b4fe11d4a887f71050c22023b2132","dweb:/ipfs/QmbL6k2zFGndQPNPG7vCDivtjKam3quJSrEbRuVsNo4hBw"]},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"keccak256":"0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf","license":"MIT","urls":["bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c","dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ"]},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9","license":"MIT","urls":["bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93","dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT"]},"project:/contracts/AvaxPenguin.sol":{"keccak256":"0x6aac055bd0b8d961db3b7a3e3d887820ed13ec6fbca614c1d114821e6c82481c","license":"MIT","urls":["bzz-raw://e4f210171f45c3017f629bce8087a546173086d63ecff2bc88dccd8915cbacb8","dweb:/ipfs/QmX5f4AEVo7PuDh4c6hKVCefHgXkvGsQ1j8v76cxoTnWU1"]},"project:/contracts/lib/ERC2981Base.sol":{"keccak256":"0xa66657cf441afffa6f6530bce05d1ee3078405f44afb796f5791b37d02e87721","license":"MIT","urls":["bzz-raw://7498e1e59125f4ab20629798d0dc9a080773c3625e61e755f4d8e9a0999cf892","dweb:/ipfs/QmWJeSFkbCnqY89bqfRZnifkH2Hz9RyXTnku5JnXHPtYT9"]},"project:/contracts/lib/ERC2981PerTokenRoyalties.sol":{"keccak256":"0x9b914f931d1258649daccce1694728d80bda00f56e84ec8a319ae12c2ef6d888","license":"MIT","urls":["bzz-raw://d6aabda0749b56799204bbd56d23fd1912c01c9db99a9a0a2685b3ff931ef0be","dweb:/ipfs/QmbLSpaJftGQq5nVvGpPhr7HLUdRBKdJMQwfqvEhFzGxDR"]},"project:/contracts/lib/IERC2981Royalties.sol":{"keccak256":"0x7cbdfb8ed5e1c6925ff27ab652fef5150fc3ed1ed29641ecc6f7e37824fd0c27","license":"MIT","urls":["bzz-raw://f5061cd34f4b03f9174cae3d946d3613f6123b83594d9f3b935dde789a6d6807","dweb:/ipfs/QmeaQGBvoE1WP6Z7mShEcMAH3c6UcAEvDbhcx3U4y1iPSJ"]}},"version":1}',
  bytecode:
    "0x6115b3600d5560e0604052603660808181529062002d1760a03980516200002f9160109160209091019062000167565b50600060118190556012805460ff191690556013553480156200005157600080fd5b5060405162002d4d38038062002d4d8339810160408190526200007491620002d5565b8451859085906200008d90600090602085019062000167565b508051620000a390600190602084019062000167565b505050620000c0620000ba6200011160201b60201c565b62000115565b601480546001600160a01b038085166001600160a01b031992831617909255601580549284169290911691909117905582516200010590601090602086019062000167565b505050505050620003db565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001759062000388565b90600052602060002090601f016020900481019282620001995760008555620001e4565b82601f10620001b457805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e4578251825591602001919060010190620001c7565b50620001f2929150620001f6565b5090565b5b80821115620001f25760008155600101620001f7565b80516001600160a01b03811681146200022557600080fd5b919050565b600082601f8301126200023b578081fd5b81516001600160401b0380821115620002585762000258620003c5565b6040516020601f8401601f1916820181018381118382101715620002805762000280620003c5565b604052838252858401810187101562000297578485fd5b8492505b83831015620002ba57858301810151828401820152918201916200029b565b83831115620002cb57848185840101525b5095945050505050565b600080600080600060a08688031215620002ed578081fd5b85516001600160401b038082111562000304578283fd5b6200031289838a016200022a565b9650602088015191508082111562000328578283fd5b6200033689838a016200022a565b955060408801519150808211156200034c578283fd5b506200035b888289016200022a565b9350506200036c606087016200020d565b91506200037c608087016200020d565b90509295509295909350565b6002810460018216806200039d57607f821691505b60208210811415620003bf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61292c80620003eb6000396000f3fe6080604052600436106101f25760003560e01c80635471f49f1161010d57806395d89b41116100a0578063c87b56dd1161006f578063c87b56dd14610535578063c94364e314610555578063d6bc59421461056a578063e985e9c514610597578063f2fde38b146105b7576101f9565b806395d89b41146104c0578063a0bcfc7f146104d5578063a22cb465146104f5578063b88d4fde14610515576101f9565b806370a08231116100dc57806370a0823114610461578063715018a6146104815780638da5cb5b1461049657806393791b03146104ab576101f9565b80635471f49f146104025780636352211e14610417578063676dd563146104375780636dc7a6271461044c576101f9565b80632a6432a4116101855780633f879faf116101545780633f879faf1461039857806342842e0e146103ad5780634f02c420146103cd5780634f6ccce7146103e2576101f9565b80632a6432a4146103305780632f745c5914610350578063379607f5146103705780633ccfd60b14610383576101f9565b806313af4035116101c157806313af4035146102a057806318160ddd146102c057806323b872dd146102e25780632a55205a14610302576101f9565b806301ffc9a7146101fb57806306fdde0314610231578063081812fc14610253578063095ea7b314610280576101f9565b366101f957005b005b34801561020757600080fd5b5061021b610216366004611ecf565b6105d7565b60405161022891906120cc565b60405180910390f35b34801561023d57600080fd5b506102466105ea565b60405161022891906120d7565b34801561025f57600080fd5b5061027361026e366004611f4d565b61067d565b604051610228919061201e565b34801561028c57600080fd5b506101f961029b366004611ea6565b6106c9565b3480156102ac57600080fd5b506101f96102bb366004611d65565b610761565b3480156102cc57600080fd5b506102d56107c2565b604051610228919061279d565b3480156102ee57600080fd5b506101f96102fd366004611db8565b6107c8565b34801561030e57600080fd5b5061032261031d366004611f65565b610800565b60405161022892919061206f565b34801561033c57600080fd5b506101f961034b366004611d65565b61085e565b34801561035c57600080fd5b506102d561036b366004611ea6565b6108bf565b6101f961037e366004611f4d565b610911565b34801561038f57600080fd5b506101f9610b1c565b3480156103a457600080fd5b506102d5610ba9565b3480156103b957600080fd5b506101f96103c8366004611db8565b610baf565b3480156103d957600080fd5b506102d5610bca565b3480156103ee57600080fd5b506102d56103fd366004611f4d565b610bd0565b34801561040e57600080fd5b506102d5610c2b565b34801561042357600080fd5b50610273610432366004611f4d565b610c30565b34801561044357600080fd5b506102d5610c65565b34801561045857600080fd5b5061021b610c71565b34801561046d57600080fd5b506102d561047c366004611d65565b610c7a565b34801561048d57600080fd5b506101f9610cbe565b3480156104a257600080fd5b50610273610d09565b3480156104b757600080fd5b506102d5610d18565b3480156104cc57600080fd5b50610246610d1e565b3480156104e157600080fd5b506101f96104f0366004611f07565b610d2d565b34801561050157600080fd5b506101f9610510366004611e6c565b610d83565b34801561052157600080fd5b506101f9610530366004611df3565b610d95565b34801561054157600080fd5b50610246610550366004611f4d565b610dce565b34801561056157600080fd5b506101f9610e60565b34801561057657600080fd5b5061058a610585366004611d65565b610eb3565b6040516102289190612088565b3480156105a357600080fd5b5061021b6105b2366004611d86565b610f80565b3480156105c357600080fd5b506101f96105d2366004611d65565b610fae565b60006105e28261101c565b90505b919050565b6060600080546105f990612834565b80601f016020809104026020016040519081016040528092919081815260200182805461062590612834565b80156106725780601f1061064757610100808354040283529160200191610672565b820191906000526020600020905b81548152906001019060200180831161065557829003601f168201915b505050505090505b90565b600061068882611041565b6106ad5760405162461bcd60e51b81526004016106a4906125a6565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106d482610c30565b9050806001600160a01b0316836001600160a01b031614156107085760405162461bcd60e51b81526004016106a4906126bf565b806001600160a01b031661071a61105e565b6001600160a01b031614806107365750610736816105b261105e565b6107525760405162461bcd60e51b81526004016106a49061243e565b61075c8383611062565b505050565b61076961105e565b6001600160a01b031661077a610d09565b6001600160a01b0316146107a05760405162461bcd60e51b81526004016106a4906125f2565b601480546001600160a01b0319166001600160a01b0392909216919091179055565b60085490565b6107d96107d361105e565b826110d0565b6107f55760405162461bcd60e51b81526004016106a490612700565b61075c83838361114d565b6000828152600b602090815260408083208151808301909252546001600160a01b038116808352600160a01b90910462ffffff1692820183905292916127109061084a90866127d2565b61085491906127be565b9150509250929050565b61086661105e565b6001600160a01b0316610877610d09565b6001600160a01b03161461089d5760405162461bcd60e51b81526004016106a4906125f2565b601580546001600160a01b0319166001600160a01b0392909216919091179055565b60006108ca83610c7a565b82106108e85760405162461bcd60e51b81526004016106a4906121c9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b60125460ff166109335760405162461bcd60e51b81526004016106a490612158565b6115b36011548261094491906127a6565b11156109625760405162461bcd60e51b81526004016106a4906120ea565b600081116109825760405162461bcd60e51b81526004016106a4906123d7565b600a8111156109a35760405162461bcd60e51b81526004016106a4906122e3565b6109b581670bcbce7f1b1500006127d2565b3410156109d45760405162461bcd60e51b81526004016106a49061252e565b60006109e882670bcbce7f1b1500006127d2565b905080601360008282546109fc91906127a6565b9091555060009050610a0e82346127f1565b604051909150309083156108fc029084906000818181858888f19350505050158015610a3e573d6000803e3d6000fd5b5060005b83811015610acf57610a5d610a5561105e565b60115461127a565b601154601554610a7991906001600160a01b031661012c6112fc565b600160116000828254610a8c91906127a6565b90915550506011546040517f7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f790600090a280610ac78161286f565b915050610a42565b50801561075c57610ade61105e565b6001600160a01b03166108fc829081150290604051600060405180830381858888f19350505050158015610b16573d6000803e3d6000fd5b50505050565b6014546001600160a01b03163314610b465760405162461bcd60e51b81526004016106a49061240e565b60004711610b665760405162461bcd60e51b81526004016106a49061219c565b610b6e61105e565b6001600160a01b03166108fc479081150290604051600060405180830381858888f19350505050158015610ba6573d6000803e3d6000fd5b50565b6115b381565b61075c83838360405180602001604052806000815250610d95565b60115481565b6000610bda6107c2565b8210610bf85760405162461bcd60e51b81526004016106a490612751565b60088281548110610c1957634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600a81565b6000818152600260205260408120546001600160a01b0316806105e25760405162461bcd60e51b81526004016106a4906124e5565b670bcbce7f1b15000081565b60125460ff1681565b60006001600160a01b038216610ca25760405162461bcd60e51b81526004016106a49061249b565b506001600160a01b031660009081526003602052604090205490565b610cc661105e565b6001600160a01b0316610cd7610d09565b6001600160a01b031614610cfd5760405162461bcd60e51b81526004016106a4906125f2565b610d07600061137e565b565b600a546001600160a01b031690565b61012c81565b6060600180546105f990612834565b610d3561105e565b6001600160a01b0316610d46610d09565b6001600160a01b031614610d6c5760405162461bcd60e51b81526004016106a4906125f2565b8051610d7f906010906020840190611c45565b5050565b610d7f610d8e61105e565b83836113d0565b610da6610da061105e565b836110d0565b610dc25760405162461bcd60e51b81526004016106a490612700565b610b1684848484611473565b6060610dd982611041565b610df55760405162461bcd60e51b81526004016106a490612670565b6000610dff6114a6565b6000848152600e6020526040902054815191925090610e2d5760405180602001604052806000815250610e58565b81610e37826114b5565b604051602001610e48929190611fb2565b6040516020818303038152906040525b949350505050565b610e6861105e565b6001600160a01b0316610e79610d09565b6001600160a01b031614610e9f5760405162461bcd60e51b81526004016106a4906125f2565b6012805460ff19811660ff90911615179055565b60606000610ec083610c7a565b67ffffffffffffffff811115610ee657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610f0f578160200160208202803683370190505b5090506000610f1d84610c7a565b905060005b81811015610f77576000610f3686836108bf565b905080848381518110610f5957634e487b7160e01b600052603260045260246000fd5b60209081029190910101525080610f6f8161286f565b915050610f22565b50909392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610fb661105e565b6001600160a01b0316610fc7610d09565b6001600160a01b031614610fed5760405162461bcd60e51b81526004016106a4906125f2565b6001600160a01b0381166110135760405162461bcd60e51b81526004016106a490612266565b610ba68161137e565b60006001600160e01b0319821663152a902d60e11b14806105e257506105e2826115d0565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061109782610c30565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006110db82611041565b6110f75760405162461bcd60e51b81526004016106a49061238b565b600061110283610c30565b9050806001600160a01b0316846001600160a01b0316148061113d5750836001600160a01b03166111328461067d565b6001600160a01b0316145b80610e585750610e588185610f80565b826001600160a01b031661116082610c30565b6001600160a01b0316146111865760405162461bcd60e51b81526004016106a490612627565b6001600160a01b0382166111ac5760405162461bcd60e51b81526004016106a490612310565b6111b78383836115f5565b6111c2600082611062565b6001600160a01b03831660009081526003602052604081208054600192906111eb9084906127f1565b90915550506001600160a01b03821660009081526003602052604081208054600192906112199084906127a6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611284611600565b90506000600d601154101561129a5750816112a6565b6112a382611661565b90505b6000818152600f6020526040902054156112d057634e487b7160e01b600052600160045260246000fd5b6000818152600f6020908152604080832060019055858352600e9091529020819055610b168484611718565b61271081111561131e5760405162461bcd60e51b81526004016106a490612121565b6040805180820182526001600160a01b03938416815262ffffff92831660208083019182526000968752600b905291909420935184549151909216600160a01b0262ffffff60a01b19929093166001600160a01b03199091161716179055565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156114025760405162461bcd60e51b81526004016106a490612354565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31906114669085906120cc565b60405180910390a3505050565b61147e84848461114d565b61148a84848484611732565b610b165760405162461bcd60e51b81526004016106a490612214565b6060601080546105f990612834565b6060816114da57506040805180820190915260018152600360fc1b60208201526105e5565b8160005b811561150457806114ee8161286f565b91506114fd9050600a836127be565b91506114de565b60008167ffffffffffffffff81111561152d57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611557576020820181803683370190505b5090505b8415610e585761156c6001836127f1565b9150611579600a8661288a565b6115849060306127a6565b60f81b8183815181106115a757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506115c9600a866127be565b945061155b565b60006001600160e01b0319821663780e9d6360e01b14806105e257506105e28261184d565b61075c83838361188d565b60006011546115b361161291906127f1565b61161e5750600061067a565b600d5444423343406040516020016116399493929190611ff1565b6040516020818303038152906040528051906020012060001c61165c919061288a565b905090565b6000818152600c6020526040812054806116785750815b600c60006001600d5461168b91906127f1565b815260200190815260200160002054600014156116c5576001600d546116b191906127f1565b6000848152600c60205260409020556116f9565b600c60006001600d546116d891906127f1565b81526020808201929092526040908101600090812054868252600c90935220555b6001600d600082825461170c91906127f1565b90915550909392505050565b610d7f828260405180602001604052806000815250611916565b6000611746846001600160a01b0316611949565b1561184257836001600160a01b031663150b7a0261176261105e565b8786866040518563ffffffff1660e01b81526004016117849493929190612032565b602060405180830381600087803b15801561179e57600080fd5b505af19250505080156117ce575060408051601f3d908101601f191682019092526117cb91810190611eeb565b60015b611828573d8080156117fc576040519150601f19603f3d011682016040523d82523d6000602084013e611801565b606091505b5080516118205760405162461bcd60e51b81526004016106a490612214565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e58565b506001949350505050565b60006001600160e01b031982166380ac58cd60e01b148061187e57506001600160e01b03198216635b5e139f60e01b145b806105e257506105e28261194f565b61189883838361075c565b6001600160a01b0383166118b4576118af81611968565b6118d7565b816001600160a01b0316836001600160a01b0316146118d7576118d783826119ac565b6001600160a01b0382166118f3576118ee81611a49565b61075c565b826001600160a01b0316826001600160a01b03161461075c5761075c8282611b22565b6119208383611b66565b61192d6000848484611732565b61075c5760405162461bcd60e51b81526004016106a490612214565b3b151590565b6001600160e01b031981166301ffc9a760e01b14919050565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b600060016119b984610c7a565b6119c391906127f1565b600083815260076020526040902054909150808214611a16576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611a5b906001906127f1565b60008381526009602052604081205460088054939450909284908110611a9157634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060088381548110611ac057634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611b0657634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000611b2d83610c7a565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611b8c5760405162461bcd60e51b81526004016106a490612571565b611b9581611041565b15611bb25760405162461bcd60e51b81526004016106a4906122ac565b611bbe600083836115f5565b6001600160a01b0382166000908152600360205260408120805460019290611be79084906127a6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611c5190612834565b90600052602060002090601f016020900481019282611c735760008555611cb9565b82601f10611c8c57805160ff1916838001178555611cb9565b82800160010185558215611cb9579182015b82811115611cb9578251825591602001919060010190611c9e565b50611cc5929150611cc9565b5090565b5b80821115611cc55760008155600101611cca565b600067ffffffffffffffff80841115611cf957611cf96128ca565b604051601f8501601f191681016020018281118282101715611d1d57611d1d6128ca565b604052848152915081838501861015611d3557600080fd5b8484602083013760006020868301015250509392505050565b80356001600160a01b03811681146105e557600080fd5b600060208284031215611d76578081fd5b611d7f82611d4e565b9392505050565b60008060408385031215611d98578081fd5b611da183611d4e565b9150611daf60208401611d4e565b90509250929050565b600080600060608486031215611dcc578081fd5b611dd584611d4e565b9250611de360208501611d4e565b9150604084013590509250925092565b60008060008060808587031215611e08578081fd5b611e1185611d4e565b9350611e1f60208601611d4e565b925060408501359150606085013567ffffffffffffffff811115611e41578182fd5b8501601f81018713611e51578182fd5b611e6087823560208401611cde565b91505092959194509250565b60008060408385031215611e7e578182fd5b611e8783611d4e565b915060208301358015158114611e9b578182fd5b809150509250929050565b60008060408385031215611eb8578182fd5b611ec183611d4e565b946020939093013593505050565b600060208284031215611ee0578081fd5b8135611d7f816128e0565b600060208284031215611efc578081fd5b8151611d7f816128e0565b600060208284031215611f18578081fd5b813567ffffffffffffffff811115611f2e578182fd5b8201601f81018413611f3e578182fd5b610e5884823560208401611cde565b600060208284031215611f5e578081fd5b5035919050565b60008060408385031215611f77578182fd5b50508035926020909101359150565b60008151808452611f9e816020860160208601612808565b601f01601f19169290920160200192915050565b60008351611fc4818460208801612808565b835190830190611fd8818360208801612808565b64173539b7b760d91b9101908152600501949350505050565b938452602084019290925260601b6bffffffffffffffffffffffff19166040830152605482015260740190565b6001600160a01b0391909116815260200190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061206590830184611f86565b9695505050505050565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156120c0578351835292840192918401916001016120a4565b50909695505050505050565b901515815260200190565b600060208252611d7f6020830184611f86565b60208082526018908201527f4e6f7420656e6f756768206c65667420746f206d696e742e0000000000000000604082015260600190565b6020808252601a908201527f45524332393831526f79616c746965733a20546f6f2068696768000000000000604082015260600190565b60208082526024908201527f49742773206e6f7420706f737369626c6520746f20636c61696d206a757374206040820152633cb2ba1760e11b606082015260800190565b6020808252601390820152724e6f7468696e6720746f20776974686472617760681b604082015260600190565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526013908201527204d61782070657220636c61696d20697320313606c1b604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252601f908201527f4e756d626572206e65656420746f20626520686967686572207468616e203000604082015260600190565b6020808252601690820152752cb7bab91030b932903737ba103a34329037bbb732b960511b604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b60208082526023908201527f45746865722076616c75652073656e742069732062656c6f772074686520707260408201526269636560e81b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b90815260200190565b600082198211156127b9576127b961289e565b500190565b6000826127cd576127cd6128b4565b500490565b60008160001904831182151516156127ec576127ec61289e565b500290565b6000828210156128035761280361289e565b500390565b60005b8381101561282357818101518382015260200161280b565b83811115610b165750506000910152565b60028104600182168061284857607f821691505b6020821081141561286957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156128835761288361289e565b5060010190565b600082612899576128996128b4565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610ba657600080fdfea2646970667358221220fea7669942742563988290691ef1952df8fda052e85e2992194b26f634bd1db864736f6c63430008000033697066733a2f2f516d556d526b615371384537744268414558487157756e4a3366623863535866366f4e3273446e45656e534a6d622f",
  deployedBytecode:
    "0x6080604052600436106101f25760003560e01c80635471f49f1161010d57806395d89b41116100a0578063c87b56dd1161006f578063c87b56dd14610535578063c94364e314610555578063d6bc59421461056a578063e985e9c514610597578063f2fde38b146105b7576101f9565b806395d89b41146104c0578063a0bcfc7f146104d5578063a22cb465146104f5578063b88d4fde14610515576101f9565b806370a08231116100dc57806370a0823114610461578063715018a6146104815780638da5cb5b1461049657806393791b03146104ab576101f9565b80635471f49f146104025780636352211e14610417578063676dd563146104375780636dc7a6271461044c576101f9565b80632a6432a4116101855780633f879faf116101545780633f879faf1461039857806342842e0e146103ad5780634f02c420146103cd5780634f6ccce7146103e2576101f9565b80632a6432a4146103305780632f745c5914610350578063379607f5146103705780633ccfd60b14610383576101f9565b806313af4035116101c157806313af4035146102a057806318160ddd146102c057806323b872dd146102e25780632a55205a14610302576101f9565b806301ffc9a7146101fb57806306fdde0314610231578063081812fc14610253578063095ea7b314610280576101f9565b366101f957005b005b34801561020757600080fd5b5061021b610216366004611ecf565b6105d7565b60405161022891906120cc565b60405180910390f35b34801561023d57600080fd5b506102466105ea565b60405161022891906120d7565b34801561025f57600080fd5b5061027361026e366004611f4d565b61067d565b604051610228919061201e565b34801561028c57600080fd5b506101f961029b366004611ea6565b6106c9565b3480156102ac57600080fd5b506101f96102bb366004611d65565b610761565b3480156102cc57600080fd5b506102d56107c2565b604051610228919061279d565b3480156102ee57600080fd5b506101f96102fd366004611db8565b6107c8565b34801561030e57600080fd5b5061032261031d366004611f65565b610800565b60405161022892919061206f565b34801561033c57600080fd5b506101f961034b366004611d65565b61085e565b34801561035c57600080fd5b506102d561036b366004611ea6565b6108bf565b6101f961037e366004611f4d565b610911565b34801561038f57600080fd5b506101f9610b1c565b3480156103a457600080fd5b506102d5610ba9565b3480156103b957600080fd5b506101f96103c8366004611db8565b610baf565b3480156103d957600080fd5b506102d5610bca565b3480156103ee57600080fd5b506102d56103fd366004611f4d565b610bd0565b34801561040e57600080fd5b506102d5610c2b565b34801561042357600080fd5b50610273610432366004611f4d565b610c30565b34801561044357600080fd5b506102d5610c65565b34801561045857600080fd5b5061021b610c71565b34801561046d57600080fd5b506102d561047c366004611d65565b610c7a565b34801561048d57600080fd5b506101f9610cbe565b3480156104a257600080fd5b50610273610d09565b3480156104b757600080fd5b506102d5610d18565b3480156104cc57600080fd5b50610246610d1e565b3480156104e157600080fd5b506101f96104f0366004611f07565b610d2d565b34801561050157600080fd5b506101f9610510366004611e6c565b610d83565b34801561052157600080fd5b506101f9610530366004611df3565b610d95565b34801561054157600080fd5b50610246610550366004611f4d565b610dce565b34801561056157600080fd5b506101f9610e60565b34801561057657600080fd5b5061058a610585366004611d65565b610eb3565b6040516102289190612088565b3480156105a357600080fd5b5061021b6105b2366004611d86565b610f80565b3480156105c357600080fd5b506101f96105d2366004611d65565b610fae565b60006105e28261101c565b90505b919050565b6060600080546105f990612834565b80601f016020809104026020016040519081016040528092919081815260200182805461062590612834565b80156106725780601f1061064757610100808354040283529160200191610672565b820191906000526020600020905b81548152906001019060200180831161065557829003601f168201915b505050505090505b90565b600061068882611041565b6106ad5760405162461bcd60e51b81526004016106a4906125a6565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106d482610c30565b9050806001600160a01b0316836001600160a01b031614156107085760405162461bcd60e51b81526004016106a4906126bf565b806001600160a01b031661071a61105e565b6001600160a01b031614806107365750610736816105b261105e565b6107525760405162461bcd60e51b81526004016106a49061243e565b61075c8383611062565b505050565b61076961105e565b6001600160a01b031661077a610d09565b6001600160a01b0316146107a05760405162461bcd60e51b81526004016106a4906125f2565b601480546001600160a01b0319166001600160a01b0392909216919091179055565b60085490565b6107d96107d361105e565b826110d0565b6107f55760405162461bcd60e51b81526004016106a490612700565b61075c83838361114d565b6000828152600b602090815260408083208151808301909252546001600160a01b038116808352600160a01b90910462ffffff1692820183905292916127109061084a90866127d2565b61085491906127be565b9150509250929050565b61086661105e565b6001600160a01b0316610877610d09565b6001600160a01b03161461089d5760405162461bcd60e51b81526004016106a4906125f2565b601580546001600160a01b0319166001600160a01b0392909216919091179055565b60006108ca83610c7a565b82106108e85760405162461bcd60e51b81526004016106a4906121c9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b60125460ff166109335760405162461bcd60e51b81526004016106a490612158565b6115b36011548261094491906127a6565b11156109625760405162461bcd60e51b81526004016106a4906120ea565b600081116109825760405162461bcd60e51b81526004016106a4906123d7565b600a8111156109a35760405162461bcd60e51b81526004016106a4906122e3565b6109b581670bcbce7f1b1500006127d2565b3410156109d45760405162461bcd60e51b81526004016106a49061252e565b60006109e882670bcbce7f1b1500006127d2565b905080601360008282546109fc91906127a6565b9091555060009050610a0e82346127f1565b604051909150309083156108fc029084906000818181858888f19350505050158015610a3e573d6000803e3d6000fd5b5060005b83811015610acf57610a5d610a5561105e565b60115461127a565b601154601554610a7991906001600160a01b031661012c6112fc565b600160116000828254610a8c91906127a6565b90915550506011546040517f7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f790600090a280610ac78161286f565b915050610a42565b50801561075c57610ade61105e565b6001600160a01b03166108fc829081150290604051600060405180830381858888f19350505050158015610b16573d6000803e3d6000fd5b50505050565b6014546001600160a01b03163314610b465760405162461bcd60e51b81526004016106a49061240e565b60004711610b665760405162461bcd60e51b81526004016106a49061219c565b610b6e61105e565b6001600160a01b03166108fc479081150290604051600060405180830381858888f19350505050158015610ba6573d6000803e3d6000fd5b50565b6115b381565b61075c83838360405180602001604052806000815250610d95565b60115481565b6000610bda6107c2565b8210610bf85760405162461bcd60e51b81526004016106a490612751565b60088281548110610c1957634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600a81565b6000818152600260205260408120546001600160a01b0316806105e25760405162461bcd60e51b81526004016106a4906124e5565b670bcbce7f1b15000081565b60125460ff1681565b60006001600160a01b038216610ca25760405162461bcd60e51b81526004016106a49061249b565b506001600160a01b031660009081526003602052604090205490565b610cc661105e565b6001600160a01b0316610cd7610d09565b6001600160a01b031614610cfd5760405162461bcd60e51b81526004016106a4906125f2565b610d07600061137e565b565b600a546001600160a01b031690565b61012c81565b6060600180546105f990612834565b610d3561105e565b6001600160a01b0316610d46610d09565b6001600160a01b031614610d6c5760405162461bcd60e51b81526004016106a4906125f2565b8051610d7f906010906020840190611c45565b5050565b610d7f610d8e61105e565b83836113d0565b610da6610da061105e565b836110d0565b610dc25760405162461bcd60e51b81526004016106a490612700565b610b1684848484611473565b6060610dd982611041565b610df55760405162461bcd60e51b81526004016106a490612670565b6000610dff6114a6565b6000848152600e6020526040902054815191925090610e2d5760405180602001604052806000815250610e58565b81610e37826114b5565b604051602001610e48929190611fb2565b6040516020818303038152906040525b949350505050565b610e6861105e565b6001600160a01b0316610e79610d09565b6001600160a01b031614610e9f5760405162461bcd60e51b81526004016106a4906125f2565b6012805460ff19811660ff90911615179055565b60606000610ec083610c7a565b67ffffffffffffffff811115610ee657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610f0f578160200160208202803683370190505b5090506000610f1d84610c7a565b905060005b81811015610f77576000610f3686836108bf565b905080848381518110610f5957634e487b7160e01b600052603260045260246000fd5b60209081029190910101525080610f6f8161286f565b915050610f22565b50909392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610fb661105e565b6001600160a01b0316610fc7610d09565b6001600160a01b031614610fed5760405162461bcd60e51b81526004016106a4906125f2565b6001600160a01b0381166110135760405162461bcd60e51b81526004016106a490612266565b610ba68161137e565b60006001600160e01b0319821663152a902d60e11b14806105e257506105e2826115d0565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061109782610c30565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006110db82611041565b6110f75760405162461bcd60e51b81526004016106a49061238b565b600061110283610c30565b9050806001600160a01b0316846001600160a01b0316148061113d5750836001600160a01b03166111328461067d565b6001600160a01b0316145b80610e585750610e588185610f80565b826001600160a01b031661116082610c30565b6001600160a01b0316146111865760405162461bcd60e51b81526004016106a490612627565b6001600160a01b0382166111ac5760405162461bcd60e51b81526004016106a490612310565b6111b78383836115f5565b6111c2600082611062565b6001600160a01b03831660009081526003602052604081208054600192906111eb9084906127f1565b90915550506001600160a01b03821660009081526003602052604081208054600192906112199084906127a6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611284611600565b90506000600d601154101561129a5750816112a6565b6112a382611661565b90505b6000818152600f6020526040902054156112d057634e487b7160e01b600052600160045260246000fd5b6000818152600f6020908152604080832060019055858352600e9091529020819055610b168484611718565b61271081111561131e5760405162461bcd60e51b81526004016106a490612121565b6040805180820182526001600160a01b03938416815262ffffff92831660208083019182526000968752600b905291909420935184549151909216600160a01b0262ffffff60a01b19929093166001600160a01b03199091161716179055565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156114025760405162461bcd60e51b81526004016106a490612354565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31906114669085906120cc565b60405180910390a3505050565b61147e84848461114d565b61148a84848484611732565b610b165760405162461bcd60e51b81526004016106a490612214565b6060601080546105f990612834565b6060816114da57506040805180820190915260018152600360fc1b60208201526105e5565b8160005b811561150457806114ee8161286f565b91506114fd9050600a836127be565b91506114de565b60008167ffffffffffffffff81111561152d57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611557576020820181803683370190505b5090505b8415610e585761156c6001836127f1565b9150611579600a8661288a565b6115849060306127a6565b60f81b8183815181106115a757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506115c9600a866127be565b945061155b565b60006001600160e01b0319821663780e9d6360e01b14806105e257506105e28261184d565b61075c83838361188d565b60006011546115b361161291906127f1565b61161e5750600061067a565b600d5444423343406040516020016116399493929190611ff1565b6040516020818303038152906040528051906020012060001c61165c919061288a565b905090565b6000818152600c6020526040812054806116785750815b600c60006001600d5461168b91906127f1565b815260200190815260200160002054600014156116c5576001600d546116b191906127f1565b6000848152600c60205260409020556116f9565b600c60006001600d546116d891906127f1565b81526020808201929092526040908101600090812054868252600c90935220555b6001600d600082825461170c91906127f1565b90915550909392505050565b610d7f828260405180602001604052806000815250611916565b6000611746846001600160a01b0316611949565b1561184257836001600160a01b031663150b7a0261176261105e565b8786866040518563ffffffff1660e01b81526004016117849493929190612032565b602060405180830381600087803b15801561179e57600080fd5b505af19250505080156117ce575060408051601f3d908101601f191682019092526117cb91810190611eeb565b60015b611828573d8080156117fc576040519150601f19603f3d011682016040523d82523d6000602084013e611801565b606091505b5080516118205760405162461bcd60e51b81526004016106a490612214565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e58565b506001949350505050565b60006001600160e01b031982166380ac58cd60e01b148061187e57506001600160e01b03198216635b5e139f60e01b145b806105e257506105e28261194f565b61189883838361075c565b6001600160a01b0383166118b4576118af81611968565b6118d7565b816001600160a01b0316836001600160a01b0316146118d7576118d783826119ac565b6001600160a01b0382166118f3576118ee81611a49565b61075c565b826001600160a01b0316826001600160a01b03161461075c5761075c8282611b22565b6119208383611b66565b61192d6000848484611732565b61075c5760405162461bcd60e51b81526004016106a490612214565b3b151590565b6001600160e01b031981166301ffc9a760e01b14919050565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b600060016119b984610c7a565b6119c391906127f1565b600083815260076020526040902054909150808214611a16576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611a5b906001906127f1565b60008381526009602052604081205460088054939450909284908110611a9157634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060088381548110611ac057634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611b0657634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000611b2d83610c7a565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611b8c5760405162461bcd60e51b81526004016106a490612571565b611b9581611041565b15611bb25760405162461bcd60e51b81526004016106a4906122ac565b611bbe600083836115f5565b6001600160a01b0382166000908152600360205260408120805460019290611be79084906127a6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611c5190612834565b90600052602060002090601f016020900481019282611c735760008555611cb9565b82601f10611c8c57805160ff1916838001178555611cb9565b82800160010185558215611cb9579182015b82811115611cb9578251825591602001919060010190611c9e565b50611cc5929150611cc9565b5090565b5b80821115611cc55760008155600101611cca565b600067ffffffffffffffff80841115611cf957611cf96128ca565b604051601f8501601f191681016020018281118282101715611d1d57611d1d6128ca565b604052848152915081838501861015611d3557600080fd5b8484602083013760006020868301015250509392505050565b80356001600160a01b03811681146105e557600080fd5b600060208284031215611d76578081fd5b611d7f82611d4e565b9392505050565b60008060408385031215611d98578081fd5b611da183611d4e565b9150611daf60208401611d4e565b90509250929050565b600080600060608486031215611dcc578081fd5b611dd584611d4e565b9250611de360208501611d4e565b9150604084013590509250925092565b60008060008060808587031215611e08578081fd5b611e1185611d4e565b9350611e1f60208601611d4e565b925060408501359150606085013567ffffffffffffffff811115611e41578182fd5b8501601f81018713611e51578182fd5b611e6087823560208401611cde565b91505092959194509250565b60008060408385031215611e7e578182fd5b611e8783611d4e565b915060208301358015158114611e9b578182fd5b809150509250929050565b60008060408385031215611eb8578182fd5b611ec183611d4e565b946020939093013593505050565b600060208284031215611ee0578081fd5b8135611d7f816128e0565b600060208284031215611efc578081fd5b8151611d7f816128e0565b600060208284031215611f18578081fd5b813567ffffffffffffffff811115611f2e578182fd5b8201601f81018413611f3e578182fd5b610e5884823560208401611cde565b600060208284031215611f5e578081fd5b5035919050565b60008060408385031215611f77578182fd5b50508035926020909101359150565b60008151808452611f9e816020860160208601612808565b601f01601f19169290920160200192915050565b60008351611fc4818460208801612808565b835190830190611fd8818360208801612808565b64173539b7b760d91b9101908152600501949350505050565b938452602084019290925260601b6bffffffffffffffffffffffff19166040830152605482015260740190565b6001600160a01b0391909116815260200190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061206590830184611f86565b9695505050505050565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156120c0578351835292840192918401916001016120a4565b50909695505050505050565b901515815260200190565b600060208252611d7f6020830184611f86565b60208082526018908201527f4e6f7420656e6f756768206c65667420746f206d696e742e0000000000000000604082015260600190565b6020808252601a908201527f45524332393831526f79616c746965733a20546f6f2068696768000000000000604082015260600190565b60208082526024908201527f49742773206e6f7420706f737369626c6520746f20636c61696d206a757374206040820152633cb2ba1760e11b606082015260800190565b6020808252601390820152724e6f7468696e6720746f20776974686472617760681b604082015260600190565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526013908201527204d61782070657220636c61696d20697320313606c1b604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252601f908201527f4e756d626572206e65656420746f20626520686967686572207468616e203000604082015260600190565b6020808252601690820152752cb7bab91030b932903737ba103a34329037bbb732b960511b604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b60208082526023908201527f45746865722076616c75652073656e742069732062656c6f772074686520707260408201526269636560e81b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b90815260200190565b600082198211156127b9576127b961289e565b500190565b6000826127cd576127cd6128b4565b500490565b60008160001904831182151516156127ec576127ec61289e565b500290565b6000828210156128035761280361289e565b500390565b60005b8381101561282357818101518382015260200161280b565b83811115610b165750506000910152565b60028104600182168061284857607f821691505b6020821081141561286957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156128835761288361289e565b5060010190565b600082612899576128996128b4565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610ba657600080fdfea2646970667358221220fea7669942742563988290691ef1952df8fda052e85e2992194b26f634bd1db864736f6c63430008000033",
  immutableReferences: {},
  generatedSources: [
    {
      ast: {
        nodeType: "YulBlock",
        src: "0:2591:16",
        statements: [
          {
            nodeType: "YulBlock",
            src: "6:3:16",
            statements: [],
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "76:117:16",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "86:22:16",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "101:6:16",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "95:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "95:13:16",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "86:5:16",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "171:16:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "180:1:16",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "183:1:16",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "173:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "173:12:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "173:12:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "130:5:16",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "141:5:16",
                              },
                              {
                                arguments: [
                                  {
                                    arguments: [
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "156:3:16",
                                        type: "",
                                        value: "160",
                                      },
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "161:1:16",
                                        type: "",
                                        value: "1",
                                      },
                                    ],
                                    functionName: {
                                      name: "shl",
                                      nodeType: "YulIdentifier",
                                      src: "152:3:16",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "152:11:16",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "165:1:16",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "sub",
                                  nodeType: "YulIdentifier",
                                  src: "148:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "148:19:16",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "137:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "137:31:16",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "127:2:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "127:42:16",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "120:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "120:50:16",
                  },
                  nodeType: "YulIf",
                  src: "117:2:16",
                },
              ],
            },
            name: "abi_decode_t_address_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "55:6:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "66:5:16",
                type: "",
              },
            ],
            src: "14:179:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "264:815:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "313:24:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "array",
                              nodeType: "YulIdentifier",
                              src: "322:5:16",
                            },
                            {
                              name: "array",
                              nodeType: "YulIdentifier",
                              src: "329:5:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "315:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "315:20:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "315:20:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "292:6:16",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "300:4:16",
                                type: "",
                                value: "0x1f",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "288:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "288:17:16",
                          },
                          {
                            name: "end",
                            nodeType: "YulIdentifier",
                            src: "307:3:16",
                          },
                        ],
                        functionName: {
                          name: "slt",
                          nodeType: "YulIdentifier",
                          src: "284:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "284:27:16",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "277:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "277:35:16",
                  },
                  nodeType: "YulIf",
                  src: "274:2:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "346:23:16",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "362:6:16",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "356:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "356:13:16",
                  },
                  variables: [
                    {
                      name: "_1",
                      nodeType: "YulTypedName",
                      src: "350:2:16",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "378:28:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "396:2:16",
                            type: "",
                            value: "64",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "400:1:16",
                            type: "",
                            value: "1",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "392:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "392:10:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "404:1:16",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "388:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "388:18:16",
                  },
                  variables: [
                    {
                      name: "_2",
                      nodeType: "YulTypedName",
                      src: "382:2:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "429:22:16",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x41",
                            nodeType: "YulIdentifier",
                            src: "431:16:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "431:18:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "431:18:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "_1",
                        nodeType: "YulIdentifier",
                        src: "421:2:16",
                      },
                      {
                        name: "_2",
                        nodeType: "YulIdentifier",
                        src: "425:2:16",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "418:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "418:10:16",
                  },
                  nodeType: "YulIf",
                  src: "415:2:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "460:23:16",
                  value: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "480:2:16",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "474:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "474:9:16",
                  },
                  variables: [
                    {
                      name: "memPtr",
                      nodeType: "YulTypedName",
                      src: "464:6:16",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "492:14:16",
                  value: {
                    kind: "number",
                    nodeType: "YulLiteral",
                    src: "502:4:16",
                    type: "",
                    value: "0x20",
                  },
                  variables: [
                    {
                      name: "_3",
                      nodeType: "YulTypedName",
                      src: "496:2:16",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "515:67:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "541:6:16",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    name: "_1",
                                    nodeType: "YulIdentifier",
                                    src: "557:2:16",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "561:4:16",
                                    type: "",
                                    value: "0x1f",
                                  },
                                ],
                                functionName: {
                                  name: "add",
                                  nodeType: "YulIdentifier",
                                  src: "553:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "553:13:16",
                              },
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "572:2:16",
                                    type: "",
                                    value: "31",
                                  },
                                ],
                                functionName: {
                                  name: "not",
                                  nodeType: "YulIdentifier",
                                  src: "568:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "568:7:16",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "549:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "549:27:16",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "537:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "537:40:16",
                      },
                      {
                        name: "_3",
                        nodeType: "YulIdentifier",
                        src: "579:2:16",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "533:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "533:49:16",
                  },
                  variables: [
                    {
                      name: "newFreePtr",
                      nodeType: "YulTypedName",
                      src: "519:10:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "641:22:16",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x41",
                            nodeType: "YulIdentifier",
                            src: "643:16:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "643:18:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "643:18:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "newFreePtr",
                            nodeType: "YulIdentifier",
                            src: "600:10:16",
                          },
                          {
                            name: "_2",
                            nodeType: "YulIdentifier",
                            src: "612:2:16",
                          },
                        ],
                        functionName: {
                          name: "gt",
                          nodeType: "YulIdentifier",
                          src: "597:2:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "597:18:16",
                      },
                      {
                        arguments: [
                          {
                            name: "newFreePtr",
                            nodeType: "YulIdentifier",
                            src: "620:10:16",
                          },
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "632:6:16",
                          },
                        ],
                        functionName: {
                          name: "lt",
                          nodeType: "YulIdentifier",
                          src: "617:2:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "617:22:16",
                      },
                    ],
                    functionName: {
                      name: "or",
                      nodeType: "YulIdentifier",
                      src: "594:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "594:46:16",
                  },
                  nodeType: "YulIf",
                  src: "591:2:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "679:2:16",
                        type: "",
                        value: "64",
                      },
                      {
                        name: "newFreePtr",
                        nodeType: "YulIdentifier",
                        src: "683:10:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "672:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "672:22:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "672:22:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "memPtr",
                        nodeType: "YulIdentifier",
                        src: "710:6:16",
                      },
                      {
                        name: "_1",
                        nodeType: "YulIdentifier",
                        src: "718:2:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "703:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "703:18:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "703:18:16",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "767:24:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "array",
                              nodeType: "YulIdentifier",
                              src: "776:5:16",
                            },
                            {
                              name: "array",
                              nodeType: "YulIdentifier",
                              src: "783:5:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "769:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "769:20:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "769:20:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "744:6:16",
                              },
                              {
                                name: "_1",
                                nodeType: "YulIdentifier",
                                src: "752:2:16",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "740:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "740:15:16",
                          },
                          {
                            name: "_3",
                            nodeType: "YulIdentifier",
                            src: "757:2:16",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "736:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "736:24:16",
                      },
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "762:3:16",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "733:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "733:33:16",
                  },
                  nodeType: "YulIf",
                  src: "730:2:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "800:14:16",
                  value: {
                    name: "array",
                    nodeType: "YulIdentifier",
                    src: "809:5:16",
                  },
                  variables: [
                    {
                      name: "i",
                      nodeType: "YulTypedName",
                      src: "804:1:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "869:87:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: "memPtr",
                                      nodeType: "YulIdentifier",
                                      src: "898:6:16",
                                    },
                                    {
                                      name: "i",
                                      nodeType: "YulIdentifier",
                                      src: "906:1:16",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "894:3:16",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "894:14:16",
                                },
                                {
                                  name: "_3",
                                  nodeType: "YulIdentifier",
                                  src: "910:2:16",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "890:3:16",
                              },
                              nodeType: "YulFunctionCall",
                              src: "890:23:16",
                            },
                            {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      arguments: [
                                        {
                                          name: "offset",
                                          nodeType: "YulIdentifier",
                                          src: "929:6:16",
                                        },
                                        {
                                          name: "i",
                                          nodeType: "YulIdentifier",
                                          src: "937:1:16",
                                        },
                                      ],
                                      functionName: {
                                        name: "add",
                                        nodeType: "YulIdentifier",
                                        src: "925:3:16",
                                      },
                                      nodeType: "YulFunctionCall",
                                      src: "925:14:16",
                                    },
                                    {
                                      name: "_3",
                                      nodeType: "YulIdentifier",
                                      src: "941:2:16",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "921:3:16",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "921:23:16",
                                },
                              ],
                              functionName: {
                                name: "mload",
                                nodeType: "YulIdentifier",
                                src: "915:5:16",
                              },
                              nodeType: "YulFunctionCall",
                              src: "915:30:16",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "883:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "883:63:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "883:63:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "i",
                        nodeType: "YulIdentifier",
                        src: "834:1:16",
                      },
                      {
                        name: "_1",
                        nodeType: "YulIdentifier",
                        src: "837:2:16",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "831:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "831:9:16",
                  },
                  nodeType: "YulForLoop",
                  post: {
                    nodeType: "YulBlock",
                    src: "841:19:16",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "843:15:16",
                        value: {
                          arguments: [
                            {
                              name: "i",
                              nodeType: "YulIdentifier",
                              src: "852:1:16",
                            },
                            {
                              name: "_3",
                              nodeType: "YulIdentifier",
                              src: "855:2:16",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "848:3:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "848:10:16",
                        },
                        variableNames: [
                          {
                            name: "i",
                            nodeType: "YulIdentifier",
                            src: "843:1:16",
                          },
                        ],
                      },
                    ],
                  },
                  pre: {
                    nodeType: "YulBlock",
                    src: "827:3:16",
                    statements: [],
                  },
                  src: "823:133:16",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "986:63:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: "memPtr",
                                      nodeType: "YulIdentifier",
                                      src: "1015:6:16",
                                    },
                                    {
                                      name: "_1",
                                      nodeType: "YulIdentifier",
                                      src: "1023:2:16",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "1011:3:16",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "1011:15:16",
                                },
                                {
                                  name: "_3",
                                  nodeType: "YulIdentifier",
                                  src: "1028:2:16",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1007:3:16",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1007:24:16",
                            },
                            {
                              name: "array",
                              nodeType: "YulIdentifier",
                              src: "1033:5:16",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "1000:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1000:39:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1000:39:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "i",
                        nodeType: "YulIdentifier",
                        src: "971:1:16",
                      },
                      {
                        name: "_1",
                        nodeType: "YulIdentifier",
                        src: "974:2:16",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "968:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "968:9:16",
                  },
                  nodeType: "YulIf",
                  src: "965:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1058:15:16",
                  value: {
                    name: "memPtr",
                    nodeType: "YulIdentifier",
                    src: "1067:6:16",
                  },
                  variableNames: [
                    {
                      name: "array",
                      nodeType: "YulIdentifier",
                      src: "1058:5:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_t_string_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "238:6:16",
                type: "",
              },
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "246:3:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "array",
                nodeType: "YulTypedName",
                src: "254:5:16",
                type: "",
              },
            ],
            src: "198:881:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1263:809:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1310:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value4",
                              nodeType: "YulIdentifier",
                              src: "1319:6:16",
                            },
                            {
                              name: "value4",
                              nodeType: "YulIdentifier",
                              src: "1327:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1312:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1312:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1312:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1284:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1293:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "1280:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1280:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1305:3:16",
                        type: "",
                        value: "160",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "1276:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1276:33:16",
                  },
                  nodeType: "YulIf",
                  src: "1273:2:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "1345:30:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1365:9:16",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "1359:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1359:16:16",
                  },
                  variables: [
                    {
                      name: "offset",
                      nodeType: "YulTypedName",
                      src: "1349:6:16",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "1384:28:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1402:2:16",
                            type: "",
                            value: "64",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1406:1:16",
                            type: "",
                            value: "1",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "1398:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1398:10:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1410:1:16",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "1394:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1394:18:16",
                  },
                  variables: [
                    {
                      name: "_1",
                      nodeType: "YulTypedName",
                      src: "1388:2:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1439:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value4",
                              nodeType: "YulIdentifier",
                              src: "1448:6:16",
                            },
                            {
                              name: "value4",
                              nodeType: "YulIdentifier",
                              src: "1456:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1441:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1441:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1441:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "1427:6:16",
                      },
                      {
                        name: "_1",
                        nodeType: "YulIdentifier",
                        src: "1435:2:16",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "1424:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1424:14:16",
                  },
                  nodeType: "YulIf",
                  src: "1421:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1474:73:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1519:9:16",
                          },
                          {
                            name: "offset",
                            nodeType: "YulIdentifier",
                            src: "1530:6:16",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1515:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1515:22:16",
                      },
                      {
                        name: "dataEnd",
                        nodeType: "YulIdentifier",
                        src: "1539:7:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_string_fromMemory",
                      nodeType: "YulIdentifier",
                      src: "1484:30:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1484:63:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "1474:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "1556:41:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1582:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1593:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1578:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1578:18:16",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "1572:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1572:25:16",
                  },
                  variables: [
                    {
                      name: "offset_1",
                      nodeType: "YulTypedName",
                      src: "1560:8:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1626:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value4",
                              nodeType: "YulIdentifier",
                              src: "1635:6:16",
                            },
                            {
                              name: "value4",
                              nodeType: "YulIdentifier",
                              src: "1643:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1628:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1628:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1628:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "offset_1",
                        nodeType: "YulIdentifier",
                        src: "1612:8:16",
                      },
                      {
                        name: "_1",
                        nodeType: "YulIdentifier",
                        src: "1622:2:16",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "1609:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1609:16:16",
                  },
                  nodeType: "YulIf",
                  src: "1606:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1661:75:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1706:9:16",
                          },
                          {
                            name: "offset_1",
                            nodeType: "YulIdentifier",
                            src: "1717:8:16",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1702:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1702:24:16",
                      },
                      {
                        name: "dataEnd",
                        nodeType: "YulIdentifier",
                        src: "1728:7:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_string_fromMemory",
                      nodeType: "YulIdentifier",
                      src: "1671:30:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1671:65:16",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "1661:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "1745:41:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1771:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1782:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1767:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1767:18:16",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "1761:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1761:25:16",
                  },
                  variables: [
                    {
                      name: "offset_2",
                      nodeType: "YulTypedName",
                      src: "1749:8:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1815:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value4",
                              nodeType: "YulIdentifier",
                              src: "1824:6:16",
                            },
                            {
                              name: "value4",
                              nodeType: "YulIdentifier",
                              src: "1832:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1817:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1817:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1817:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "offset_2",
                        nodeType: "YulIdentifier",
                        src: "1801:8:16",
                      },
                      {
                        name: "_1",
                        nodeType: "YulIdentifier",
                        src: "1811:2:16",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "1798:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1798:16:16",
                  },
                  nodeType: "YulIf",
                  src: "1795:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1850:75:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1895:9:16",
                          },
                          {
                            name: "offset_2",
                            nodeType: "YulIdentifier",
                            src: "1906:8:16",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1891:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1891:24:16",
                      },
                      {
                        name: "dataEnd",
                        nodeType: "YulIdentifier",
                        src: "1917:7:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_string_fromMemory",
                      nodeType: "YulIdentifier",
                      src: "1860:30:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1860:65:16",
                  },
                  variableNames: [
                    {
                      name: "value2",
                      nodeType: "YulIdentifier",
                      src: "1850:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "1934:61:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1980:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1991:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1976:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1976:18:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_address_fromMemory",
                      nodeType: "YulIdentifier",
                      src: "1944:31:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1944:51:16",
                  },
                  variableNames: [
                    {
                      name: "value3",
                      nodeType: "YulIdentifier",
                      src: "1934:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "2004:62:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2050:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2061:3:16",
                            type: "",
                            value: "128",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "2046:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2046:19:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_address_fromMemory",
                      nodeType: "YulIdentifier",
                      src: "2014:31:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2014:52:16",
                  },
                  variableNames: [
                    {
                      name: "value4",
                      nodeType: "YulIdentifier",
                      src: "2004:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1197:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "1208:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1220:6:16",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "1228:6:16",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "1236:6:16",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "1244:6:16",
                type: "",
              },
              {
                name: "value4",
                nodeType: "YulTypedName",
                src: "1252:6:16",
                type: "",
              },
            ],
            src: "1084:988:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2132:325:16",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "2142:22:16",
                  value: {
                    arguments: [
                      {
                        name: "data",
                        nodeType: "YulIdentifier",
                        src: "2156:4:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2162:1:16",
                        type: "",
                        value: "2",
                      },
                    ],
                    functionName: {
                      name: "div",
                      nodeType: "YulIdentifier",
                      src: "2152:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2152:12:16",
                  },
                  variableNames: [
                    {
                      name: "length",
                      nodeType: "YulIdentifier",
                      src: "2142:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "2173:38:16",
                  value: {
                    arguments: [
                      {
                        name: "data",
                        nodeType: "YulIdentifier",
                        src: "2203:4:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2209:1:16",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "2199:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2199:12:16",
                  },
                  variables: [
                    {
                      name: "outOfPlaceEncoding",
                      nodeType: "YulTypedName",
                      src: "2177:18:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2250:31:16",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "2252:27:16",
                        value: {
                          arguments: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "2266:6:16",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2274:4:16",
                              type: "",
                              value: "0x7f",
                            },
                          ],
                          functionName: {
                            name: "and",
                            nodeType: "YulIdentifier",
                            src: "2262:3:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2262:17:16",
                        },
                        variableNames: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "2252:6:16",
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "outOfPlaceEncoding",
                        nodeType: "YulIdentifier",
                        src: "2230:18:16",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "2223:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2223:26:16",
                  },
                  nodeType: "YulIf",
                  src: "2220:2:16",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2340:111:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2361:1:16",
                              type: "",
                              value: "0",
                            },
                            {
                              arguments: [
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "2368:3:16",
                                  type: "",
                                  value: "224",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "2373:10:16",
                                  type: "",
                                  value: "0x4e487b71",
                                },
                              ],
                              functionName: {
                                name: "shl",
                                nodeType: "YulIdentifier",
                                src: "2364:3:16",
                              },
                              nodeType: "YulFunctionCall",
                              src: "2364:20:16",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "2354:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2354:31:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2354:31:16",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2405:1:16",
                              type: "",
                              value: "4",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2408:4:16",
                              type: "",
                              value: "0x22",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "2398:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2398:15:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2398:15:16",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2433:1:16",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2436:4:16",
                              type: "",
                              value: "0x24",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "2426:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2426:15:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2426:15:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "outOfPlaceEncoding",
                        nodeType: "YulIdentifier",
                        src: "2296:18:16",
                      },
                      {
                        arguments: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "2319:6:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2327:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "lt",
                          nodeType: "YulIdentifier",
                          src: "2316:2:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2316:14:16",
                      },
                    ],
                    functionName: {
                      name: "eq",
                      nodeType: "YulIdentifier",
                      src: "2293:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2293:38:16",
                  },
                  nodeType: "YulIf",
                  src: "2290:2:16",
                },
              ],
            },
            name: "extract_byte_array_length",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "data",
                nodeType: "YulTypedName",
                src: "2112:4:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "2121:6:16",
                type: "",
              },
            ],
            src: "2077:380:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2494:95:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2511:1:16",
                        type: "",
                        value: "0",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2518:3:16",
                            type: "",
                            value: "224",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2523:10:16",
                            type: "",
                            value: "0x4e487b71",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "2514:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2514:20:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2504:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2504:31:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2504:31:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2551:1:16",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2554:4:16",
                        type: "",
                        value: "0x41",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "2544:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2544:15:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2544:15:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2575:1:16",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2578:4:16",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "2568:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2568:15:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2568:15:16",
                },
              ],
            },
            name: "panic_error_0x41",
            nodeType: "YulFunctionDefinition",
            src: "2462:127:16",
          },
        ],
      },
      contents:
        "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value4, value4) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value2 := abi_decode_t_string_fromMemory(add(headStart, offset_2), dataEnd)\n        value3 := abi_decode_t_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_t_address_fromMemory(add(headStart, 128))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      id: 16,
      language: "Yul",
      name: "#utility.yul",
    },
  ],
  deployedGeneratedSources: [
    {
      ast: {
        nodeType: "YulBlock",
        src: "0:20146:16",
        statements: [
          {
            nodeType: "YulBlock",
            src: "6:3:16",
            statements: [],
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "90:531:16",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "100:28:16",
                  value: {
                    kind: "number",
                    nodeType: "YulLiteral",
                    src: "110:18:16",
                    type: "",
                    value: "0xffffffffffffffff",
                  },
                  variables: [
                    {
                      name: "_1",
                      nodeType: "YulTypedName",
                      src: "104:2:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "155:22:16",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x41",
                            nodeType: "YulIdentifier",
                            src: "157:16:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "157:18:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "157:18:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "143:6:16",
                      },
                      {
                        name: "_1",
                        nodeType: "YulIdentifier",
                        src: "151:2:16",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "140:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "140:14:16",
                  },
                  nodeType: "YulIf",
                  src: "137:2:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "186:23:16",
                  value: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "206:2:16",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "200:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "200:9:16",
                  },
                  variables: [
                    {
                      name: "memPtr",
                      nodeType: "YulTypedName",
                      src: "190:6:16",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "218:73:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "244:6:16",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    name: "length",
                                    nodeType: "YulIdentifier",
                                    src: "260:6:16",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "268:4:16",
                                    type: "",
                                    value: "0x1f",
                                  },
                                ],
                                functionName: {
                                  name: "add",
                                  nodeType: "YulIdentifier",
                                  src: "256:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "256:17:16",
                              },
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "279:2:16",
                                    type: "",
                                    value: "31",
                                  },
                                ],
                                functionName: {
                                  name: "not",
                                  nodeType: "YulIdentifier",
                                  src: "275:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "275:7:16",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "252:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "252:31:16",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "240:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "240:44:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "286:4:16",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "236:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "236:55:16",
                  },
                  variables: [
                    {
                      name: "newFreePtr",
                      nodeType: "YulTypedName",
                      src: "222:10:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "350:22:16",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x41",
                            nodeType: "YulIdentifier",
                            src: "352:16:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "352:18:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "352:18:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "newFreePtr",
                            nodeType: "YulIdentifier",
                            src: "309:10:16",
                          },
                          {
                            name: "_1",
                            nodeType: "YulIdentifier",
                            src: "321:2:16",
                          },
                        ],
                        functionName: {
                          name: "gt",
                          nodeType: "YulIdentifier",
                          src: "306:2:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "306:18:16",
                      },
                      {
                        arguments: [
                          {
                            name: "newFreePtr",
                            nodeType: "YulIdentifier",
                            src: "329:10:16",
                          },
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "341:6:16",
                          },
                        ],
                        functionName: {
                          name: "lt",
                          nodeType: "YulIdentifier",
                          src: "326:2:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "326:22:16",
                      },
                    ],
                    functionName: {
                      name: "or",
                      nodeType: "YulIdentifier",
                      src: "303:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "303:46:16",
                  },
                  nodeType: "YulIf",
                  src: "300:2:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "388:2:16",
                        type: "",
                        value: "64",
                      },
                      {
                        name: "newFreePtr",
                        nodeType: "YulIdentifier",
                        src: "392:10:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "381:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "381:22:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "381:22:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "412:15:16",
                  value: {
                    name: "memPtr",
                    nodeType: "YulIdentifier",
                    src: "421:6:16",
                  },
                  variableNames: [
                    {
                      name: "array",
                      nodeType: "YulIdentifier",
                      src: "412:5:16",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "memPtr",
                        nodeType: "YulIdentifier",
                        src: "443:6:16",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "451:6:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "436:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "436:22:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "436:22:16",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "496:16:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "505:1:16",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "508:1:16",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "498:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "498:12:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "498:12:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "src",
                            nodeType: "YulIdentifier",
                            src: "477:3:16",
                          },
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "482:6:16",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "473:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "473:16:16",
                      },
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "491:3:16",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "470:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "470:25:16",
                  },
                  nodeType: "YulIf",
                  src: "467:2:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "538:6:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "546:4:16",
                            type: "",
                            value: "0x20",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "534:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "534:17:16",
                      },
                      {
                        name: "src",
                        nodeType: "YulIdentifier",
                        src: "553:3:16",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "558:6:16",
                      },
                    ],
                    functionName: {
                      name: "calldatacopy",
                      nodeType: "YulIdentifier",
                      src: "521:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "521:44:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "521:44:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "memPtr",
                                nodeType: "YulIdentifier",
                                src: "589:6:16",
                              },
                              {
                                name: "length",
                                nodeType: "YulIdentifier",
                                src: "597:6:16",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "585:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "585:19:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "606:4:16",
                            type: "",
                            value: "0x20",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "581:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "581:30:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "613:1:16",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "574:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "574:41:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "574:41:16",
                },
              ],
            },
            name: "abi_decode_available_length_t_bytes",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "src",
                nodeType: "YulTypedName",
                src: "59:3:16",
                type: "",
              },
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "64:6:16",
                type: "",
              },
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "72:3:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "array",
                nodeType: "YulTypedName",
                src: "80:5:16",
                type: "",
              },
            ],
            src: "14:607:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "677:124:16",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "687:29:16",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "709:6:16",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "696:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "696:20:16",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "687:5:16",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "779:16:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "788:1:16",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "791:1:16",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "781:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "781:12:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "781:12:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "738:5:16",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "749:5:16",
                              },
                              {
                                arguments: [
                                  {
                                    arguments: [
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "764:3:16",
                                        type: "",
                                        value: "160",
                                      },
                                      {
                                        kind: "number",
                                        nodeType: "YulLiteral",
                                        src: "769:1:16",
                                        type: "",
                                        value: "1",
                                      },
                                    ],
                                    functionName: {
                                      name: "shl",
                                      nodeType: "YulIdentifier",
                                      src: "760:3:16",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "760:11:16",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "773:1:16",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "sub",
                                  nodeType: "YulIdentifier",
                                  src: "756:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "756:19:16",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "745:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "745:31:16",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "735:2:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "735:42:16",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "728:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "728:50:16",
                  },
                  nodeType: "YulIf",
                  src: "725:2:16",
                },
              ],
            },
            name: "abi_decode_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "656:6:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "667:5:16",
                type: "",
              },
            ],
            src: "626:175:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "876:128:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "922:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "931:6:16",
                            },
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "939:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "924:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "924:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "924:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "897:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "906:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "893:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "893:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "918:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "889:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "889:32:16",
                  },
                  nodeType: "YulIf",
                  src: "886:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "957:41:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "988:9:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_address",
                      nodeType: "YulIdentifier",
                      src: "967:20:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "967:31:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "957:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "842:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "853:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "865:6:16",
                type: "",
              },
            ],
            src: "806:198:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1096:187:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1142:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value1",
                              nodeType: "YulIdentifier",
                              src: "1151:6:16",
                            },
                            {
                              name: "value1",
                              nodeType: "YulIdentifier",
                              src: "1159:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1144:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1144:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1144:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1117:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1126:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "1113:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1113:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1138:2:16",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "1109:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1109:32:16",
                  },
                  nodeType: "YulIf",
                  src: "1106:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1177:41:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1208:9:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_address",
                      nodeType: "YulIdentifier",
                      src: "1187:20:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1187:31:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "1177:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "1227:50:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1262:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1273:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1258:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1258:18:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_address",
                      nodeType: "YulIdentifier",
                      src: "1237:20:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1237:40:16",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "1227:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1054:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "1065:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1077:6:16",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "1085:6:16",
                type: "",
              },
            ],
            src: "1009:274:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1392:238:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1438:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value2",
                              nodeType: "YulIdentifier",
                              src: "1447:6:16",
                            },
                            {
                              name: "value2",
                              nodeType: "YulIdentifier",
                              src: "1455:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1440:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1440:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1440:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1413:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1422:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "1409:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1409:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1434:2:16",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "1405:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1405:32:16",
                  },
                  nodeType: "YulIf",
                  src: "1402:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1473:41:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1504:9:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_address",
                      nodeType: "YulIdentifier",
                      src: "1483:20:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1483:31:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "1473:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "1523:50:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1558:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1569:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1554:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1554:18:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_address",
                      nodeType: "YulIdentifier",
                      src: "1533:20:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1533:40:16",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "1523:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "1582:42:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1609:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1620:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1605:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1605:18:16",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "1592:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1592:32:16",
                  },
                  variableNames: [
                    {
                      name: "value2",
                      nodeType: "YulIdentifier",
                      src: "1582:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_addresst_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1342:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "1353:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1365:6:16",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "1373:6:16",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "1381:6:16",
                type: "",
              },
            ],
            src: "1288:342:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1765:572:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1812:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value3",
                              nodeType: "YulIdentifier",
                              src: "1821:6:16",
                            },
                            {
                              name: "value3",
                              nodeType: "YulIdentifier",
                              src: "1829:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1814:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1814:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1814:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1786:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1795:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "1782:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1782:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1807:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "1778:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1778:33:16",
                  },
                  nodeType: "YulIf",
                  src: "1775:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1847:41:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1878:9:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_address",
                      nodeType: "YulIdentifier",
                      src: "1857:20:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1857:31:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "1847:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "1897:50:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1932:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1943:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1928:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1928:18:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_address",
                      nodeType: "YulIdentifier",
                      src: "1907:20:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1907:40:16",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "1897:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "1956:42:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1983:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1994:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1979:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1979:18:16",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "1966:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1966:32:16",
                  },
                  variableNames: [
                    {
                      name: "value2",
                      nodeType: "YulIdentifier",
                      src: "1956:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "2007:46:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2038:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2049:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "2034:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2034:18:16",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "2021:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2021:32:16",
                  },
                  variables: [
                    {
                      name: "offset",
                      nodeType: "YulTypedName",
                      src: "2011:6:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2096:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value3",
                              nodeType: "YulIdentifier",
                              src: "2105:6:16",
                            },
                            {
                              name: "value3",
                              nodeType: "YulIdentifier",
                              src: "2113:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "2098:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2098:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2098:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "2068:6:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2076:18:16",
                        type: "",
                        value: "0xffffffffffffffff",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "2065:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2065:30:16",
                  },
                  nodeType: "YulIf",
                  src: "2062:2:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "2131:32:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2145:9:16",
                      },
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "2156:6:16",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "2141:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2141:22:16",
                  },
                  variables: [
                    {
                      name: "_1",
                      nodeType: "YulTypedName",
                      src: "2135:2:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2211:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value3",
                              nodeType: "YulIdentifier",
                              src: "2220:6:16",
                            },
                            {
                              name: "value3",
                              nodeType: "YulIdentifier",
                              src: "2228:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "2213:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2213:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2213:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "_1",
                                nodeType: "YulIdentifier",
                                src: "2190:2:16",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "2194:4:16",
                                type: "",
                                value: "0x1f",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "2186:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2186:13:16",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2201:7:16",
                          },
                        ],
                        functionName: {
                          name: "slt",
                          nodeType: "YulIdentifier",
                          src: "2182:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2182:27:16",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "2175:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2175:35:16",
                  },
                  nodeType: "YulIf",
                  src: "2172:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "2246:85:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "_1",
                            nodeType: "YulIdentifier",
                            src: "2296:2:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2300:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "2292:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2292:11:16",
                      },
                      {
                        arguments: [
                          {
                            name: "_1",
                            nodeType: "YulIdentifier",
                            src: "2318:2:16",
                          },
                        ],
                        functionName: {
                          name: "calldataload",
                          nodeType: "YulIdentifier",
                          src: "2305:12:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2305:16:16",
                      },
                      {
                        name: "dataEnd",
                        nodeType: "YulIdentifier",
                        src: "2323:7:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_available_length_t_bytes",
                      nodeType: "YulIdentifier",
                      src: "2256:35:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2256:75:16",
                  },
                  variableNames: [
                    {
                      name: "value3",
                      nodeType: "YulIdentifier",
                      src: "2246:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1707:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "1718:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1730:6:16",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "1738:6:16",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "1746:6:16",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "1754:6:16",
                type: "",
              },
            ],
            src: "1635:702:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2426:285:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2472:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "2481:6:16",
                            },
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "2489:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "2474:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2474:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2474:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2447:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2456:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "2443:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2443:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2468:2:16",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "2439:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2439:32:16",
                  },
                  nodeType: "YulIf",
                  src: "2436:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "2507:41:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2538:9:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_address",
                      nodeType: "YulIdentifier",
                      src: "2517:20:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2517:31:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "2507:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "2557:45:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2587:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2598:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "2583:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2583:18:16",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "2570:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2570:32:16",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "2561:5:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2655:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value1",
                              nodeType: "YulIdentifier",
                              src: "2664:6:16",
                            },
                            {
                              name: "value1",
                              nodeType: "YulIdentifier",
                              src: "2672:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "2657:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2657:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2657:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "2624:5:16",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    name: "value",
                                    nodeType: "YulIdentifier",
                                    src: "2645:5:16",
                                  },
                                ],
                                functionName: {
                                  name: "iszero",
                                  nodeType: "YulIdentifier",
                                  src: "2638:6:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "2638:13:16",
                              },
                            ],
                            functionName: {
                              name: "iszero",
                              nodeType: "YulIdentifier",
                              src: "2631:6:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2631:21:16",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "2621:2:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2621:32:16",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "2614:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2614:40:16",
                  },
                  nodeType: "YulIf",
                  src: "2611:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "2690:15:16",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "2700:5:16",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "2690:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_bool",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "2384:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "2395:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "2407:6:16",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "2415:6:16",
                type: "",
              },
            ],
            src: "2342:369:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2803:179:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2849:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "2858:6:16",
                            },
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "2866:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "2851:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2851:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2851:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2824:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2833:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "2820:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2820:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2845:2:16",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "2816:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2816:32:16",
                  },
                  nodeType: "YulIf",
                  src: "2813:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "2884:41:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "2915:9:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_t_address",
                      nodeType: "YulIdentifier",
                      src: "2894:20:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2894:31:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "2884:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "2934:42:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2961:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "2972:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "2957:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2957:18:16",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "2944:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2944:32:16",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "2934:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "2761:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "2772:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "2784:6:16",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "2792:6:16",
                type: "",
              },
            ],
            src: "2716:266:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3056:188:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3102:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "3111:6:16",
                            },
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "3119:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "3104:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3104:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3104:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "3077:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3086:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "3073:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3073:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3098:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "3069:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3069:32:16",
                  },
                  nodeType: "YulIf",
                  src: "3066:2:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "3137:36:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "3163:9:16",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "3150:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3150:23:16",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "3141:5:16",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "3208:5:16",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_t_bytes4",
                      nodeType: "YulIdentifier",
                      src: "3182:25:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3182:32:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3182:32:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "3223:15:16",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "3233:5:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "3223:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_bytes4",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "3022:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "3033:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "3045:6:16",
                type: "",
              },
            ],
            src: "2987:257:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3329:181:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3375:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "3384:6:16",
                            },
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "3392:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "3377:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3377:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3377:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "3350:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3359:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "3346:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3346:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3371:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "3342:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3342:32:16",
                  },
                  nodeType: "YulIf",
                  src: "3339:2:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "3410:29:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "3429:9:16",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "3423:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3423:16:16",
                  },
                  variables: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "3414:5:16",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "3474:5:16",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_t_bytes4",
                      nodeType: "YulIdentifier",
                      src: "3448:25:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3448:32:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3448:32:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "3489:15:16",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "3499:5:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "3489:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_bytes4_fromMemory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "3295:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "3306:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "3318:6:16",
                type: "",
              },
            ],
            src: "3249:261:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3595:402:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3641:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "3650:6:16",
                            },
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "3658:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "3643:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3643:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3643:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "3616:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3625:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "3612:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3612:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3637:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "3608:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3608:32:16",
                  },
                  nodeType: "YulIf",
                  src: "3605:2:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "3676:37:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "3703:9:16",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "3690:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3690:23:16",
                  },
                  variables: [
                    {
                      name: "offset",
                      nodeType: "YulTypedName",
                      src: "3680:6:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3756:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "3765:6:16",
                            },
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "3773:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "3758:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3758:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3758:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "3728:6:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3736:18:16",
                        type: "",
                        value: "0xffffffffffffffff",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "3725:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3725:30:16",
                  },
                  nodeType: "YulIf",
                  src: "3722:2:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "3791:32:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "3805:9:16",
                      },
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "3816:6:16",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "3801:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3801:22:16",
                  },
                  variables: [
                    {
                      name: "_1",
                      nodeType: "YulTypedName",
                      src: "3795:2:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3871:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "3880:6:16",
                            },
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "3888:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "3873:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3873:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3873:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "_1",
                                nodeType: "YulIdentifier",
                                src: "3850:2:16",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "3854:4:16",
                                type: "",
                                value: "0x1f",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "3846:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3846:13:16",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "3861:7:16",
                          },
                        ],
                        functionName: {
                          name: "slt",
                          nodeType: "YulIdentifier",
                          src: "3842:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3842:27:16",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "3835:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3835:35:16",
                  },
                  nodeType: "YulIf",
                  src: "3832:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "3906:85:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "_1",
                            nodeType: "YulIdentifier",
                            src: "3956:2:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3960:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "3952:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3952:11:16",
                      },
                      {
                        arguments: [
                          {
                            name: "_1",
                            nodeType: "YulIdentifier",
                            src: "3978:2:16",
                          },
                        ],
                        functionName: {
                          name: "calldataload",
                          nodeType: "YulIdentifier",
                          src: "3965:12:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3965:16:16",
                      },
                      {
                        name: "dataEnd",
                        nodeType: "YulIdentifier",
                        src: "3983:7:16",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_available_length_t_bytes",
                      nodeType: "YulIdentifier",
                      src: "3916:35:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3916:75:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "3906:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_string_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "3561:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "3572:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "3584:6:16",
                type: "",
              },
            ],
            src: "3515:482:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4072:120:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4118:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "4127:6:16",
                            },
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "4135:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "4120:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4120:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4120:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "4093:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4102:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "4089:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4089:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4114:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "4085:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4085:32:16",
                  },
                  nodeType: "YulIf",
                  src: "4082:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "4153:33:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "4176:9:16",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "4163:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4163:23:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "4153:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "4038:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "4049:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "4061:6:16",
                type: "",
              },
            ],
            src: "4002:190:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4284:171:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4330:26:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "4339:6:16",
                            },
                            {
                              name: "value0",
                              nodeType: "YulIdentifier",
                              src: "4347:6:16",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "4332:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4332:22:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4332:22:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "4305:7:16",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4314:9:16",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "4301:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4301:23:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4326:2:16",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "4297:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4297:32:16",
                  },
                  nodeType: "YulIf",
                  src: "4294:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "4365:33:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "4388:9:16",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "4375:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4375:23:16",
                  },
                  variableNames: [
                    {
                      name: "value0",
                      nodeType: "YulIdentifier",
                      src: "4365:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "4407:42:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "4434:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4445:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4430:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4430:18:16",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "4417:12:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4417:32:16",
                  },
                  variableNames: [
                    {
                      name: "value1",
                      nodeType: "YulIdentifier",
                      src: "4407:6:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_uint256t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "4242:9:16",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "4253:7:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "4265:6:16",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "4273:6:16",
                type: "",
              },
            ],
            src: "4197:258:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4511:208:16",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "4521:26:16",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "4541:5:16",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "4535:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4535:12:16",
                  },
                  variables: [
                    {
                      name: "length",
                      nodeType: "YulTypedName",
                      src: "4525:6:16",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "4563:3:16",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "4568:6:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "4556:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4556:19:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4556:19:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "4610:5:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4617:4:16",
                            type: "",
                            value: "0x20",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4606:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4606:16:16",
                      },
                      {
                        arguments: [
                          {
                            name: "pos",
                            nodeType: "YulIdentifier",
                            src: "4628:3:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "4633:4:16",
                            type: "",
                            value: "0x20",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4624:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4624:14:16",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "4640:6:16",
                      },
                    ],
                    functionName: {
                      name: "copy_memory_to_memory",
                      nodeType: "YulIdentifier",
                      src: "4584:21:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4584:63:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4584:63:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "4656:57:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "pos",
                            nodeType: "YulIdentifier",
                            src: "4671:3:16",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    name: "length",
                                    nodeType: "YulIdentifier",
                                    src: "4684:6:16",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "4692:2:16",
                                    type: "",
                                    value: "31",
                                  },
                                ],
                                functionName: {
                                  name: "add",
                                  nodeType: "YulIdentifier",
                                  src: "4680:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "4680:15:16",
                              },
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "4701:2:16",
                                    type: "",
                                    value: "31",
                                  },
                                ],
                                functionName: {
                                  name: "not",
                                  nodeType: "YulIdentifier",
                                  src: "4697:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "4697:7:16",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "4676:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "4676:29:16",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "4667:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4667:39:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4708:4:16",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "4663:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4663:50:16",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "4656:3:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_bytes",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "4488:5:16",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "4495:3:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "4503:3:16",
                type: "",
              },
            ],
            src: "4460:259:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5012:349:16",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "5022:27:16",
                  value: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "5042:6:16",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "5036:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5036:13:16",
                  },
                  variables: [
                    {
                      name: "length",
                      nodeType: "YulTypedName",
                      src: "5026:6:16",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "5084:6:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5092:4:16",
                            type: "",
                            value: "0x20",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5080:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5080:17:16",
                      },
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "5099:3:16",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "5104:6:16",
                      },
                    ],
                    functionName: {
                      name: "copy_memory_to_memory",
                      nodeType: "YulIdentifier",
                      src: "5058:21:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5058:53:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5058:53:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "5120:29:16",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "5137:3:16",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "5142:6:16",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "5133:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5133:16:16",
                  },
                  variables: [
                    {
                      name: "end_1",
                      nodeType: "YulTypedName",
                      src: "5124:5:16",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "5158:29:16",
                  value: {
                    arguments: [
                      {
                        name: "value1",
                        nodeType: "YulIdentifier",
                        src: "5180:6:16",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "5174:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5174:13:16",
                  },
                  variables: [
                    {
                      name: "length_1",
                      nodeType: "YulTypedName",
                      src: "5162:8:16",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value1",
                            nodeType: "YulIdentifier",
                            src: "5222:6:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5230:4:16",
                            type: "",
                            value: "0x20",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5218:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5218:17:16",
                      },
                      {
                        name: "end_1",
                        nodeType: "YulIdentifier",
                        src: "5237:5:16",
                      },
                      {
                        name: "length_1",
                        nodeType: "YulIdentifier",
                        src: "5244:8:16",
                      },
                    ],
                    functionName: {
                      name: "copy_memory_to_memory",
                      nodeType: "YulIdentifier",
                      src: "5196:21:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5196:57:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5196:57:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "5262:33:16",
                  value: {
                    arguments: [
                      {
                        name: "end_1",
                        nodeType: "YulIdentifier",
                        src: "5279:5:16",
                      },
                      {
                        name: "length_1",
                        nodeType: "YulIdentifier",
                        src: "5286:8:16",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "5275:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5275:20:16",
                  },
                  variables: [
                    {
                      name: "end_2",
                      nodeType: "YulTypedName",
                      src: "5266:5:16",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "end_2",
                        nodeType: "YulIdentifier",
                        src: "5311:5:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "5318:7:16",
                        type: "",
                        value: ".json",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5304:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5304:22:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5304:22:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "5335:20:16",
                  value: {
                    arguments: [
                      {
                        name: "end_2",
                        nodeType: "YulIdentifier",
                        src: "5346:5:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "5353:1:16",
                        type: "",
                        value: "5",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "5342:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5342:13:16",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "5335:3:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "4980:3:16",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "4985:6:16",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "4993:6:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "5004:3:16",
                type: "",
              },
            ],
            src: "4724:637:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5569:222:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "5586:3:16",
                      },
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "5591:6:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5579:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5579:19:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5579:19:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "pos",
                            nodeType: "YulIdentifier",
                            src: "5618:3:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5623:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5614:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5614:12:16",
                      },
                      {
                        name: "value1",
                        nodeType: "YulIdentifier",
                        src: "5628:6:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5607:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5607:28:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5607:28:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "pos",
                            nodeType: "YulIdentifier",
                            src: "5655:3:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5660:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5651:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5651:12:16",
                      },
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "5673:2:16",
                                type: "",
                                value: "96",
                              },
                              {
                                name: "value2",
                                nodeType: "YulIdentifier",
                                src: "5677:6:16",
                              },
                            ],
                            functionName: {
                              name: "shl",
                              nodeType: "YulIdentifier",
                              src: "5669:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "5669:15:16",
                          },
                          {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "5690:26:16",
                                type: "",
                                value: "0xffffffffffffffffffffffff",
                              },
                            ],
                            functionName: {
                              name: "not",
                              nodeType: "YulIdentifier",
                              src: "5686:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "5686:31:16",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "5665:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5665:53:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5644:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5644:75:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5644:75:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "pos",
                            nodeType: "YulIdentifier",
                            src: "5739:3:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5744:2:16",
                            type: "",
                            value: "84",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "5735:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5735:12:16",
                      },
                      {
                        name: "value3",
                        nodeType: "YulIdentifier",
                        src: "5749:6:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5728:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5728:28:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5728:28:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "5765:20:16",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "5776:3:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "5781:3:16",
                        type: "",
                        value: "116",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "5772:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5772:13:16",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "5765:3:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_packed_t_uint256_t_uint256_t_address_t_bytes32__to_t_uint256_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "5521:3:16",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "5526:6:16",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "5534:6:16",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "5542:6:16",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "5550:6:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "5561:3:16",
                type: "",
              },
            ],
            src: "5366:425:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5897:102:16",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "5907:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "5919:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "5930:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "5915:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5915:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "5907:4:16",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "5949:9:16",
                      },
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "5964:6:16",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "5980:3:16",
                                    type: "",
                                    value: "160",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "5985:1:16",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "shl",
                                  nodeType: "YulIdentifier",
                                  src: "5976:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "5976:11:16",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "5989:1:16",
                                type: "",
                                value: "1",
                              },
                            ],
                            functionName: {
                              name: "sub",
                              nodeType: "YulIdentifier",
                              src: "5972:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "5972:19:16",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "5960:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5960:32:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5942:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5942:51:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5942:51:16",
                },
              ],
            },
            name: "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "5866:9:16",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "5877:6:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "5888:4:16",
                type: "",
              },
            ],
            src: "5796:203:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6207:287:16",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "6217:29:16",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6235:3:16",
                            type: "",
                            value: "160",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6240:1:16",
                            type: "",
                            value: "1",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "6231:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6231:11:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6244:1:16",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "6227:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6227:19:16",
                  },
                  variables: [
                    {
                      name: "_1",
                      nodeType: "YulTypedName",
                      src: "6221:2:16",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6262:9:16",
                      },
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "6277:6:16",
                          },
                          {
                            name: "_1",
                            nodeType: "YulIdentifier",
                            src: "6285:2:16",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "6273:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6273:15:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6255:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6255:34:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6255:34:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6309:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6320:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6305:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6305:18:16",
                      },
                      {
                        arguments: [
                          {
                            name: "value1",
                            nodeType: "YulIdentifier",
                            src: "6329:6:16",
                          },
                          {
                            name: "_1",
                            nodeType: "YulIdentifier",
                            src: "6337:2:16",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "6325:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6325:15:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6298:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6298:43:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6298:43:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6361:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6372:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6357:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6357:18:16",
                      },
                      {
                        name: "value2",
                        nodeType: "YulIdentifier",
                        src: "6377:6:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6350:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6350:34:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6350:34:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6404:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6415:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6400:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6400:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6420:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6393:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6393:31:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6393:31:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "6433:55:16",
                  value: {
                    arguments: [
                      {
                        name: "value3",
                        nodeType: "YulIdentifier",
                        src: "6460:6:16",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6472:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6483:3:16",
                            type: "",
                            value: "128",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6468:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6468:19:16",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_bytes",
                      nodeType: "YulIdentifier",
                      src: "6441:18:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6441:47:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "6433:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "6152:9:16",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "6163:6:16",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "6171:6:16",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "6179:6:16",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "6187:6:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "6198:4:16",
                type: "",
              },
            ],
            src: "6004:490:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6628:145:16",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "6638:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6650:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6661:2:16",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "6646:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6646:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "6638:4:16",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6680:9:16",
                      },
                      {
                        arguments: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "6695:6:16",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "6711:3:16",
                                    type: "",
                                    value: "160",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "6716:1:16",
                                    type: "",
                                    value: "1",
                                  },
                                ],
                                functionName: {
                                  name: "shl",
                                  nodeType: "YulIdentifier",
                                  src: "6707:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "6707:11:16",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "6720:1:16",
                                type: "",
                                value: "1",
                              },
                            ],
                            functionName: {
                              name: "sub",
                              nodeType: "YulIdentifier",
                              src: "6703:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "6703:19:16",
                          },
                        ],
                        functionName: {
                          name: "and",
                          nodeType: "YulIdentifier",
                          src: "6691:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6691:32:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6673:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6673:51:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6673:51:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6744:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6755:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6740:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6740:18:16",
                      },
                      {
                        name: "value1",
                        nodeType: "YulIdentifier",
                        src: "6760:6:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6733:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6733:34:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6733:34:16",
                },
              ],
            },
            name: "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "6589:9:16",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "6600:6:16",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "6608:6:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "6619:4:16",
                type: "",
              },
            ],
            src: "6499:274:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6929:484:16",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "6939:12:16",
                  value: {
                    kind: "number",
                    nodeType: "YulLiteral",
                    src: "6949:2:16",
                    type: "",
                    value: "32",
                  },
                  variables: [
                    {
                      name: "_1",
                      nodeType: "YulTypedName",
                      src: "6943:2:16",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "6960:32:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "6978:9:16",
                      },
                      {
                        name: "_1",
                        nodeType: "YulIdentifier",
                        src: "6989:2:16",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "6974:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6974:18:16",
                  },
                  variables: [
                    {
                      name: "tail_1",
                      nodeType: "YulTypedName",
                      src: "6964:6:16",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "7008:9:16",
                      },
                      {
                        name: "_1",
                        nodeType: "YulIdentifier",
                        src: "7019:2:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "7001:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7001:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7001:21:16",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "7031:17:16",
                  value: {
                    name: "tail_1",
                    nodeType: "YulIdentifier",
                    src: "7042:6:16",
                  },
                  variables: [
                    {
                      name: "pos",
                      nodeType: "YulTypedName",
                      src: "7035:3:16",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "7057:27:16",
                  value: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "7077:6:16",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "7071:5:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7071:13:16",
                  },
                  variables: [
                    {
                      name: "length",
                      nodeType: "YulTypedName",
                      src: "7061:6:16",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "tail_1",
                        nodeType: "YulIdentifier",
                        src: "7100:6:16",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "7108:6:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "7093:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7093:22:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7093:22:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "7124:25:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "7135:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7146:2:16",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "7131:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7131:18:16",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "7124:3:16",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "7158:29:16",
                  value: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "7176:6:16",
                      },
                      {
                        name: "_1",
                        nodeType: "YulIdentifier",
                        src: "7184:2:16",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "7172:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7172:15:16",
                  },
                  variables: [
                    {
                      name: "srcPtr",
                      nodeType: "YulTypedName",
                      src: "7162:6:16",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "7196:13:16",
                  value: {
                    name: "tail",
                    nodeType: "YulIdentifier",
                    src: "7205:4:16",
                  },
                  variables: [
                    {
                      name: "i",
                      nodeType: "YulTypedName",
                      src: "7200:1:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "7267:120:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              name: "pos",
                              nodeType: "YulIdentifier",
                              src: "7288:3:16",
                            },
                            {
                              arguments: [
                                {
                                  name: "srcPtr",
                                  nodeType: "YulIdentifier",
                                  src: "7299:6:16",
                                },
                              ],
                              functionName: {
                                name: "mload",
                                nodeType: "YulIdentifier",
                                src: "7293:5:16",
                              },
                              nodeType: "YulFunctionCall",
                              src: "7293:13:16",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "7281:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7281:26:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "7281:26:16",
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "7320:19:16",
                        value: {
                          arguments: [
                            {
                              name: "pos",
                              nodeType: "YulIdentifier",
                              src: "7331:3:16",
                            },
                            {
                              name: "_1",
                              nodeType: "YulIdentifier",
                              src: "7336:2:16",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "7327:3:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7327:12:16",
                        },
                        variableNames: [
                          {
                            name: "pos",
                            nodeType: "YulIdentifier",
                            src: "7320:3:16",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "7352:25:16",
                        value: {
                          arguments: [
                            {
                              name: "srcPtr",
                              nodeType: "YulIdentifier",
                              src: "7366:6:16",
                            },
                            {
                              name: "_1",
                              nodeType: "YulIdentifier",
                              src: "7374:2:16",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "7362:3:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7362:15:16",
                        },
                        variableNames: [
                          {
                            name: "srcPtr",
                            nodeType: "YulIdentifier",
                            src: "7352:6:16",
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "i",
                        nodeType: "YulIdentifier",
                        src: "7229:1:16",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "7232:6:16",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "7226:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7226:13:16",
                  },
                  nodeType: "YulForLoop",
                  post: {
                    nodeType: "YulBlock",
                    src: "7240:18:16",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "7242:14:16",
                        value: {
                          arguments: [
                            {
                              name: "i",
                              nodeType: "YulIdentifier",
                              src: "7251:1:16",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "7254:1:16",
                              type: "",
                              value: "1",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "7247:3:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7247:9:16",
                        },
                        variableNames: [
                          {
                            name: "i",
                            nodeType: "YulIdentifier",
                            src: "7242:1:16",
                          },
                        ],
                      },
                    ],
                  },
                  pre: {
                    nodeType: "YulBlock",
                    src: "7222:3:16",
                    statements: [],
                  },
                  src: "7218:169:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "7396:11:16",
                  value: {
                    name: "pos",
                    nodeType: "YulIdentifier",
                    src: "7404:3:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "7396:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "6898:9:16",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "6909:6:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "6920:4:16",
                type: "",
              },
            ],
            src: "6778:635:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7513:92:16",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "7523:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "7535:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7546:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "7531:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7531:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "7523:4:16",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "7565:9:16",
                      },
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value0",
                                nodeType: "YulIdentifier",
                                src: "7590:6:16",
                              },
                            ],
                            functionName: {
                              name: "iszero",
                              nodeType: "YulIdentifier",
                              src: "7583:6:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "7583:14:16",
                          },
                        ],
                        functionName: {
                          name: "iszero",
                          nodeType: "YulIdentifier",
                          src: "7576:6:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7576:22:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "7558:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7558:41:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7558:41:16",
                },
              ],
            },
            name: "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "7482:9:16",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "7493:6:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "7504:4:16",
                type: "",
              },
            ],
            src: "7418:187:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7731:100:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "7748:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7759:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "7741:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7741:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7741:21:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "7771:54:16",
                  value: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "7798:6:16",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "7810:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "7821:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "7806:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7806:18:16",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_bytes",
                      nodeType: "YulIdentifier",
                      src: "7779:18:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7779:46:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "7771:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "7700:9:16",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "7711:6:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "7722:4:16",
                type: "",
              },
            ],
            src: "7610:221:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8010:174:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "8027:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8038:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8020:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8020:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8020:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "8061:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "8072:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "8057:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8057:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8077:2:16",
                        type: "",
                        value: "24",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8050:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8050:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8050:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "8100:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "8111:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "8096:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8096:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "8116:26:16",
                        type: "",
                        value: "Not enough left to mint.",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8089:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8089:54:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8089:54:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "8152:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "8164:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8175:2:16",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "8160:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8160:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "8152:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_14b300f96da803f669efdbdd02baace360b70bad7a90a912de12c1de64a59ad7__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "7987:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "8001:4:16",
                type: "",
              },
            ],
            src: "7836:348:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8363:176:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "8380:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8391:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8373:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8373:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8373:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "8414:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "8425:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "8410:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8410:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8430:2:16",
                        type: "",
                        value: "26",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8403:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8403:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8403:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "8453:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "8464:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "8449:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8449:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "8469:28:16",
                        type: "",
                        value: "ERC2981Royalties: Too high",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8442:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8442:56:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8442:56:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "8507:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "8519:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8530:2:16",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "8515:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8515:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "8507:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_1817fede6663b29fbfb5d975944c19cacb2e2baa433eb6b6f868e3e02a2dc6d9__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "8340:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "8354:4:16",
                type: "",
              },
            ],
            src: "8189:350:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8718:226:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "8735:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8746:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8728:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8728:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8728:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "8769:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "8780:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "8765:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8765:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8785:2:16",
                        type: "",
                        value: "36",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8758:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8758:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8758:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "8808:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "8819:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "8804:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8804:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "8824:34:16",
                        type: "",
                        value: "It's not possible to claim just ",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8797:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8797:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8797:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "8879:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "8890:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "8875:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8875:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "8895:6:16",
                        type: "",
                        value: "yet.",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "8868:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8868:34:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8868:34:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "8911:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "8923:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8934:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "8919:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8919:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "8911:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_1a5575fa3ec0740a62d13105de9a43af1a09bddaea88628ed3c87f87614e054a__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "8695:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "8709:4:16",
                type: "",
              },
            ],
            src: "8544:400:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "9123:169:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "9140:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9151:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9133:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9133:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9133:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "9174:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9185:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "9170:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9170:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9190:2:16",
                        type: "",
                        value: "19",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9163:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9163:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9163:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "9213:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9224:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "9209:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9209:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "9229:21:16",
                        type: "",
                        value: "Nothing to withdraw",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9202:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9202:49:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9202:49:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "9260:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "9272:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9283:2:16",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "9268:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9268:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "9260:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "9100:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "9114:4:16",
                type: "",
              },
            ],
            src: "8949:343:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "9471:233:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "9488:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9499:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9481:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9481:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9481:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "9522:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9533:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "9518:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9518:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9538:2:16",
                        type: "",
                        value: "43",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9511:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9511:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9511:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "9561:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9572:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "9557:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9557:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "9577:34:16",
                        type: "",
                        value: "ERC721Enumerable: owner index ou",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9550:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9550:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9550:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "9632:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9643:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "9628:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9628:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "9648:13:16",
                        type: "",
                        value: "t of bounds",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9621:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9621:41:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9621:41:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "9671:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "9683:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9694:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "9679:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9679:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "9671:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "9448:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "9462:4:16",
                type: "",
              },
            ],
            src: "9297:407:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "9883:240:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "9900:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9911:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9893:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9893:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9893:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "9934:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9945:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "9930:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9930:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9950:2:16",
                        type: "",
                        value: "50",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9923:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9923:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9923:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "9973:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9984:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "9969:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9969:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "9989:34:16",
                        type: "",
                        value: "ERC721: transfer to non ERC721Re",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "9962:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9962:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9962:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "10044:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "10055:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "10040:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10040:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "10060:20:16",
                        type: "",
                        value: "ceiver implementer",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "10033:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10033:48:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "10033:48:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "10090:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "10102:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10113:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "10098:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10098:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "10090:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "9860:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "9874:4:16",
                type: "",
              },
            ],
            src: "9709:414:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "10302:228:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "10319:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10330:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "10312:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10312:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "10312:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "10353:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "10364:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "10349:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10349:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10369:2:16",
                        type: "",
                        value: "38",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "10342:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10342:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "10342:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "10392:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "10403:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "10388:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10388:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "10408:34:16",
                        type: "",
                        value: "Ownable: new owner is the zero a",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "10381:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10381:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "10381:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "10463:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "10474:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "10459:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10459:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "10479:8:16",
                        type: "",
                        value: "ddress",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "10452:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10452:36:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "10452:36:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "10497:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "10509:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10520:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "10505:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10505:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "10497:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "10279:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "10293:4:16",
                type: "",
              },
            ],
            src: "10128:402:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "10709:178:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "10726:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10737:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "10719:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10719:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "10719:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "10760:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "10771:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "10756:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10756:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10776:2:16",
                        type: "",
                        value: "28",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "10749:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10749:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "10749:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "10799:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "10810:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "10795:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10795:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "10815:30:16",
                        type: "",
                        value: "ERC721: token already minted",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "10788:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10788:58:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "10788:58:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "10855:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "10867:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10878:2:16",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "10863:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10863:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "10855:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "10686:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "10700:4:16",
                type: "",
              },
            ],
            src: "10535:352:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "11066:169:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "11083:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11094:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11076:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11076:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11076:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "11117:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "11128:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "11113:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11113:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11133:2:16",
                        type: "",
                        value: "19",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11106:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11106:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11106:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "11156:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "11167:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "11152:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11152:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "11172:21:16",
                        type: "",
                        value: "Max per claim is 10",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11145:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11145:49:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11145:49:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "11203:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "11215:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11226:2:16",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "11211:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11211:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "11203:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_31fb5da33fdd32502737a559a2f7e268c46e3fff6d7747d2676688e36949c66d__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "11043:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "11057:4:16",
                type: "",
              },
            ],
            src: "10892:343:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "11414:226:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "11431:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11442:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11424:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11424:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11424:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "11465:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "11476:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "11461:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11461:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11481:2:16",
                        type: "",
                        value: "36",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11454:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11454:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11454:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "11504:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "11515:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "11500:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11500:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "11520:34:16",
                        type: "",
                        value: "ERC721: transfer to the zero add",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11493:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11493:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11493:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "11575:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "11586:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "11571:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11571:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "11591:6:16",
                        type: "",
                        value: "ress",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11564:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11564:34:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11564:34:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "11607:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "11619:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11630:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "11615:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11615:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "11607:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "11391:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "11405:4:16",
                type: "",
              },
            ],
            src: "11240:400:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "11819:175:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "11836:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11847:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11829:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11829:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11829:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "11870:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "11881:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "11866:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11866:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11886:2:16",
                        type: "",
                        value: "25",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11859:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11859:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11859:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "11909:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "11920:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "11905:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11905:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "11925:27:16",
                        type: "",
                        value: "ERC721: approve to caller",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11898:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11898:55:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11898:55:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "11962:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "11974:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11985:2:16",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "11970:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11970:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "11962:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "11796:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "11810:4:16",
                type: "",
              },
            ],
            src: "11645:349:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "12173:234:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "12190:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12201:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12183:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12183:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12183:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12224:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12235:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12220:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12220:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12240:2:16",
                        type: "",
                        value: "44",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12213:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12213:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12213:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12263:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12274:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12259:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12259:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "12279:34:16",
                        type: "",
                        value: "ERC721: operator query for nonex",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12252:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12252:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12252:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12334:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12345:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12330:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12330:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "12350:14:16",
                        type: "",
                        value: "istent token",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12323:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12323:42:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12323:42:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "12374:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "12386:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12397:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "12382:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12382:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "12374:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "12150:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "12164:4:16",
                type: "",
              },
            ],
            src: "11999:408:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "12586:181:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "12603:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12614:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12596:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12596:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12596:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12637:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12648:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12633:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12633:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12653:2:16",
                        type: "",
                        value: "31",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12626:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12626:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12626:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12676:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12687:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12672:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12672:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "12692:33:16",
                        type: "",
                        value: "Number need to be higher than 0",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12665:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12665:61:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12665:61:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "12735:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "12747:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12758:2:16",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "12743:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12743:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "12735:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_5e1e21efea8c1bcd1b33c77d1218e24d2dbcc73f0d3acf2fc1d623814f7ebcc0__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "12563:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "12577:4:16",
                type: "",
              },
            ],
            src: "12412:355:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "12946:172:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "12963:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12974:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12956:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12956:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12956:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12997:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13008:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12993:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12993:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13013:2:16",
                        type: "",
                        value: "22",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12986:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12986:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12986:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13036:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13047:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13032:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13032:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "13052:24:16",
                        type: "",
                        value: "Your are not the owner",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13025:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13025:52:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13025:52:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "13086:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "13098:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13109:2:16",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "13094:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13094:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "13086:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_67b77cb8e323f66f6ae71d6827fe7f806b420df39a9e893bb770ed9f1dc449f1__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "12923:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "12937:4:16",
                type: "",
              },
            ],
            src: "12772:346:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "13297:246:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "13314:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13325:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13307:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13307:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13307:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13348:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13359:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13344:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13344:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13364:2:16",
                        type: "",
                        value: "56",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13337:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13337:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13337:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13387:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13398:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13383:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13383:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "13403:34:16",
                        type: "",
                        value: "ERC721: approve caller is not ow",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13376:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13376:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13376:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13458:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13469:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13454:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13454:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "13474:26:16",
                        type: "",
                        value: "ner nor approved for all",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13447:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13447:54:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13447:54:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "13510:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "13522:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13533:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "13518:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13518:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "13510:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "13274:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "13288:4:16",
                type: "",
              },
            ],
            src: "13123:420:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "13722:232:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "13739:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13750:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13732:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13732:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13732:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13773:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13784:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13769:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13769:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13789:2:16",
                        type: "",
                        value: "42",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13762:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13762:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13762:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13812:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13823:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13808:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13808:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "13828:34:16",
                        type: "",
                        value: "ERC721: balance query for the ze",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13801:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13801:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13801:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13883:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13894:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13879:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13879:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "13899:12:16",
                        type: "",
                        value: "ro address",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13872:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13872:40:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13872:40:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "13921:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "13933:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13944:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "13929:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13929:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "13921:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "13699:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "13713:4:16",
                type: "",
              },
            ],
            src: "13548:406:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "14133:231:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "14150:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14161:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14143:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14143:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14143:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14184:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "14195:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "14180:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14180:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14200:2:16",
                        type: "",
                        value: "41",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14173:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14173:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14173:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14223:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "14234:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "14219:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14219:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "14239:34:16",
                        type: "",
                        value: "ERC721: owner query for nonexist",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14212:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14212:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14212:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14294:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "14305:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "14290:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14290:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "14310:11:16",
                        type: "",
                        value: "ent token",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14283:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14283:39:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14283:39:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "14331:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "14343:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14354:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "14339:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14339:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "14331:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "14110:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "14124:4:16",
                type: "",
              },
            ],
            src: "13959:405:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "14543:225:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "14560:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14571:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14553:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14553:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14553:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14594:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "14605:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "14590:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14590:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14610:2:16",
                        type: "",
                        value: "35",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14583:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14583:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14583:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14633:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "14644:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "14629:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14629:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "14649:34:16",
                        type: "",
                        value: "Ether value sent is below the pr",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14622:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14622:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14622:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14704:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "14715:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "14700:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14700:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "14720:5:16",
                        type: "",
                        value: "ice",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14693:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14693:33:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14693:33:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "14735:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "14747:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14758:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "14743:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14743:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "14735:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_84aad3058d1ccb6a9d9d3a0e38e47a2035130e03c464b9b76344f6355bda1fc6__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "14520:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "14534:4:16",
                type: "",
              },
            ],
            src: "14369:399:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "14947:182:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "14964:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14975:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14957:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14957:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14957:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14998:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15009:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "14994:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14994:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15014:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14987:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14987:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14987:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15037:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15048:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "15033:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15033:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "15053:34:16",
                        type: "",
                        value: "ERC721: mint to the zero address",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15026:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15026:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15026:62:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "15097:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "15109:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15120:2:16",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "15105:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15105:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "15097:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "14924:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "14938:4:16",
                type: "",
              },
            ],
            src: "14773:356:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "15308:234:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "15325:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15336:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15318:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15318:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15318:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15359:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15370:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "15355:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15355:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15375:2:16",
                        type: "",
                        value: "44",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15348:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15348:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15348:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15398:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15409:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "15394:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15394:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "15414:34:16",
                        type: "",
                        value: "ERC721: approved query for nonex",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15387:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15387:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15387:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15469:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15480:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "15465:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15465:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "15485:14:16",
                        type: "",
                        value: "istent token",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15458:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15458:42:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15458:42:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "15509:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "15521:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15532:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "15517:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15517:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "15509:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "15285:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "15299:4:16",
                type: "",
              },
            ],
            src: "15134:408:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "15721:182:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "15738:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15749:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15731:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15731:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15731:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15772:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15783:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "15768:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15768:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15788:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15761:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15761:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15761:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15811:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15822:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "15807:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15807:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "15827:34:16",
                        type: "",
                        value: "Ownable: caller is not the owner",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15800:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15800:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15800:62:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "15871:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "15883:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15894:2:16",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "15879:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15879:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "15871:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "15698:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "15712:4:16",
                type: "",
              },
            ],
            src: "15547:356:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "16082:231:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "16099:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16110:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16092:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16092:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16092:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16133:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "16144:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16129:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16129:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16149:2:16",
                        type: "",
                        value: "41",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16122:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16122:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16122:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16172:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "16183:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16168:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16168:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "16188:34:16",
                        type: "",
                        value: "ERC721: transfer of token that i",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16161:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16161:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16161:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16243:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "16254:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16239:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16239:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "16259:11:16",
                        type: "",
                        value: "s not own",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16232:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16232:39:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16232:39:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "16280:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "16292:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16303:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "16288:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16288:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "16280:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "16059:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "16073:4:16",
                type: "",
              },
            ],
            src: "15908:405:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "16492:237:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "16509:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16520:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16502:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16502:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16502:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16543:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "16554:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16539:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16539:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16559:2:16",
                        type: "",
                        value: "47",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16532:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16532:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16532:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16582:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "16593:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16578:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16578:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "16598:34:16",
                        type: "",
                        value: "ERC721Metadata: URI query for no",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16571:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16571:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16571:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16653:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "16664:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16649:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16649:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "16669:17:16",
                        type: "",
                        value: "nexistent token",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16642:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16642:45:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16642:45:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "16696:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "16708:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16719:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "16704:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16704:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "16696:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "16469:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "16483:4:16",
                type: "",
              },
            ],
            src: "16318:411:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "16908:223:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "16925:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16936:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16918:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16918:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16918:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16959:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "16970:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16955:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16955:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16975:2:16",
                        type: "",
                        value: "33",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16948:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16948:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16948:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16998:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17009:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16994:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16994:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "17014:34:16",
                        type: "",
                        value: "ERC721: approval to current owne",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16987:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16987:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16987:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17069:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17080:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17065:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17065:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "17085:3:16",
                        type: "",
                        value: "r",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17058:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17058:31:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17058:31:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "17098:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "17110:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17121:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "17106:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17106:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "17098:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "16885:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "16899:4:16",
                type: "",
              },
            ],
            src: "16734:397:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "17310:239:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "17327:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17338:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17320:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17320:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17320:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17361:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17372:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17357:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17357:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17377:2:16",
                        type: "",
                        value: "49",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17350:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17350:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17350:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17400:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17411:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17396:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17396:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "17416:34:16",
                        type: "",
                        value: "ERC721: transfer caller is not o",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17389:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17389:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17389:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17471:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17482:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17467:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17467:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "17487:19:16",
                        type: "",
                        value: "wner nor approved",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17460:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17460:47:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17460:47:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "17516:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "17528:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17539:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "17524:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17524:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "17516:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "17287:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "17301:4:16",
                type: "",
              },
            ],
            src: "17136:413:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "17728:234:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "17745:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17756:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17738:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17738:21:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17738:21:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17779:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17790:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17775:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17775:18:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17795:2:16",
                        type: "",
                        value: "44",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17768:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17768:30:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17768:30:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17818:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17829:2:16",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17814:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17814:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "17834:34:16",
                        type: "",
                        value: "ERC721Enumerable: global index o",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17807:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17807:62:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17807:62:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17889:9:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17900:2:16",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17885:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17885:18:16",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "17905:14:16",
                        type: "",
                        value: "ut of bounds",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17878:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17878:42:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17878:42:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "17929:27:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "17941:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17952:3:16",
                        type: "",
                        value: "128",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "17937:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17937:19:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "17929:4:16",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "17705:9:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "17719:4:16",
                type: "",
              },
            ],
            src: "17554:408:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18068:76:16",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "18078:26:16",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "18090:9:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "18101:2:16",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "18086:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18086:18:16",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "18078:4:16",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "18120:9:16",
                      },
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "18131:6:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "18113:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18113:25:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "18113:25:16",
                },
              ],
            },
            name: "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "18037:9:16",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "18048:6:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "18059:4:16",
                type: "",
              },
            ],
            src: "17967:177:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18197:80:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "18224:22:16",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "18226:16:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "18226:18:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "18226:18:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "18213:1:16",
                      },
                      {
                        arguments: [
                          {
                            name: "y",
                            nodeType: "YulIdentifier",
                            src: "18220:1:16",
                          },
                        ],
                        functionName: {
                          name: "not",
                          nodeType: "YulIdentifier",
                          src: "18216:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "18216:6:16",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "18210:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18210:13:16",
                  },
                  nodeType: "YulIf",
                  src: "18207:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "18255:16:16",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "18266:1:16",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "18269:1:16",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "18262:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18262:9:16",
                  },
                  variableNames: [
                    {
                      name: "sum",
                      nodeType: "YulIdentifier",
                      src: "18255:3:16",
                    },
                  ],
                },
              ],
            },
            name: "checked_add_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "18180:1:16",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "18183:1:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "sum",
                nodeType: "YulTypedName",
                src: "18189:3:16",
                type: "",
              },
            ],
            src: "18149:128:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18328:74:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "18351:22:16",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x12",
                            nodeType: "YulIdentifier",
                            src: "18353:16:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "18353:18:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "18353:18:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "18348:1:16",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "18341:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18341:9:16",
                  },
                  nodeType: "YulIf",
                  src: "18338:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "18382:14:16",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "18391:1:16",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "18394:1:16",
                      },
                    ],
                    functionName: {
                      name: "div",
                      nodeType: "YulIdentifier",
                      src: "18387:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18387:9:16",
                  },
                  variableNames: [
                    {
                      name: "r",
                      nodeType: "YulIdentifier",
                      src: "18382:1:16",
                    },
                  ],
                },
              ],
            },
            name: "checked_div_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "18313:1:16",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "18316:1:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "r",
                nodeType: "YulTypedName",
                src: "18322:1:16",
                type: "",
              },
            ],
            src: "18282:120:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18459:116:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "18518:22:16",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "18520:16:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "18520:18:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "18520:18:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "x",
                                nodeType: "YulIdentifier",
                                src: "18490:1:16",
                              },
                            ],
                            functionName: {
                              name: "iszero",
                              nodeType: "YulIdentifier",
                              src: "18483:6:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "18483:9:16",
                          },
                        ],
                        functionName: {
                          name: "iszero",
                          nodeType: "YulIdentifier",
                          src: "18476:6:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "18476:17:16",
                      },
                      {
                        arguments: [
                          {
                            name: "y",
                            nodeType: "YulIdentifier",
                            src: "18498:1:16",
                          },
                          {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "18509:1:16",
                                    type: "",
                                    value: "0",
                                  },
                                ],
                                functionName: {
                                  name: "not",
                                  nodeType: "YulIdentifier",
                                  src: "18505:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "18505:6:16",
                              },
                              {
                                name: "x",
                                nodeType: "YulIdentifier",
                                src: "18513:1:16",
                              },
                            ],
                            functionName: {
                              name: "div",
                              nodeType: "YulIdentifier",
                              src: "18501:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "18501:14:16",
                          },
                        ],
                        functionName: {
                          name: "gt",
                          nodeType: "YulIdentifier",
                          src: "18495:2:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "18495:21:16",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "18472:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18472:45:16",
                  },
                  nodeType: "YulIf",
                  src: "18469:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "18549:20:16",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "18564:1:16",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "18567:1:16",
                      },
                    ],
                    functionName: {
                      name: "mul",
                      nodeType: "YulIdentifier",
                      src: "18560:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18560:9:16",
                  },
                  variableNames: [
                    {
                      name: "product",
                      nodeType: "YulIdentifier",
                      src: "18549:7:16",
                    },
                  ],
                },
              ],
            },
            name: "checked_mul_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "18438:1:16",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "18441:1:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "product",
                nodeType: "YulTypedName",
                src: "18447:7:16",
                type: "",
              },
            ],
            src: "18407:168:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18629:76:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "18651:22:16",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "18653:16:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "18653:18:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "18653:18:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "18645:1:16",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "18648:1:16",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "18642:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18642:8:16",
                  },
                  nodeType: "YulIf",
                  src: "18639:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "18682:17:16",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "18694:1:16",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "18697:1:16",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "18690:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18690:9:16",
                  },
                  variableNames: [
                    {
                      name: "diff",
                      nodeType: "YulIdentifier",
                      src: "18682:4:16",
                    },
                  ],
                },
              ],
            },
            name: "checked_sub_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "18611:1:16",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "18614:1:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "diff",
                nodeType: "YulTypedName",
                src: "18620:4:16",
                type: "",
              },
            ],
            src: "18580:125:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18763:205:16",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "18773:10:16",
                  value: {
                    kind: "number",
                    nodeType: "YulLiteral",
                    src: "18782:1:16",
                    type: "",
                    value: "0",
                  },
                  variables: [
                    {
                      name: "i",
                      nodeType: "YulTypedName",
                      src: "18777:1:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "18842:63:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "dst",
                                  nodeType: "YulIdentifier",
                                  src: "18867:3:16",
                                },
                                {
                                  name: "i",
                                  nodeType: "YulIdentifier",
                                  src: "18872:1:16",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "18863:3:16",
                              },
                              nodeType: "YulFunctionCall",
                              src: "18863:11:16",
                            },
                            {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: "src",
                                      nodeType: "YulIdentifier",
                                      src: "18886:3:16",
                                    },
                                    {
                                      name: "i",
                                      nodeType: "YulIdentifier",
                                      src: "18891:1:16",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "18882:3:16",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "18882:11:16",
                                },
                              ],
                              functionName: {
                                name: "mload",
                                nodeType: "YulIdentifier",
                                src: "18876:5:16",
                              },
                              nodeType: "YulFunctionCall",
                              src: "18876:18:16",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "18856:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "18856:39:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "18856:39:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "i",
                        nodeType: "YulIdentifier",
                        src: "18803:1:16",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "18806:6:16",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "18800:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18800:13:16",
                  },
                  nodeType: "YulForLoop",
                  post: {
                    nodeType: "YulBlock",
                    src: "18814:19:16",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "18816:15:16",
                        value: {
                          arguments: [
                            {
                              name: "i",
                              nodeType: "YulIdentifier",
                              src: "18825:1:16",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "18828:2:16",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "18821:3:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "18821:10:16",
                        },
                        variableNames: [
                          {
                            name: "i",
                            nodeType: "YulIdentifier",
                            src: "18816:1:16",
                          },
                        ],
                      },
                    ],
                  },
                  pre: {
                    nodeType: "YulBlock",
                    src: "18796:3:16",
                    statements: [],
                  },
                  src: "18792:113:16",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "18931:31:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "dst",
                                  nodeType: "YulIdentifier",
                                  src: "18944:3:16",
                                },
                                {
                                  name: "length",
                                  nodeType: "YulIdentifier",
                                  src: "18949:6:16",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "18940:3:16",
                              },
                              nodeType: "YulFunctionCall",
                              src: "18940:16:16",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "18958:1:16",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "18933:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "18933:27:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "18933:27:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "i",
                        nodeType: "YulIdentifier",
                        src: "18920:1:16",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "18923:6:16",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "18917:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18917:13:16",
                  },
                  nodeType: "YulIf",
                  src: "18914:2:16",
                },
              ],
            },
            name: "copy_memory_to_memory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "src",
                nodeType: "YulTypedName",
                src: "18741:3:16",
                type: "",
              },
              {
                name: "dst",
                nodeType: "YulTypedName",
                src: "18746:3:16",
                type: "",
              },
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "18751:6:16",
                type: "",
              },
            ],
            src: "18710:258:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19028:325:16",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "19038:22:16",
                  value: {
                    arguments: [
                      {
                        name: "data",
                        nodeType: "YulIdentifier",
                        src: "19052:4:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19058:1:16",
                        type: "",
                        value: "2",
                      },
                    ],
                    functionName: {
                      name: "div",
                      nodeType: "YulIdentifier",
                      src: "19048:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19048:12:16",
                  },
                  variableNames: [
                    {
                      name: "length",
                      nodeType: "YulIdentifier",
                      src: "19038:6:16",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "19069:38:16",
                  value: {
                    arguments: [
                      {
                        name: "data",
                        nodeType: "YulIdentifier",
                        src: "19099:4:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19105:1:16",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "19095:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19095:12:16",
                  },
                  variables: [
                    {
                      name: "outOfPlaceEncoding",
                      nodeType: "YulTypedName",
                      src: "19073:18:16",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "19146:31:16",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "19148:27:16",
                        value: {
                          arguments: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "19162:6:16",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "19170:4:16",
                              type: "",
                              value: "0x7f",
                            },
                          ],
                          functionName: {
                            name: "and",
                            nodeType: "YulIdentifier",
                            src: "19158:3:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "19158:17:16",
                        },
                        variableNames: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "19148:6:16",
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "outOfPlaceEncoding",
                        nodeType: "YulIdentifier",
                        src: "19126:18:16",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "19119:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19119:26:16",
                  },
                  nodeType: "YulIf",
                  src: "19116:2:16",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "19236:111:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "19257:1:16",
                              type: "",
                              value: "0",
                            },
                            {
                              arguments: [
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "19264:3:16",
                                  type: "",
                                  value: "224",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "19269:10:16",
                                  type: "",
                                  value: "0x4e487b71",
                                },
                              ],
                              functionName: {
                                name: "shl",
                                nodeType: "YulIdentifier",
                                src: "19260:3:16",
                              },
                              nodeType: "YulFunctionCall",
                              src: "19260:20:16",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "19250:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "19250:31:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "19250:31:16",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "19301:1:16",
                              type: "",
                              value: "4",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "19304:4:16",
                              type: "",
                              value: "0x22",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "19294:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "19294:15:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "19294:15:16",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "19329:1:16",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "19332:4:16",
                              type: "",
                              value: "0x24",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "19322:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "19322:15:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "19322:15:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "outOfPlaceEncoding",
                        nodeType: "YulIdentifier",
                        src: "19192:18:16",
                      },
                      {
                        arguments: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "19215:6:16",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19223:2:16",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "lt",
                          nodeType: "YulIdentifier",
                          src: "19212:2:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "19212:14:16",
                      },
                    ],
                    functionName: {
                      name: "eq",
                      nodeType: "YulIdentifier",
                      src: "19189:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19189:38:16",
                  },
                  nodeType: "YulIf",
                  src: "19186:2:16",
                },
              ],
            },
            name: "extract_byte_array_length",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "data",
                nodeType: "YulTypedName",
                src: "19008:4:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "19017:6:16",
                type: "",
              },
            ],
            src: "18973:380:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19405:88:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "19436:22:16",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "19438:16:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "19438:18:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "19438:18:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "19421:5:16",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19432:1:16",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "not",
                          nodeType: "YulIdentifier",
                          src: "19428:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "19428:6:16",
                      },
                    ],
                    functionName: {
                      name: "eq",
                      nodeType: "YulIdentifier",
                      src: "19418:2:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19418:17:16",
                  },
                  nodeType: "YulIf",
                  src: "19415:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "19467:20:16",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "19478:5:16",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19485:1:16",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "19474:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19474:13:16",
                  },
                  variableNames: [
                    {
                      name: "ret",
                      nodeType: "YulIdentifier",
                      src: "19467:3:16",
                    },
                  ],
                },
              ],
            },
            name: "increment_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "19387:5:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "ret",
                nodeType: "YulTypedName",
                src: "19397:3:16",
                type: "",
              },
            ],
            src: "19358:135:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19536:74:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "19559:22:16",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x12",
                            nodeType: "YulIdentifier",
                            src: "19561:16:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "19561:18:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "19561:18:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "19556:1:16",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "19549:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19549:9:16",
                  },
                  nodeType: "YulIf",
                  src: "19546:2:16",
                },
                {
                  nodeType: "YulAssignment",
                  src: "19590:14:16",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "19599:1:16",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "19602:1:16",
                      },
                    ],
                    functionName: {
                      name: "mod",
                      nodeType: "YulIdentifier",
                      src: "19595:3:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19595:9:16",
                  },
                  variableNames: [
                    {
                      name: "r",
                      nodeType: "YulIdentifier",
                      src: "19590:1:16",
                    },
                  ],
                },
              ],
            },
            name: "mod_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "19521:1:16",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "19524:1:16",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "r",
                nodeType: "YulTypedName",
                src: "19530:1:16",
                type: "",
              },
            ],
            src: "19498:112:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19647:95:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19664:1:16",
                        type: "",
                        value: "0",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19671:3:16",
                            type: "",
                            value: "224",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19676:10:16",
                            type: "",
                            value: "0x4e487b71",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "19667:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "19667:20:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19657:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19657:31:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19657:31:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19704:1:16",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19707:4:16",
                        type: "",
                        value: "0x11",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19697:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19697:15:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19697:15:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19728:1:16",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19731:4:16",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "19721:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19721:15:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19721:15:16",
                },
              ],
            },
            name: "panic_error_0x11",
            nodeType: "YulFunctionDefinition",
            src: "19615:127:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19779:95:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19796:1:16",
                        type: "",
                        value: "0",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19803:3:16",
                            type: "",
                            value: "224",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19808:10:16",
                            type: "",
                            value: "0x4e487b71",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "19799:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "19799:20:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19789:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19789:31:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19789:31:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19836:1:16",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19839:4:16",
                        type: "",
                        value: "0x12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19829:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19829:15:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19829:15:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19860:1:16",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19863:4:16",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "19853:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19853:15:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19853:15:16",
                },
              ],
            },
            name: "panic_error_0x12",
            nodeType: "YulFunctionDefinition",
            src: "19747:127:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19911:95:16",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19928:1:16",
                        type: "",
                        value: "0",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19935:3:16",
                            type: "",
                            value: "224",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19940:10:16",
                            type: "",
                            value: "0x4e487b71",
                          },
                        ],
                        functionName: {
                          name: "shl",
                          nodeType: "YulIdentifier",
                          src: "19931:3:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "19931:20:16",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19921:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19921:31:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19921:31:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19968:1:16",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19971:4:16",
                        type: "",
                        value: "0x41",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19961:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19961:15:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19961:15:16",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19992:1:16",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19995:4:16",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "19985:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19985:15:16",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19985:15:16",
                },
              ],
            },
            name: "panic_error_0x41",
            nodeType: "YulFunctionDefinition",
            src: "19879:127:16",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20057:87:16",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "20122:16:16",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "20131:1:16",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "20134:1:16",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "20124:6:16",
                          },
                          nodeType: "YulFunctionCall",
                          src: "20124:12:16",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "20124:12:16",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "20080:5:16",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "20091:5:16",
                              },
                              {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "20102:3:16",
                                    type: "",
                                    value: "224",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "20107:10:16",
                                    type: "",
                                    value: "0xffffffff",
                                  },
                                ],
                                functionName: {
                                  name: "shl",
                                  nodeType: "YulIdentifier",
                                  src: "20098:3:16",
                                },
                                nodeType: "YulFunctionCall",
                                src: "20098:20:16",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "20087:3:16",
                            },
                            nodeType: "YulFunctionCall",
                            src: "20087:32:16",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "20077:2:16",
                        },
                        nodeType: "YulFunctionCall",
                        src: "20077:43:16",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "20070:6:16",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20070:51:16",
                  },
                  nodeType: "YulIf",
                  src: "20067:2:16",
                },
              ],
            },
            name: "validator_revert_t_bytes4",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "20046:5:16",
                type: "",
              },
            ],
            src: "20011:133:16",
          },
        ],
      },
      contents:
        '{\n    { }\n    function abi_decode_available_length_t_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(length, 0x1f), not(31))), 0x20)\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(value3, value3) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value3, value3) }\n        value3 := abi_decode_available_length_t_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value0, value0) }\n        value0 := abi_decode_available_length_t_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        mstore(end_2, ".json")\n        end := add(end_2, 5)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_address_t_bytes32__to_t_uint256_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 84), value3)\n        end := add(pos, 116)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_t_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_14b300f96da803f669efdbdd02baace360b70bad7a90a912de12c1de64a59ad7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), "Not enough left to mint.")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1817fede6663b29fbfb5d975944c19cacb2e2baa433eb6b6f868e3e02a2dc6d9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), "ERC2981Royalties: Too high")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1a5575fa3ec0740a62d13105de9a43af1a09bddaea88628ed3c87f87614e054a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), "It\'s not possible to claim just ")\n        mstore(add(headStart, 96), "yet.")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), "Nothing to withdraw")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), "ERC721Enumerable: owner index ou")\n        mstore(add(headStart, 96), "t of bounds")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), "ERC721: transfer to non ERC721Re")\n        mstore(add(headStart, 96), "ceiver implementer")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), "Ownable: new owner is the zero a")\n        mstore(add(headStart, 96), "ddress")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), "ERC721: token already minted")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_31fb5da33fdd32502737a559a2f7e268c46e3fff6d7747d2676688e36949c66d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), "Max per claim is 10")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), "ERC721: transfer to the zero add")\n        mstore(add(headStart, 96), "ress")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), "ERC721: approve to caller")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), "ERC721: operator query for nonex")\n        mstore(add(headStart, 96), "istent token")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5e1e21efea8c1bcd1b33c77d1218e24d2dbcc73f0d3acf2fc1d623814f7ebcc0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), "Number need to be higher than 0")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67b77cb8e323f66f6ae71d6827fe7f806b420df39a9e893bb770ed9f1dc449f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), "Your are not the owner")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), "ERC721: approve caller is not ow")\n        mstore(add(headStart, 96), "ner nor approved for all")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), "ERC721: balance query for the ze")\n        mstore(add(headStart, 96), "ro address")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), "ERC721: owner query for nonexist")\n        mstore(add(headStart, 96), "ent token")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_84aad3058d1ccb6a9d9d3a0e38e47a2035130e03c464b9b76344f6355bda1fc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), "Ether value sent is below the pr")\n        mstore(add(headStart, 96), "ice")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), "ERC721: mint to the zero address")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), "ERC721: approved query for nonex")\n        mstore(add(headStart, 96), "istent token")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), "Ownable: caller is not the owner")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), "ERC721: transfer of token that i")\n        mstore(add(headStart, 96), "s not own")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), "ERC721Metadata: URI query for no")\n        mstore(add(headStart, 96), "nexistent token")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), "ERC721: approval to current owne")\n        mstore(add(headStart, 96), "r")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), "ERC721: transfer caller is not o")\n        mstore(add(headStart, 96), "wner nor approved")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), "ERC721Enumerable: global index o")\n        mstore(add(headStart, 96), "ut of bounds")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}',
      id: 16,
      language: "Yul",
      name: "#utility.yul",
    },
  ],
  sourceMap:
    "497:4:12:-:0;723:36;;855:73;344:7137;855:73;;344:7137;855:73;;;344:7137;855:73;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;958:1:12;934:25;;;;965:28;;;-1:-1:-1;;965:28:12;;;999:17;;1119:313;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13:1;;1294:7:12;;1303:9;;1441:13:1;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:1;;;;:7;;:17;;;;;:::i;:::-;;1375:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;1334:15:12::2;:23:::0;;-1:-1:-1;;;;;1334:23:12;;::::2;-1:-1:-1::0;;;;;;1334:23:12;;::::2;;::::0;;;1367:14:::2;:26:::0;;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;1403:22;;::::2;::::0;:7:::2;::::0;:22:::2;::::0;::::2;::::0;::::2;:::i;:::-;;1119:313:::0;;;;;344:7137;;640:96:8;719:10;640:96;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;344:7137:12:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;344:7137:12;;;-1:-1:-1;344:7137:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:16;95:13;;-1:-1:-1;;;;;137:31:16;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:881::-;;307:3;300:4;292:6;288:17;284:27;274:2;;329:5;322;315:20;274:2;356:13;;-1:-1:-1;;;;;418:10:16;;;415:2;;;431:18;;:::i;:::-;480:2;474:9;502:4;572:2;553:13;;-1:-1:-1;;549:27:16;537:40;;533:49;;597:18;;;617:22;;;594:46;591:2;;;643:18;;:::i;:::-;679:2;672:22;703:18;;;740:15;;;736:24;;733:33;-1:-1:-1;730:2:16;;;783:5;776;769:20;730:2;809:5;800:14;;823:133;837:2;834:1;831:9;823:133;;;925:14;;;921:23;;915:30;894:14;;;890:23;;883:63;848:10;;;;823:133;;;974:2;971:1;968:9;965:2;;;1033:5;1028:2;1023;1015:6;1011:15;1007:24;1000:39;965:2;-1:-1:-1;1067:6:16;264:815;-1:-1:-1;;;;;264:815:16:o;1084:988::-;;;;;;1305:3;1293:9;1284:7;1280:23;1276:33;1273:2;;;1327:6;1319;1312:22;1273:2;1359:16;;-1:-1:-1;;;;;1424:14:16;;;1421:2;;;1456:6;1448;1441:22;1421:2;1484:63;1539:7;1530:6;1519:9;1515:22;1484:63;:::i;:::-;1474:73;;1593:2;1582:9;1578:18;1572:25;1556:41;;1622:2;1612:8;1609:16;1606:2;;;1643:6;1635;1628:22;1606:2;1671:65;1728:7;1717:8;1706:9;1702:24;1671:65;:::i;:::-;1661:75;;1782:2;1771:9;1767:18;1761:25;1745:41;;1811:2;1801:8;1798:16;1795:2;;;1832:6;1824;1817:22;1795:2;;1860:65;1917:7;1906:8;1895:9;1891:24;1860:65;:::i;:::-;1850:75;;;1944:51;1991:2;1980:9;1976:18;1944:51;:::i;:::-;1934:61;;2014:52;2061:3;2050:9;2046:19;2014:52;:::i;:::-;2004:62;;1263:809;;;;;;;;:::o;2077:380::-;2162:1;2152:12;;2209:1;2199:12;;;2220:2;;2274:4;2266:6;2262:17;2252:27;;2220:2;2327;2319:6;2316:14;2296:18;2293:38;2290:2;;;2373:10;2368:3;2364:20;2361:1;2354:31;2408:4;2405:1;2398:15;2436:4;2433:1;2426:15;2290:2;;2132:325;;;:::o;2462:127::-;2523:10;2518:3;2514:20;2511:1;2504:31;2554:4;2551:1;2544:15;2578:4;2575:1;2568:15;2494:95;344:7137:12;;;;;;",
  deployedSourceMap:
    "344:7137:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6492:226;;;;;;;;;;-1:-1:-1;6492:226:12;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2473:98:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;;;;;-1:-1:-1;3984:217:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3522:401::-;;;;;;;;;;-1:-1:-1;3522:401:1;;;;;:::i;:::-;;:::i;6931:113:12:-;;;;;;;;;;-1:-1:-1;6931:113:12;;;;;:::i;:::-;;:::i;1615:111:4:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4804:312:12:-;;;;;;;;;;-1:-1:-1;4804:312:12;;;;;:::i;:::-;;:::i;878:329:14:-;;;;;;;;;;-1:-1:-1;878:329:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;7050:112:12:-;;;;;;;;;;-1:-1:-1;7050:112:12;;;;;:::i;:::-;;:::i;1291:253:4:-;;;;;;;;;;-1:-1:-1;1291:253:4;;;;;:::i;:::-;;:::i;3877:921:12:-;;;;;;:::i;:::-;;:::i;7168:240::-;;;;;;;;;;;;;:::i;458:43::-;;;;;;;;;;;;;:::i;5122:180::-;;;;;;;;;;-1:-1:-1;5122:180:12;;;;;:::i;:::-;;:::i;934:25::-;;;;;;;;;;;;;:::i;1798:230:4:-;;;;;;;;;;-1:-1:-1;1798:230:4;;;;;:::i;:::-;;:::i;507:42:12:-;;;;;;;;;;;;;:::i;2176:235:1:-;;;;;;;;;;-1:-1:-1;2176:235:1;;;;;:::i;:::-;;:::i;555:46:12:-;;;;;;;;;;;;;:::i;965:28::-;;;;;;;;;;;;;:::i;1914:205:1:-;;;;;;;;;;-1:-1:-1;1914:205:1;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;;;;:::i;608:43:12:-;;;;;;;;;;;;;:::i;2635:102:1:-;;;;;;;;;;;;;:::i;6267:88:12:-;;;;;;;;;;-1:-1:-1;6267:88:12;;;;;:::i;:::-;;:::i;4268:153:1:-;;;;;;;;;;-1:-1:-1;4268:153:1;;;;;:::i;:::-;;:::i;5308:355:12:-;;;;;;;;;;-1:-1:-1;5308:355:12;;;;;:::i;:::-;;:::i;5756:505::-;;;;;;;;;;-1:-1:-1;5756:505:12;;;;;:::i;:::-;;:::i;3785:86::-;;;;;;;;;;;;;:::i;1438:417::-;;;;;;;;;;-1:-1:-1;1438:417:12;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4487:162:1:-;;;;;;;;;;-1:-1:-1;4487:162:1;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;6492:226:12:-;6648:4;6675:36;6699:11;6675:23;:36::i;:::-;6668:43;;6492:226;;;;:::o;2473:98:1:-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;;:::o;3984:217::-;4060:7;4087:16;4095:7;4087;:16::i;:::-;4079:73;;;;-1:-1:-1;;;4079:73:1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;4170:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:1;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:1;:2;-1:-1:-1;;;;;3659:11:1;;;3651:57;;;;-1:-1:-1;;;3651:57:1;;;;;;;:::i;:::-;3756:5;-1:-1:-1;;;;;3740:21:1;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3740:21:1;;:62;;;;3765:37;3782:5;3789:12;:10;:12::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:1;;;;;;;:::i;:::-;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3522:401;;;:::o;6931:113:12:-;1259:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7003:15:12::1;:34:::0;;-1:-1:-1;;;;;;7003:34:12::1;-1:-1:-1::0;;;;;7003:34:12;;;::::1;::::0;;;::::1;::::0;;6931:113::o;1615:111:4:-;1702:10;:17;1615:111;:::o;4804:312:12:-;4954:41;4973:12;:10;:12::i;:::-;4987:7;4954:18;:41::i;:::-;4933:137;;;;-1:-1:-1;;;4933:137:12;;;;;;;:::i;:::-;5081:28;5091:4;5097:2;5101:7;5081:9;:28::i;878:329:14:-;995:16;1081:19;;;:10;:19;;;;;;;;1050:50;;;;;;;;;-1:-1:-1;;;;;1050:50:14;;;;;-1:-1:-1;;;1050:50:14;;;;;;;;;;;;995:16;1195:5;;1167:24;;:5;:24;:::i;:::-;1166:34;;;;:::i;:::-;1150:50;;878:329;;;;;;:::o;7050:112:12:-;1259:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7123:14:12::1;:32:::0;;-1:-1:-1;;;;;;7123:32:12::1;-1:-1:-1::0;;;;;7123:32:12;;;::::1;::::0;;;::::1;::::0;;7050:112::o;1291:253:4:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1511:19:4;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;3877:921:12:-;3936:8;;;;3928:57;;;;-1:-1:-1;;;3928:57:12;;;;;;;:::i;:::-;497:4;4007:6;;4003:1;:10;;;;:::i;:::-;:26;;3995:63;;;;-1:-1:-1;;;3995:63:12;;;;;;;:::i;:::-;4080:1;4076;:5;4068:49;;;;-1:-1:-1;;;4068:49:12;;;;;;;:::i;:::-;547:2;4135:1;:18;;4127:50;;;;-1:-1:-1;;;4127:50:12;;;;;;;:::i;:::-;4222:13;4234:1;591:10;4222:13;:::i;:::-;4208:9;:28;;4187:110;;;;-1:-1:-1;;;4187:110:12;;;;;;;:::i;:::-;4308:18;4330:13;4342:1;591:10;4330:13;:::i;:::-;4308:36;;4363:10;4354:5;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;4384:14:12;;-1:-1:-1;4401:22:12;4413:10;4401:9;:22;:::i;:::-;4433:43;;4384:39;;-1:-1:-1;4449:4:12;;4433:43;;;;;4465:10;;4433:43;;;;4465:10;4449:4;4433:43;;;;;;;;;;;;;;;;;;;;;4492:9;4487:216;4511:1;4507;:5;4487:216;;;4533:32;4544:12;:10;:12::i;:::-;4558:6;;4533:10;:32::i;:::-;4596:6;;4604:14;;4579:55;;4596:6;-1:-1:-1;;;;;4604:14:12;648:3;4579:16;:55::i;:::-;4659:1;4649:6;;:11;;;;;;;:::i;:::-;;;;-1:-1:-1;;4685:6:12;;4679:13;;;;;;;4514:3;;;;:::i;:::-;;;;4487:216;;;-1:-1:-1;4717:10:12;;4713:79;;4751:12;:10;:12::i;:::-;-1:-1:-1;;;;;4743:30:12;:38;4774:6;4743:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3877:921;;;:::o;7168:240::-;7215:15;;-1:-1:-1;;;;;7215:15:12;7234:10;7215:29;7207:64;;;;-1:-1:-1;;;7207:64:12;;;;;;;:::i;:::-;7313:1;7289:21;:25;7281:57;;;;-1:-1:-1;;;7281:57:12;;;;;;;:::i;:::-;7356:12;:10;:12::i;:::-;-1:-1:-1;;;;;7348:30:12;:53;7379:21;7348:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7168:240::o;458:43::-;497:4;458:43;:::o;5122:180::-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;934:25::-;;;;:::o;1798:230:4:-;1873:7;1908:30;:28;:30::i;:::-;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:4;;;;;;;:::i;:::-;2004:10;2015:5;2004:17;;;;;;-1:-1:-1;;;2004:17:4;;;;;;;;;;;;;;;;;1997:24;;1798:230;;;:::o;507:42:12:-;547:2;507:42;:::o;2176:235:1:-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:1;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:1;;;;;;;:::i;555:46:12:-;591:10;555:46;:::o;965:28::-;;;;;;:::o;1914:205:1:-;1986:7;-1:-1:-1;;;;;2013:19:1;;2005:74;;;;-1:-1:-1;;;2005:74:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2096:16:1;;;;;:9;:16;;;;;;;1914:205::o;1668:101:0:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1108:6;;-1:-1:-1;;;;;1108:6:0;1036:85;:::o;608:43:12:-;648:3;608:43;:::o;2635:102:1:-;2691:13;2723:7;2716:14;;;;;:::i;6267:88:12:-;1259:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6335:13:12;;::::1;::::0;:7:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;;6267:88:::0;:::o;4268:153:1:-;4362:52;4381:12;:10;:12::i;:::-;4395:8;4405;4362:18;:52::i;5308:355:12:-;5490:41;5509:12;:10;:12::i;:::-;5523:7;5490:18;:41::i;:::-;5469:137;;;;-1:-1:-1;;;5469:137:12;;;;;;;:::i;:::-;5617:39;5631:4;5637:2;5641:7;5650:5;5617:13;:39::i;5756:505::-;5869:13;5919:16;5927:7;5919;:16::i;:::-;5898:110;;;;-1:-1:-1;;;5898:110:12;;;;;;;:::i;:::-;6018:21;6042:10;:8;:10::i;:::-;6062:15;6080:19;;;:10;:19;;;;;;6128:21;;6018:34;;-1:-1:-1;6080:19:12;6128:126;;;;;;;;;;;;;;;;;6196:7;6205:18;:7;:16;:18::i;:::-;6179:53;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6128:126;6109:145;5756:505;-1:-1:-1;;;;5756:505:12:o;3785:86::-;1259:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3856:8:12::1;::::0;;-1:-1:-1;;3844:20:12;::::1;3856:8;::::0;;::::1;3855:9;3844:20;::::0;;3785:86::o;1438:417::-;1524:16;1556:23;1596:17;1606:6;1596:9;:17::i;:::-;1582:32;;;;;;-1:-1:-1;;;1582:32:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1582:32:12;;1556:58;;1624:22;1649:17;1659:6;1649:9;:17::i;:::-;1624:42;;1681:9;1676:150;1700:14;1696:1;:18;1676:150;;;1735:15;1753:29;1773:6;1780:1;1753:19;:29::i;:::-;1735:47;;1808:7;1796:6;1803:1;1796:9;;;;;;-1:-1:-1;;;1796:9:12;;;;;;;;;;;;;;;;;;:19;-1:-1:-1;1716:3:12;;;;:::i;:::-;;;;1676:150;;;-1:-1:-1;1842:6:12;;1438:417;-1:-1:-1;;;1438:417:12:o;4487:162:1:-;-1:-1:-1;;;;;4607:25:1;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162::o;1918:198:0:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:0::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;407:273:13:-:0;532:4;-1:-1:-1;;;;;;571:50:13;;-1:-1:-1;;;571:50:13;;:102;;;637:36;661:11;637:23;:36::i;7144:125:1:-;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:1;:30;;;7144:125::o;640:96:8:-;719:10;640:96;:::o;10995:171:1:-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:1;-1:-1:-1;;;;;11069:29:1;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:1;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7544:16;7552:7;7544;:16::i;:::-;7536:73;;;;-1:-1:-1;;;7536:73:1;;;;;;;:::i;:::-;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:1;:7;-1:-1:-1;;;;;7676:16:1;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:1;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:1;;7676:51;:87;;;;7731:32;7748:5;7755:7;7731:16;:32::i;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:1;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:1;;10443:85;;;;-1:-1:-1;;;10443:85:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10546:16:1;;10538:65;;;;-1:-1:-1;;;10538:65:1;;;;;;;:::i;:::-;10614:39;10635:4;10641:2;10645:7;10614:20;:39::i;:::-;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:1;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:1;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:1;-1:-1:-1;;;;;10813:21:1;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;3293:486:12:-;3374:21;3398:14;:12;:14::i;:::-;3374:38;;3422:19;3463:2;3454:6;;:11;3451:141;;;-1:-1:-1;3494:14:12;3451:141;;;3552:29;3567:13;3552:14;:29::i;:::-;3538:43;;3451:141;3609:24;;;;:11;:24;;;;;;:29;3602:37;;-1:-1:-1;;;3602:37:12;;;;;;;;;3649:24;;;;:11;:24;;;;;;;;3676:1;3649:28;;3687:26;;;:10;:26;;;;;:40;;;3737:35;3747:8;3698:14;3737:9;:35::i;579:255:14:-;722:5;713;:14;;705:53;;;;-1:-1:-1;;;705:53:14;;;;;;;:::i;:::-;790:37;;;;;;;;-1:-1:-1;;;;;790:37:14;;;;;;;;;;;;;;;;-1:-1:-1;768:19:14;;;:10;:19;;;;;;:59;;;;;;;;;-1:-1:-1;;;768:59:14;-1:-1:-1;;;;768:59:14;;;;-1:-1:-1;;;;;;768:59:14;;;;;;;;579:255::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;11301:307:1:-;11451:8;-1:-1:-1;;;;;11442:17:1;:5;-1:-1:-1;;;;;11442:17:1;;;11434:55;;;;-1:-1:-1;;;11434:55:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;11499:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:1;;;;;;;11560:41;;;;;11499:46;;11560:41;:::i;:::-;;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:1;;;;;;;:::i;6361:98:12:-;6413:13;6445:7;6438:14;;;;;:::i;328:703:9:-;384:13;601:10;597:51;;-1:-1:-1;627:10:9;;;;;;;;;;;;-1:-1:-1;;;627:10:9;;;;;;597:51;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:9;;-1:-1:-1;773:2:9;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;-1:-1:-1;;;817:17:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:9;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:9;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;-1:-1:-1;;;902:14:9;;;;;;;;;;;;:56;-1:-1:-1;;;;;902:56:9;;;;;;;;-1:-1:-1;972:11:9;981:2;972:11;;:::i;:::-;;;844:150;;990:222:4;1092:4;-1:-1:-1;;;;;;1115:50:4;;-1:-1:-1;;;1115:50:4;;:90;;;1169:36;1193:11;1169:23;:36::i;6724:201:12:-;6873:45;6900:4;6906:2;6910:7;6873:26;:45::i;2833:454::-;2880:7;2918:6;;497:4;2903:21;;;;:::i;:::-;2899:40;;-1:-1:-1;2938:1:12;2931:8;;2899:40;3266:13;;3066:16;3108:15;3149:10;3195:12;3185:23;3024:206;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2993:255;;;;;;2968:294;;:312;;;;:::i;:::-;2949:331;;2833:454;:::o;2218:609::-;2275:7;2316:14;;;:7;:14;;;;;;2399:16;2395:66;;-1:-1:-1;2445:5:12;2395:66;2599:7;:26;2623:1;2607:13;;:17;;;;:::i;:::-;2599:26;;;;;;;;;;;;2629:1;2599:31;2595:170;;;2679:1;2663:13;;:17;;;;:::i;:::-;2646:14;;;;:7;:14;;;;;:34;2595:170;;;2728:7;:26;2752:1;2736:13;;:17;;;;:::i;:::-;2728:26;;;;;;;;;;;;;;-1:-1:-1;2728:26:12;;;;2711:14;;;:7;:14;;;;:43;2595:170;2791:1;2774:13;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;2809:11:12;;2218:609;-1:-1:-1;;;2218:609:12:o;8101:108:1:-;8176:26;8186:2;8190:7;8176:26;;;;;;;;;;;;:9;:26::i;12161:778::-;12311:4;12331:15;:2;-1:-1:-1;;;;;12331:13:1;;:15::i;:::-;12327:606;;;12382:2;-1:-1:-1;;;;;12366:36:1;;12403:12;:10;:12::i;:::-;12417:4;12423:7;12432:5;12366:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:1;;;;;;;;-1:-1:-1;;12366:72:1;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:1;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:1;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:1;-1:-1:-1;;;12488:51:1;;-1:-1:-1;12481:58:1;;12327:606;-1:-1:-1;12918:4:1;12161:778;;;;;;:::o;1555:300::-;1657:4;-1:-1:-1;;;;;;1692:40:1;;-1:-1:-1;;;1692:40:1;;:104;;-1:-1:-1;;;;;;;1748:48:1;;-1:-1:-1;;;1748:48:1;1692:104;:156;;;;1812:36;1836:11;1812:23;:36::i;2624:572:4:-;2763:45;2790:4;2796:2;2800:7;2763:26;:45::i;:::-;-1:-1:-1;;;;;2823:18:4;;2819:183;;2857:40;2889:7;2857:31;:40::i;:::-;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:4;:4;-1:-1:-1;;;;;2918:10:4;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:4;;3011:179;;3047:45;3084:7;3047:36;:45::i;:::-;3011:179;;;3119:4;-1:-1:-1;;;;;3113:10:4;:2;-1:-1:-1;;;;;3113:10:4;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;8430:311:1:-;8555:18;8561:2;8565:7;8555:5;:18::i;:::-;8604:54;8635:1;8639:2;8643:7;8652:5;8604:22;:54::i;:::-;8583:151;;;;-1:-1:-1;;;8583:151:1;;;;;;;:::i;771:377:7:-;1087:20;1133:8;;;771:377::o;829:155:10:-;-1:-1:-1;;;;;;937:40:10;;-1:-1:-1;;;937:40:10;829:155;;;:::o;3902:161:4:-;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161::o;4680:970::-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:4;;;5150:323;;-1:-1:-1;;;;;5220:18:4;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:4;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:4;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:4;;6187:46;;6632:26;;;;-1:-1:-1;;;6632:26:4;;;;;;;;;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;-1:-1:-1;;;6669:22:4;;;;;;;;;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;-1:-1:-1;;;6976:16:4;;;;;;;;;;;;;;;;;;;;;;;;;;5938:1061;;;;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:4;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:4:o;9063:372:1:-;-1:-1:-1;;;;;9142:16:1;;9134:61;;;;-1:-1:-1;;;9134:61:1;;;;;;;:::i;:::-;9214:16;9222:7;9214;:16::i;:::-;9213:17;9205:58;;;;-1:-1:-1;;;9205:58:1;;;;;;;:::i;:::-;9274:45;9303:1;9307:2;9311:7;9274:20;:45::i;:::-;-1:-1:-1;;;;;9330:13:1;;;;;;:9;:13;;;;;:18;;9347:1;;9330:13;:18;;9347:1;;9330:18;:::i;:::-;;;;-1:-1:-1;;9358:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:1;-1:-1:-1;;;;;9358:21:1;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:607:16;;110:18;151:2;143:6;140:14;137:2;;;157:18;;:::i;:::-;206:2;200:9;279:2;256:17;;-1:-1:-1;;252:31:16;240:44;;286:4;236:55;306:18;;;326:22;;;303:46;300:2;;;352:18;;:::i;:::-;388:2;381:22;436;;;421:6;-1:-1:-1;421:6:16;473:16;;;470:25;-1:-1:-1;467:2:16;;;508:1;505;498:12;467:2;558:6;553:3;546:4;538:6;534:17;521:44;613:1;606:4;597:6;589;585:19;581:30;574:41;;;90:531;;;;;:::o;626:175::-;696:20;;-1:-1:-1;;;;;745:31:16;;735:42;;725:2;;791:1;788;781:12;806:198;;918:2;906:9;897:7;893:23;889:32;886:2;;;939:6;931;924:22;886:2;967:31;988:9;967:31;:::i;:::-;957:41;876:128;-1:-1:-1;;;876:128:16:o;1009:274::-;;;1138:2;1126:9;1117:7;1113:23;1109:32;1106:2;;;1159:6;1151;1144:22;1106:2;1187:31;1208:9;1187:31;:::i;:::-;1177:41;;1237:40;1273:2;1262:9;1258:18;1237:40;:::i;:::-;1227:50;;1096:187;;;;;:::o;1288:342::-;;;;1434:2;1422:9;1413:7;1409:23;1405:32;1402:2;;;1455:6;1447;1440:22;1402:2;1483:31;1504:9;1483:31;:::i;:::-;1473:41;;1533:40;1569:2;1558:9;1554:18;1533:40;:::i;:::-;1523:50;;1620:2;1609:9;1605:18;1592:32;1582:42;;1392:238;;;;;:::o;1635:702::-;;;;;1807:3;1795:9;1786:7;1782:23;1778:33;1775:2;;;1829:6;1821;1814:22;1775:2;1857:31;1878:9;1857:31;:::i;:::-;1847:41;;1907:40;1943:2;1932:9;1928:18;1907:40;:::i;:::-;1897:50;;1994:2;1983:9;1979:18;1966:32;1956:42;;2049:2;2038:9;2034:18;2021:32;2076:18;2068:6;2065:30;2062:2;;;2113:6;2105;2098:22;2062:2;2141:22;;2194:4;2186:13;;2182:27;-1:-1:-1;2172:2:16;;2228:6;2220;2213:22;2172:2;2256:75;2323:7;2318:2;2305:16;2300:2;2296;2292:11;2256:75;:::i;:::-;2246:85;;;1765:572;;;;;;;:::o;2342:369::-;;;2468:2;2456:9;2447:7;2443:23;2439:32;2436:2;;;2489:6;2481;2474:22;2436:2;2517:31;2538:9;2517:31;:::i;:::-;2507:41;;2598:2;2587:9;2583:18;2570:32;2645:5;2638:13;2631:21;2624:5;2621:32;2611:2;;2672:6;2664;2657:22;2611:2;2700:5;2690:15;;;2426:285;;;;;:::o;2716:266::-;;;2845:2;2833:9;2824:7;2820:23;2816:32;2813:2;;;2866:6;2858;2851:22;2813:2;2894:31;2915:9;2894:31;:::i;:::-;2884:41;2972:2;2957:18;;;;2944:32;;-1:-1:-1;;;2803:179:16:o;2987:257::-;;3098:2;3086:9;3077:7;3073:23;3069:32;3066:2;;;3119:6;3111;3104:22;3066:2;3163:9;3150:23;3182:32;3208:5;3182:32;:::i;3249:261::-;;3371:2;3359:9;3350:7;3346:23;3342:32;3339:2;;;3392:6;3384;3377:22;3339:2;3429:9;3423:16;3448:32;3474:5;3448:32;:::i;3515:482::-;;3637:2;3625:9;3616:7;3612:23;3608:32;3605:2;;;3658:6;3650;3643:22;3605:2;3703:9;3690:23;3736:18;3728:6;3725:30;3722:2;;;3773:6;3765;3758:22;3722:2;3801:22;;3854:4;3846:13;;3842:27;-1:-1:-1;3832:2:16;;3888:6;3880;3873:22;3832:2;3916:75;3983:7;3978:2;3965:16;3960:2;3956;3952:11;3916:75;:::i;4002:190::-;;4114:2;4102:9;4093:7;4089:23;4085:32;4082:2;;;4135:6;4127;4120:22;4082:2;-1:-1:-1;4163:23:16;;4072:120;-1:-1:-1;4072:120:16:o;4197:258::-;;;4326:2;4314:9;4305:7;4301:23;4297:32;4294:2;;;4347:6;4339;4332:22;4294:2;-1:-1:-1;;4375:23:16;;;4445:2;4430:18;;;4417:32;;-1:-1:-1;4284:171:16:o;4460:259::-;;4541:5;4535:12;4568:6;4563:3;4556:19;4584:63;4640:6;4633:4;4628:3;4624:14;4617:4;4610:5;4606:16;4584:63;:::i;:::-;4701:2;4680:15;-1:-1:-1;;4676:29:16;4667:39;;;;4708:4;4663:50;;4511:208;-1:-1:-1;;4511:208:16:o;4724:637::-;;5042:6;5036:13;5058:53;5104:6;5099:3;5092:4;5084:6;5080:17;5058:53;:::i;:::-;5174:13;;5133:16;;;;5196:57;5174:13;5133:16;5230:4;5218:17;;5196:57;:::i;:::-;-1:-1:-1;;;5275:20:16;;5304:22;;;5353:1;5342:13;;5012:349;-1:-1:-1;;;;5012:349:16:o;5366:425::-;5579:19;;;5623:2;5614:12;;5607:28;;;;5673:2;5669:15;-1:-1:-1;;5665:53:16;5660:2;5651:12;;5644:75;5744:2;5735:12;;5728:28;5781:3;5772:13;;5569:222::o;5796:203::-;-1:-1:-1;;;;;5960:32:16;;;;5942:51;;5930:2;5915:18;;5897:102::o;6004:490::-;-1:-1:-1;;;;;6273:15:16;;;6255:34;;6325:15;;6320:2;6305:18;;6298:43;6372:2;6357:18;;6350:34;;;6420:3;6415:2;6400:18;;6393:31;;;6004:490;;6441:47;;6468:19;;6460:6;6441:47;:::i;:::-;6433:55;6207:287;-1:-1:-1;;;;;;6207:287:16:o;6499:274::-;-1:-1:-1;;;;;6691:32:16;;;;6673:51;;6755:2;6740:18;;6733:34;6661:2;6646:18;;6628:145::o;6778:635::-;6949:2;7001:21;;;7071:13;;6974:18;;;7093:22;;;6778:635;;6949:2;7172:15;;;;7146:2;7131:18;;;6778:635;7218:169;7232:6;7229:1;7226:13;7218:169;;;7293:13;;7281:26;;7362:15;;;;7327:12;;;;7254:1;7247:9;7218:169;;;-1:-1:-1;7404:3:16;;6929:484;-1:-1:-1;;;;;;6929:484:16:o;7418:187::-;7583:14;;7576:22;7558:41;;7546:2;7531:18;;7513:92::o;7610:221::-;;7759:2;7748:9;7741:21;7779:46;7821:2;7810:9;7806:18;7798:6;7779:46;:::i;7836:348::-;8038:2;8020:21;;;8077:2;8057:18;;;8050:30;8116:26;8111:2;8096:18;;8089:54;8175:2;8160:18;;8010:174::o;8189:350::-;8391:2;8373:21;;;8430:2;8410:18;;;8403:30;8469:28;8464:2;8449:18;;8442:56;8530:2;8515:18;;8363:176::o;8544:400::-;8746:2;8728:21;;;8785:2;8765:18;;;8758:30;8824:34;8819:2;8804:18;;8797:62;-1:-1:-1;;;8890:2:16;8875:18;;8868:34;8934:3;8919:19;;8718:226::o;8949:343::-;9151:2;9133:21;;;9190:2;9170:18;;;9163:30;-1:-1:-1;;;9224:2:16;9209:18;;9202:49;9283:2;9268:18;;9123:169::o;9297:407::-;9499:2;9481:21;;;9538:2;9518:18;;;9511:30;9577:34;9572:2;9557:18;;9550:62;-1:-1:-1;;;9643:2:16;9628:18;;9621:41;9694:3;9679:19;;9471:233::o;9709:414::-;9911:2;9893:21;;;9950:2;9930:18;;;9923:30;9989:34;9984:2;9969:18;;9962:62;-1:-1:-1;;;10055:2:16;10040:18;;10033:48;10113:3;10098:19;;9883:240::o;10128:402::-;10330:2;10312:21;;;10369:2;10349:18;;;10342:30;10408:34;10403:2;10388:18;;10381:62;-1:-1:-1;;;10474:2:16;10459:18;;10452:36;10520:3;10505:19;;10302:228::o;10535:352::-;10737:2;10719:21;;;10776:2;10756:18;;;10749:30;10815;10810:2;10795:18;;10788:58;10878:2;10863:18;;10709:178::o;10892:343::-;11094:2;11076:21;;;11133:2;11113:18;;;11106:30;-1:-1:-1;;;11167:2:16;11152:18;;11145:49;11226:2;11211:18;;11066:169::o;11240:400::-;11442:2;11424:21;;;11481:2;11461:18;;;11454:30;11520:34;11515:2;11500:18;;11493:62;-1:-1:-1;;;11586:2:16;11571:18;;11564:34;11630:3;11615:19;;11414:226::o;11645:349::-;11847:2;11829:21;;;11886:2;11866:18;;;11859:30;11925:27;11920:2;11905:18;;11898:55;11985:2;11970:18;;11819:175::o;11999:408::-;12201:2;12183:21;;;12240:2;12220:18;;;12213:30;12279:34;12274:2;12259:18;;12252:62;-1:-1:-1;;;12345:2:16;12330:18;;12323:42;12397:3;12382:19;;12173:234::o;12412:355::-;12614:2;12596:21;;;12653:2;12633:18;;;12626:30;12692:33;12687:2;12672:18;;12665:61;12758:2;12743:18;;12586:181::o;12772:346::-;12974:2;12956:21;;;13013:2;12993:18;;;12986:30;-1:-1:-1;;;13047:2:16;13032:18;;13025:52;13109:2;13094:18;;12946:172::o;13123:420::-;13325:2;13307:21;;;13364:2;13344:18;;;13337:30;13403:34;13398:2;13383:18;;13376:62;13474:26;13469:2;13454:18;;13447:54;13533:3;13518:19;;13297:246::o;13548:406::-;13750:2;13732:21;;;13789:2;13769:18;;;13762:30;13828:34;13823:2;13808:18;;13801:62;-1:-1:-1;;;13894:2:16;13879:18;;13872:40;13944:3;13929:19;;13722:232::o;13959:405::-;14161:2;14143:21;;;14200:2;14180:18;;;14173:30;14239:34;14234:2;14219:18;;14212:62;-1:-1:-1;;;14305:2:16;14290:18;;14283:39;14354:3;14339:19;;14133:231::o;14369:399::-;14571:2;14553:21;;;14610:2;14590:18;;;14583:30;14649:34;14644:2;14629:18;;14622:62;-1:-1:-1;;;14715:2:16;14700:18;;14693:33;14758:3;14743:19;;14543:225::o;14773:356::-;14975:2;14957:21;;;14994:18;;;14987:30;15053:34;15048:2;15033:18;;15026:62;15120:2;15105:18;;14947:182::o;15134:408::-;15336:2;15318:21;;;15375:2;15355:18;;;15348:30;15414:34;15409:2;15394:18;;15387:62;-1:-1:-1;;;15480:2:16;15465:18;;15458:42;15532:3;15517:19;;15308:234::o;15547:356::-;15749:2;15731:21;;;15768:18;;;15761:30;15827:34;15822:2;15807:18;;15800:62;15894:2;15879:18;;15721:182::o;15908:405::-;16110:2;16092:21;;;16149:2;16129:18;;;16122:30;16188:34;16183:2;16168:18;;16161:62;-1:-1:-1;;;16254:2:16;16239:18;;16232:39;16303:3;16288:19;;16082:231::o;16318:411::-;16520:2;16502:21;;;16559:2;16539:18;;;16532:30;16598:34;16593:2;16578:18;;16571:62;-1:-1:-1;;;16664:2:16;16649:18;;16642:45;16719:3;16704:19;;16492:237::o;16734:397::-;16936:2;16918:21;;;16975:2;16955:18;;;16948:30;17014:34;17009:2;16994:18;;16987:62;-1:-1:-1;;;17080:2:16;17065:18;;17058:31;17121:3;17106:19;;16908:223::o;17136:413::-;17338:2;17320:21;;;17377:2;17357:18;;;17350:30;17416:34;17411:2;17396:18;;17389:62;-1:-1:-1;;;17482:2:16;17467:18;;17460:47;17539:3;17524:19;;17310:239::o;17554:408::-;17756:2;17738:21;;;17795:2;17775:18;;;17768:30;17834:34;17829:2;17814:18;;17807:62;-1:-1:-1;;;17900:2:16;17885:18;;17878:42;17952:3;17937:19;;17728:234::o;17967:177::-;18113:25;;;18101:2;18086:18;;18068:76::o;18149:128::-;;18220:1;18216:6;18213:1;18210:13;18207:2;;;18226:18;;:::i;:::-;-1:-1:-1;18262:9:16;;18197:80::o;18282:120::-;;18348:1;18338:2;;18353:18;;:::i;:::-;-1:-1:-1;18387:9:16;;18328:74::o;18407:168::-;;18513:1;18509;18505:6;18501:14;18498:1;18495:21;18490:1;18483:9;18476:17;18472:45;18469:2;;;18520:18;;:::i;:::-;-1:-1:-1;18560:9:16;;18459:116::o;18580:125::-;;18648:1;18645;18642:8;18639:2;;;18653:18;;:::i;:::-;-1:-1:-1;18690:9:16;;18629:76::o;18710:258::-;18782:1;18792:113;18806:6;18803:1;18800:13;18792:113;;;18882:11;;;18876:18;18863:11;;;18856:39;18828:2;18821:10;18792:113;;;18923:6;18920:1;18917:13;18914:2;;;-1:-1:-1;;18958:1:16;18940:16;;18933:27;18763:205::o;18973:380::-;19058:1;19048:12;;19105:1;19095:12;;;19116:2;;19170:4;19162:6;19158:17;19148:27;;19116:2;19223;19215:6;19212:14;19192:18;19189:38;19186:2;;;19269:10;19264:3;19260:20;19257:1;19250:31;19304:4;19301:1;19294:15;19332:4;19329:1;19322:15;19186:2;;19028:325;;;:::o;19358:135::-;;-1:-1:-1;;19418:17:16;;19415:2;;;19438:18;;:::i;:::-;-1:-1:-1;19485:1:16;19474:13;;19405:88::o;19498:112::-;;19556:1;19546:2;;19561:18;;:::i;:::-;-1:-1:-1;19595:9:16;;19536:74::o;19615:127::-;19676:10;19671:3;19667:20;19664:1;19657:31;19707:4;19704:1;19697:15;19731:4;19728:1;19721:15;19747:127;19808:10;19803:3;19799:20;19796:1;19789:31;19839:4;19836:1;19829:15;19863:4;19860:1;19853:15;19879:127;19940:10;19935:3;19931:20;19928:1;19921:31;19971:4;19968:1;19961:15;19995:4;19992:1;19985:15;20011:133;-1:-1:-1;;;;;;20087:32:16;;20077:43;;20067:2;;20134:1;20131;20124:12",
  source:
    '// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\n\nimport "@openzeppelin/contracts/token/ERC721/ERC721.sol";\nimport "@openzeppelin/contracts/access/Ownable.sol";\nimport "@openzeppelin/contracts/utils/Strings.sol";\nimport "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol";\nimport "./lib/ERC2981PerTokenRoyalties.sol";\n\ncontract AvaxPenguin is ERC721Enumerable, Ownable, ERC2981PerTokenRoyalties {\n    using Strings for uint256;\n\n    uint256 public constant MAX_MINTABLE = 5555;\n    uint256 public constant MAX_PER_CLAIM = 10;\n    uint256 public constant NFT_PRICE = 0.85 ether; \n    uint256 public constant ROYALTY_VALUE = 300;\n\n    // tokenID mapping\n    mapping(uint256 => uint256) indexer;\n\n    uint256 indexerLength = MAX_MINTABLE;\n    mapping(uint256 => uint256) tokenIDMap;\n    mapping(uint256 => uint256) takenImages;\n\n    string baseUri = "ipfs://QmUmRkaSq8E7tBhAEXHqWunJ3fb8cSXf6oN2sDnEenSJmb/";\n    uint256 public minted = 0;\n    bool public canClaim = false;\n    uint256 gross = 0;\n    address ownerOfContract;\n    address royaltyAddress;\n\n    event Claim(uint256 indexed _id);\n\n    constructor(\n        string memory nftName,\n        string memory nftSymbol,\n        string memory baseTokenURI,\n        address owner,\n        address royalties\n    ) ERC721(nftName, nftSymbol) Ownable() {\n        ownerOfContract = owner;\n        royaltyAddress = royalties;\n        baseUri = baseTokenURI;\n    }\n\n    function tokensByAddress(address _owner)\n        public\n        view\n        returns (uint256[] memory)\n    {\n        uint256[] memory result = new uint256[](balanceOf(_owner));\n        uint256 balanceOfOwner = balanceOf(_owner);\n        for (uint256 i = 0; i < balanceOfOwner; i++) {\n            uint256 idToken = tokenOfOwnerByIndex(_owner,i);\n            result[i] = idToken;\n        }\n        return result;\n    }\n\n    /* *************** */\n    /*     Minting     */\n    /* *************** */\n\n    // Think of it as an array of 100 elements, where we take\n    //    a random index, and then we want to make sure we don\'t\n    //    pick it again.\n    // If it hasn\'t been picked, the mapping points to 0, otherwise\n    //    it will point to the index which took its place\n    function getNextImageID(uint256 index) internal returns (uint256) {\n        uint256 nextImageID = indexer[index];\n\n        // if it\'s 0, means it hasn\'t been picked yet\n        if (nextImageID == 0) {\n            nextImageID = index;\n        }\n        // Swap last one with the picked one.\n        // Last one can be a previously picked one as well, thats why we check\n        if (indexer[indexerLength - 1] == 0) {\n            indexer[index] = indexerLength - 1;\n        } else {\n            indexer[index] = indexer[indexerLength - 1];\n        }\n        indexerLength -= 1;\n        return nextImageID;\n    }\n\n    function enoughRandom() internal view returns (uint256) {\n        if (MAX_MINTABLE - minted == 0) return 0;\n        return\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        block.difficulty,\n                        block.timestamp,\n                        msg.sender,\n                        blockhash(block.number)\n                    )\n                )\n            ) % (indexerLength);\n    }\n\n    function randomMint(address receiver, uint256 nextTokenIndex) internal {\n        uint256 nextIndexerId = enoughRandom();\n        uint256 nextImageID;\n        if(minted < 13){\n            nextImageID = nextTokenIndex;\n        }else {\n            nextImageID = getNextImageID(nextIndexerId);\n        }\n\n        assert(takenImages[nextImageID] == 0);\n        takenImages[nextImageID] = 1;\n        tokenIDMap[nextTokenIndex] = nextImageID;\n        _safeMint(receiver, nextTokenIndex);\n    }\n\n    function toggleClaimability() external onlyOwner {\n        canClaim = !canClaim;\n    }\n\n    function claim(uint256 n) public payable {\n        require(canClaim, "It\'s not possible to claim just yet.");\n        require(n + minted <= MAX_MINTABLE, "Not enough left to mint.");\n        require(n > 0, "Number need to be higher than 0");\n        require(n <= MAX_PER_CLAIM, "Max per claim is 10");\n        require(\n            msg.value >= (NFT_PRICE * n),\n            "Ether value sent is below the price"\n        );\n\n        uint256 total_cost = (NFT_PRICE * n);\n        gross += total_cost;\n\n        uint256 excess = msg.value - total_cost;\n        payable(address(this)).transfer(total_cost);\n\n        for (uint256 i = 0; i < n; i++) {\n            randomMint(_msgSender(), minted);\n            _setTokenRoyalty(minted, royaltyAddress, ROYALTY_VALUE);\n\n            minted += 1;\n            emit Claim(minted);\n        }\n\n        if (excess > 0) {\n            payable(_msgSender()).transfer(excess);\n        }\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            "ERC721: transfer caller is not owner nor approved"\n        );\n\n        _transfer(from, to, tokenId);\n    }\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n\n        safeTransferFrom(from, to, tokenId, "");\n    }\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            "ERC721: transfer caller is not owner nor approved"\n        );\n\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /* ****************** */\n    /*       ERC721       */\n    /* ****************** */\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(\n            _exists(tokenId),\n            "ERC721Metadata: URI query for nonexistent token"\n        );\n        string memory baseURI = _baseURI();\n        uint256 imageID = tokenIDMap[tokenId];\n        return\n            bytes(baseURI).length > 0\n                ? string(abi.encodePacked(baseURI, imageID.toString(),".json"))\n                : "";\n    }\n\n    function setBaseUri(string memory uri) external onlyOwner {\n        baseUri = uri;\n    }\n\n    function _baseURI() internal view override returns (string memory) {\n        return baseUri;\n    }\n\n    /// @inheritdoc\tERC165\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC2981Base, ERC721Enumerable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal override(ERC721Enumerable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    function setOwner(address _ownerOfContract) external onlyOwner {\n       ownerOfContract = _ownerOfContract;\n    }\n\n    function setRoyalty(address _royaltyAddress) external onlyOwner {\n       royaltyAddress = _royaltyAddress;\n    }\n\n    function withdraw() external {\n        require(ownerOfContract == msg.sender, "Your are not the owner");\n        require(address(this).balance > 0, "Nothing to withdraw");\n        payable(_msgSender()).transfer(address(this).balance);\n    }\n\n    receive() external payable {}\n\n    fallback() external payable {}\n}\n',
  sourcePath: "/home/anas/dev/avax_pengu/contracts/AvaxPenguin.sol",
  ast: {
    absolutePath: "project:/contracts/AvaxPenguin.sol",
    exportedSymbols: {
      Address: [1762],
      AvaxPenguin: [2702],
      Context: [1784],
      ERC165: [2011],
      ERC2981Base: [2739],
      ERC2981PerTokenRoyalties: [2818],
      ERC721: [935],
      ERC721Enumerable: [1407],
      IERC165: [2023],
      IERC2981Royalties: [2834],
      IERC721: [1051],
      IERC721Enumerable: [1438],
      IERC721Metadata: [1465],
      IERC721Receiver: [1069],
      Ownable: [104],
      Strings: [1987],
    },
    id: 2703,
    license: "MIT",
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 2025,
        literals: ["solidity", "0.8", ".0"],
        nodeType: "PragmaDirective",
        src: "32:22:12",
      },
      {
        absolutePath: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        file: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        id: 2026,
        nodeType: "ImportDirective",
        scope: 2703,
        sourceUnit: 936,
        src: "56:57:12",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/access/Ownable.sol",
        file: "@openzeppelin/contracts/access/Ownable.sol",
        id: 2027,
        nodeType: "ImportDirective",
        scope: 2703,
        sourceUnit: 105,
        src: "114:52:12",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/Strings.sol",
        file: "@openzeppelin/contracts/utils/Strings.sol",
        id: 2028,
        nodeType: "ImportDirective",
        scope: 2703,
        sourceUnit: 1988,
        src: "167:51:12",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        file: "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        id: 2029,
        nodeType: "ImportDirective",
        scope: 2703,
        sourceUnit: 1408,
        src: "219:78:12",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "project:/contracts/lib/ERC2981PerTokenRoyalties.sol",
        file: "./lib/ERC2981PerTokenRoyalties.sol",
        id: 2030,
        nodeType: "ImportDirective",
        scope: 2703,
        sourceUnit: 2819,
        src: "298:44:12",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 2031,
              name: "ERC721Enumerable",
              nodeType: "IdentifierPath",
              referencedDeclaration: 1407,
              src: "368:16:12",
            },
            id: 2032,
            nodeType: "InheritanceSpecifier",
            src: "368:16:12",
          },
          {
            baseName: {
              id: 2033,
              name: "Ownable",
              nodeType: "IdentifierPath",
              referencedDeclaration: 104,
              src: "386:7:12",
            },
            id: 2034,
            nodeType: "InheritanceSpecifier",
            src: "386:7:12",
          },
          {
            baseName: {
              id: 2035,
              name: "ERC2981PerTokenRoyalties",
              nodeType: "IdentifierPath",
              referencedDeclaration: 2818,
              src: "395:24:12",
            },
            id: 2036,
            nodeType: "InheritanceSpecifier",
            src: "395:24:12",
          },
        ],
        contractDependencies: [
          104, 935, 1051, 1407, 1438, 1465, 1784, 2011, 2023, 2739, 2818, 2834,
        ],
        contractKind: "contract",
        fullyImplemented: true,
        id: 2702,
        linearizedBaseContracts: [
          2702, 2818, 2739, 2834, 104, 1407, 1438, 935, 1465, 1051, 2011, 2023,
          1784,
        ],
        name: "AvaxPenguin",
        nodeType: "ContractDefinition",
        nodes: [
          {
            id: 2039,
            libraryName: {
              id: 2037,
              name: "Strings",
              nodeType: "IdentifierPath",
              referencedDeclaration: 1987,
              src: "432:7:12",
            },
            nodeType: "UsingForDirective",
            src: "426:26:12",
            typeName: {
              id: 2038,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "444:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
          },
          {
            constant: true,
            functionSelector: "3f879faf",
            id: 2042,
            mutability: "constant",
            name: "MAX_MINTABLE",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "458:43:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2040,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "458:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "35353535",
              id: 2041,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "497:4:12",
              typeDescriptions: {
                typeIdentifier: "t_rational_5555_by_1",
                typeString: "int_const 5555",
              },
              value: "5555",
            },
            visibility: "public",
          },
          {
            constant: true,
            functionSelector: "5471f49f",
            id: 2045,
            mutability: "constant",
            name: "MAX_PER_CLAIM",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "507:42:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2043,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "507:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "3130",
              id: 2044,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "547:2:12",
              typeDescriptions: {
                typeIdentifier: "t_rational_10_by_1",
                typeString: "int_const 10",
              },
              value: "10",
            },
            visibility: "public",
          },
          {
            constant: true,
            functionSelector: "676dd563",
            id: 2048,
            mutability: "constant",
            name: "NFT_PRICE",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "555:46:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2046,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "555:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "302e3835",
              id: 2047,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "591:10:12",
              subdenomination: "ether",
              typeDescriptions: {
                typeIdentifier: "t_rational_850000000000000000_by_1",
                typeString: "int_const 850000000000000000",
              },
              value: "0.85",
            },
            visibility: "public",
          },
          {
            constant: true,
            functionSelector: "93791b03",
            id: 2051,
            mutability: "constant",
            name: "ROYALTY_VALUE",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "608:43:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2049,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "608:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "333030",
              id: 2050,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "648:3:12",
              typeDescriptions: {
                typeIdentifier: "t_rational_300_by_1",
                typeString: "int_const 300",
              },
              value: "300",
            },
            visibility: "public",
          },
          {
            constant: false,
            id: 2055,
            mutability: "mutable",
            name: "indexer",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "681:35:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 2054,
              keyType: {
                id: 2052,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "689:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "681:27:12",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 2053,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "700:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2058,
            mutability: "mutable",
            name: "indexerLength",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "723:36:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2056,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "723:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              id: 2057,
              name: "MAX_MINTABLE",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 2042,
              src: "747:12:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2062,
            mutability: "mutable",
            name: "tokenIDMap",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "765:38:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 2061,
              keyType: {
                id: 2059,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "773:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "765:27:12",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 2060,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "784:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2066,
            mutability: "mutable",
            name: "takenImages",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "809:39:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 2065,
              keyType: {
                id: 2063,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "817:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "809:27:12",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 2064,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "828:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2069,
            mutability: "mutable",
            name: "baseUri",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "855:73:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_string_storage",
              typeString: "string",
            },
            typeName: {
              id: 2067,
              name: "string",
              nodeType: "ElementaryTypeName",
              src: "855:6:12",
              typeDescriptions: {
                typeIdentifier: "t_string_storage_ptr",
                typeString: "string",
              },
            },
            value: {
              hexValue:
                "697066733a2f2f516d556d526b615371384537744268414558487157756e4a3366623863535866366f4e3273446e45656e534a6d622f",
              id: 2068,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "string",
              lValueRequested: false,
              nodeType: "Literal",
              src: "872:56:12",
              typeDescriptions: {
                typeIdentifier:
                  "t_stringliteral_ff137abc2c7b6c4696aa43e9250400cc2c173f8b891de9c1e160096bc4954ff6",
                typeString:
                  'literal_string "ipfs://QmUmRkaSq8E7tBhAEXHqWunJ3fb8cSXf6oN2sDnEenSJmb/"',
              },
              value: "ipfs://QmUmRkaSq8E7tBhAEXHqWunJ3fb8cSXf6oN2sDnEenSJmb/",
            },
            visibility: "internal",
          },
          {
            constant: false,
            functionSelector: "4f02c420",
            id: 2072,
            mutability: "mutable",
            name: "minted",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "934:25:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2070,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "934:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "30",
              id: 2071,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "958:1:12",
              typeDescriptions: {
                typeIdentifier: "t_rational_0_by_1",
                typeString: "int_const 0",
              },
              value: "0",
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "6dc7a627",
            id: 2075,
            mutability: "mutable",
            name: "canClaim",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "965:28:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_bool",
              typeString: "bool",
            },
            typeName: {
              id: 2073,
              name: "bool",
              nodeType: "ElementaryTypeName",
              src: "965:4:12",
              typeDescriptions: {
                typeIdentifier: "t_bool",
                typeString: "bool",
              },
            },
            value: {
              hexValue: "66616c7365",
              id: 2074,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "bool",
              lValueRequested: false,
              nodeType: "Literal",
              src: "988:5:12",
              typeDescriptions: {
                typeIdentifier: "t_bool",
                typeString: "bool",
              },
              value: "false",
            },
            visibility: "public",
          },
          {
            constant: false,
            id: 2078,
            mutability: "mutable",
            name: "gross",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "999:17:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2076,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "999:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "30",
              id: 2077,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "1015:1:12",
              typeDescriptions: {
                typeIdentifier: "t_rational_0_by_1",
                typeString: "int_const 0",
              },
              value: "0",
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2080,
            mutability: "mutable",
            name: "ownerOfContract",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "1022:23:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 2079,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1022:7:12",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2082,
            mutability: "mutable",
            name: "royaltyAddress",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "1051:22:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 2081,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1051:7:12",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            visibility: "internal",
          },
          {
            anonymous: false,
            id: 2086,
            name: "Claim",
            nodeType: "EventDefinition",
            parameters: {
              id: 2085,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2084,
                  indexed: true,
                  mutability: "mutable",
                  name: "_id",
                  nodeType: "VariableDeclaration",
                  scope: 2086,
                  src: "1092:19:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2083,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1092:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1091:21:12",
            },
            src: "1080:33:12",
          },
          {
            body: {
              id: 2117,
              nodeType: "Block",
              src: "1324:108:12",
              statements: [
                {
                  expression: {
                    id: 2107,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2105,
                      name: "ownerOfContract",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2080,
                      src: "1334:15:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2106,
                      name: "owner",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2094,
                      src: "1352:5:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1334:23:12",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 2108,
                  nodeType: "ExpressionStatement",
                  src: "1334:23:12",
                },
                {
                  expression: {
                    id: 2111,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2109,
                      name: "royaltyAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2082,
                      src: "1367:14:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2110,
                      name: "royalties",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2096,
                      src: "1384:9:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1367:26:12",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 2112,
                  nodeType: "ExpressionStatement",
                  src: "1367:26:12",
                },
                {
                  expression: {
                    id: 2115,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2113,
                      name: "baseUri",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2069,
                      src: "1403:7:12",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2114,
                      name: "baseTokenURI",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2092,
                      src: "1413:12:12",
                      typeDescriptions: {
                        typeIdentifier: "t_string_memory_ptr",
                        typeString: "string memory",
                      },
                    },
                    src: "1403:22:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage",
                      typeString: "string storage ref",
                    },
                  },
                  id: 2116,
                  nodeType: "ExpressionStatement",
                  src: "1403:22:12",
                },
              ],
            },
            id: 2118,
            implemented: true,
            kind: "constructor",
            modifiers: [
              {
                arguments: [
                  {
                    id: 2099,
                    name: "nftName",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2088,
                    src: "1294:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string memory",
                    },
                  },
                  {
                    id: 2100,
                    name: "nftSymbol",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2090,
                    src: "1303:9:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string memory",
                    },
                  },
                ],
                id: 2101,
                modifierName: {
                  id: 2098,
                  name: "ERC721",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 935,
                  src: "1287:6:12",
                },
                nodeType: "ModifierInvocation",
                src: "1287:26:12",
              },
              {
                arguments: [],
                id: 2103,
                modifierName: {
                  id: 2102,
                  name: "Ownable",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 104,
                  src: "1314:7:12",
                },
                nodeType: "ModifierInvocation",
                src: "1314:9:12",
              },
            ],
            name: "",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2097,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2088,
                  mutability: "mutable",
                  name: "nftName",
                  nodeType: "VariableDeclaration",
                  scope: 2118,
                  src: "1140:21:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2087,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "1140:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2090,
                  mutability: "mutable",
                  name: "nftSymbol",
                  nodeType: "VariableDeclaration",
                  scope: 2118,
                  src: "1171:23:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2089,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "1171:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2092,
                  mutability: "mutable",
                  name: "baseTokenURI",
                  nodeType: "VariableDeclaration",
                  scope: 2118,
                  src: "1204:26:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2091,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "1204:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2094,
                  mutability: "mutable",
                  name: "owner",
                  nodeType: "VariableDeclaration",
                  scope: 2118,
                  src: "1240:13:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2093,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1240:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2096,
                  mutability: "mutable",
                  name: "royalties",
                  nodeType: "VariableDeclaration",
                  scope: 2118,
                  src: "1263:17:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2095,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1263:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1130:156:12",
            },
            returnParameters: {
              id: 2104,
              nodeType: "ParameterList",
              parameters: [],
              src: "1324:0:12",
            },
            scope: 2702,
            src: "1119:313:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2172,
              nodeType: "Block",
              src: "1546:309:12",
              statements: [
                {
                  assignments: [2130],
                  declarations: [
                    {
                      constant: false,
                      id: 2130,
                      mutability: "mutable",
                      name: "result",
                      nodeType: "VariableDeclaration",
                      scope: 2172,
                      src: "1556:23:12",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr",
                        typeString: "uint256[]",
                      },
                      typeName: {
                        baseType: {
                          id: 2128,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "1556:7:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2129,
                        nodeType: "ArrayTypeName",
                        src: "1556:9:12",
                        typeDescriptions: {
                          typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr",
                          typeString: "uint256[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2138,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 2135,
                            name: "_owner",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2120,
                            src: "1606:6:12",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 2134,
                          name: "balanceOf",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 222,
                          src: "1596:9:12",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            typeString:
                              "function (address) view returns (uint256)",
                          },
                        },
                        id: 2136,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "1596:17:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2133,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "NewExpression",
                      src: "1582:13:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        typeString:
                          "function (uint256) pure returns (uint256[] memory)",
                      },
                      typeName: {
                        baseType: {
                          id: 2131,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "1586:7:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2132,
                        nodeType: "ArrayTypeName",
                        src: "1586:9:12",
                        typeDescriptions: {
                          typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr",
                          typeString: "uint256[]",
                        },
                      },
                    },
                    id: 2137,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1582:32:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr",
                      typeString: "uint256[] memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "1556:58:12",
                },
                {
                  assignments: [2140],
                  declarations: [
                    {
                      constant: false,
                      id: 2140,
                      mutability: "mutable",
                      name: "balanceOfOwner",
                      nodeType: "VariableDeclaration",
                      scope: 2172,
                      src: "1624:22:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2139,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "1624:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2144,
                  initialValue: {
                    arguments: [
                      {
                        id: 2142,
                        name: "_owner",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2120,
                        src: "1659:6:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 2141,
                      name: "balanceOf",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 222,
                      src: "1649:9:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        typeString: "function (address) view returns (uint256)",
                      },
                    },
                    id: 2143,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1649:17:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "1624:42:12",
                },
                {
                  body: {
                    id: 2168,
                    nodeType: "Block",
                    src: "1721:105:12",
                    statements: [
                      {
                        assignments: [2156],
                        declarations: [
                          {
                            constant: false,
                            id: 2156,
                            mutability: "mutable",
                            name: "idToken",
                            nodeType: "VariableDeclaration",
                            scope: 2168,
                            src: "1735:15:12",
                            stateVariable: false,
                            storageLocation: "default",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            typeName: {
                              id: 2155,
                              name: "uint256",
                              nodeType: "ElementaryTypeName",
                              src: "1735:7:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 2161,
                        initialValue: {
                          arguments: [
                            {
                              id: 2158,
                              name: "_owner",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2120,
                              src: "1773:6:12",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 2159,
                              name: "i",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2146,
                              src: "1780:1:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            id: 2157,
                            name: "tokenOfOwnerByIndex",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1147,
                            src: "1753:19:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              typeString:
                                "function (address,uint256) view returns (uint256)",
                            },
                          },
                          id: 2160,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "1753:29:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "1735:47:12",
                      },
                      {
                        expression: {
                          id: 2166,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              id: 2162,
                              name: "result",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2130,
                              src: "1796:6:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_array$_t_uint256_$dyn_memory_ptr",
                                typeString: "uint256[] memory",
                              },
                            },
                            id: 2164,
                            indexExpression: {
                              id: 2163,
                              name: "i",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2146,
                              src: "1803:1:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: "IndexAccess",
                            src: "1796:9:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            id: 2165,
                            name: "idToken",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2156,
                            src: "1808:7:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "1796:19:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2167,
                        nodeType: "ExpressionStatement",
                        src: "1796:19:12",
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2151,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2149,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2146,
                      src: "1696:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2150,
                      name: "balanceOfOwner",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2140,
                      src: "1700:14:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "1696:18:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2169,
                  initializationExpression: {
                    assignments: [2146],
                    declarations: [
                      {
                        constant: false,
                        id: 2146,
                        mutability: "mutable",
                        name: "i",
                        nodeType: "VariableDeclaration",
                        scope: 2169,
                        src: "1681:9:12",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2145,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "1681:7:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2148,
                    initialValue: {
                      hexValue: "30",
                      id: 2147,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "1693:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "1681:13:12",
                  },
                  loopExpression: {
                    expression: {
                      id: 2153,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "1716:3:12",
                      subExpression: {
                        id: 2152,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2146,
                        src: "1716:1:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2154,
                    nodeType: "ExpressionStatement",
                    src: "1716:3:12",
                  },
                  nodeType: "ForStatement",
                  src: "1676:150:12",
                },
                {
                  expression: {
                    id: 2170,
                    name: "result",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2130,
                    src: "1842:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr",
                      typeString: "uint256[] memory",
                    },
                  },
                  functionReturnParameters: 2125,
                  id: 2171,
                  nodeType: "Return",
                  src: "1835:13:12",
                },
              ],
            },
            functionSelector: "d6bc5942",
            id: 2173,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "tokensByAddress",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2121,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2120,
                  mutability: "mutable",
                  name: "_owner",
                  nodeType: "VariableDeclaration",
                  scope: 2173,
                  src: "1463:14:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2119,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1463:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1462:16:12",
            },
            returnParameters: {
              id: 2125,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2124,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2173,
                  src: "1524:16:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr",
                    typeString: "uint256[]",
                  },
                  typeName: {
                    baseType: {
                      id: 2122,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "1524:7:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2123,
                    nodeType: "ArrayTypeName",
                    src: "1524:9:12",
                    typeDescriptions: {
                      typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr",
                      typeString: "uint256[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1523:18:12",
            },
            scope: 2702,
            src: "1438:417:12",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2229,
              nodeType: "Block",
              src: "2284:543:12",
              statements: [
                {
                  assignments: [2181],
                  declarations: [
                    {
                      constant: false,
                      id: 2181,
                      mutability: "mutable",
                      name: "nextImageID",
                      nodeType: "VariableDeclaration",
                      scope: 2229,
                      src: "2294:19:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2180,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "2294:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2185,
                  initialValue: {
                    baseExpression: {
                      id: 2182,
                      name: "indexer",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2055,
                      src: "2316:7:12",
                      typeDescriptions: {
                        typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                        typeString: "mapping(uint256 => uint256)",
                      },
                    },
                    id: 2184,
                    indexExpression: {
                      id: 2183,
                      name: "index",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2175,
                      src: "2324:5:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "2316:14:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "2294:36:12",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2188,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2186,
                      name: "nextImageID",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2181,
                      src: "2399:11:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 2187,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2414:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "2399:16:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2194,
                  nodeType: "IfStatement",
                  src: "2395:66:12",
                  trueBody: {
                    id: 2193,
                    nodeType: "Block",
                    src: "2417:44:12",
                    statements: [
                      {
                        expression: {
                          id: 2191,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 2189,
                            name: "nextImageID",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2181,
                            src: "2431:11:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            id: 2190,
                            name: "index",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2175,
                            src: "2445:5:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2431:19:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2192,
                        nodeType: "ExpressionStatement",
                        src: "2431:19:12",
                      },
                    ],
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2201,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      baseExpression: {
                        id: 2195,
                        name: "indexer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2055,
                        src: "2599:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 2199,
                      indexExpression: {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2198,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 2196,
                          name: "indexerLength",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2058,
                          src: "2607:13:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "-",
                        rightExpression: {
                          hexValue: "31",
                          id: 2197,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "2623:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_1_by_1",
                            typeString: "int_const 1",
                          },
                          value: "1",
                        },
                        src: "2607:17:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "2599:26:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 2200,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2629:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "2599:31:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 2221,
                    nodeType: "Block",
                    src: "2697:68:12",
                    statements: [
                      {
                        expression: {
                          id: 2219,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              id: 2211,
                              name: "indexer",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2055,
                              src: "2711:7:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_uint256_$_t_uint256_$",
                                typeString: "mapping(uint256 => uint256)",
                              },
                            },
                            id: 2213,
                            indexExpression: {
                              id: 2212,
                              name: "index",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2175,
                              src: "2719:5:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: "IndexAccess",
                            src: "2711:14:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            baseExpression: {
                              id: 2214,
                              name: "indexer",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2055,
                              src: "2728:7:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_uint256_$_t_uint256_$",
                                typeString: "mapping(uint256 => uint256)",
                              },
                            },
                            id: 2218,
                            indexExpression: {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 2217,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                id: 2215,
                                name: "indexerLength",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 2058,
                                src: "2736:13:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: "-",
                              rightExpression: {
                                hexValue: "31",
                                id: 2216,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "2752:1:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_1_by_1",
                                  typeString: "int_const 1",
                                },
                                value: "1",
                              },
                              src: "2736:17:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "2728:26:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2711:43:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2220,
                        nodeType: "ExpressionStatement",
                        src: "2711:43:12",
                      },
                    ],
                  },
                  id: 2222,
                  nodeType: "IfStatement",
                  src: "2595:170:12",
                  trueBody: {
                    id: 2210,
                    nodeType: "Block",
                    src: "2632:59:12",
                    statements: [
                      {
                        expression: {
                          id: 2208,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              id: 2202,
                              name: "indexer",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2055,
                              src: "2646:7:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_uint256_$_t_uint256_$",
                                typeString: "mapping(uint256 => uint256)",
                              },
                            },
                            id: 2204,
                            indexExpression: {
                              id: 2203,
                              name: "index",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2175,
                              src: "2654:5:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: "IndexAccess",
                            src: "2646:14:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 2207,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 2205,
                              name: "indexerLength",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2058,
                              src: "2663:13:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "-",
                            rightExpression: {
                              hexValue: "31",
                              id: 2206,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "2679:1:12",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_1_by_1",
                                typeString: "int_const 1",
                              },
                              value: "1",
                            },
                            src: "2663:17:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2646:34:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2209,
                        nodeType: "ExpressionStatement",
                        src: "2646:34:12",
                      },
                    ],
                  },
                },
                {
                  expression: {
                    id: 2225,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2223,
                      name: "indexerLength",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2058,
                      src: "2774:13:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "-=",
                    rightHandSide: {
                      hexValue: "31",
                      id: 2224,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2791:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_1_by_1",
                        typeString: "int_const 1",
                      },
                      value: "1",
                    },
                    src: "2774:18:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 2226,
                  nodeType: "ExpressionStatement",
                  src: "2774:18:12",
                },
                {
                  expression: {
                    id: 2227,
                    name: "nextImageID",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2181,
                    src: "2809:11:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 2179,
                  id: 2228,
                  nodeType: "Return",
                  src: "2802:18:12",
                },
              ],
            },
            id: 2230,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getNextImageID",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2176,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2175,
                  mutability: "mutable",
                  name: "index",
                  nodeType: "VariableDeclaration",
                  scope: 2230,
                  src: "2242:13:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2174,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2242:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2241:15:12",
            },
            returnParameters: {
              id: 2179,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2178,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2230,
                  src: "2275:7:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2177,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2275:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2274:9:12",
            },
            scope: 2702,
            src: "2218:609:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 2265,
              nodeType: "Block",
              src: "2889:398:12",
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2239,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 2237,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 2235,
                        name: "MAX_MINTABLE",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2042,
                        src: "2903:12:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        id: 2236,
                        name: "minted",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2072,
                        src: "2918:6:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "2903:21:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 2238,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2928:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "2903:26:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2242,
                  nodeType: "IfStatement",
                  src: "2899:40:12",
                  trueBody: {
                    expression: {
                      hexValue: "30",
                      id: 2240,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2938:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    functionReturnParameters: 2234,
                    id: 2241,
                    nodeType: "Return",
                    src: "2931:8:12",
                  },
                },
                {
                  expression: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2263,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              arguments: [
                                {
                                  expression: {
                                    id: 2248,
                                    name: "block",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 4294967292,
                                    src: "3066:5:12",
                                    typeDescriptions: {
                                      typeIdentifier: "t_magic_block",
                                      typeString: "block",
                                    },
                                  },
                                  id: 2249,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "difficulty",
                                  nodeType: "MemberAccess",
                                  src: "3066:16:12",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                {
                                  expression: {
                                    id: 2250,
                                    name: "block",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 4294967292,
                                    src: "3108:5:12",
                                    typeDescriptions: {
                                      typeIdentifier: "t_magic_block",
                                      typeString: "block",
                                    },
                                  },
                                  id: 2251,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "timestamp",
                                  nodeType: "MemberAccess",
                                  src: "3108:15:12",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                {
                                  expression: {
                                    id: 2252,
                                    name: "msg",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 4294967281,
                                    src: "3149:3:12",
                                    typeDescriptions: {
                                      typeIdentifier: "t_magic_message",
                                      typeString: "msg",
                                    },
                                  },
                                  id: 2253,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "sender",
                                  nodeType: "MemberAccess",
                                  src: "3149:10:12",
                                  typeDescriptions: {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                },
                                {
                                  arguments: [
                                    {
                                      expression: {
                                        id: 2255,
                                        name: "block",
                                        nodeType: "Identifier",
                                        overloadedDeclarations: [],
                                        referencedDeclaration: 4294967292,
                                        src: "3195:5:12",
                                        typeDescriptions: {
                                          typeIdentifier: "t_magic_block",
                                          typeString: "block",
                                        },
                                      },
                                      id: 2256,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      lValueRequested: false,
                                      memberName: "number",
                                      nodeType: "MemberAccess",
                                      src: "3195:12:12",
                                      typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                      },
                                    },
                                  ],
                                  expression: {
                                    argumentTypes: [
                                      {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                      },
                                    ],
                                    id: 2254,
                                    name: "blockhash",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 4294967291,
                                    src: "3185:9:12",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                      typeString:
                                        "function (uint256) view returns (bytes32)",
                                    },
                                  },
                                  id: 2257,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  kind: "functionCall",
                                  lValueRequested: false,
                                  names: [],
                                  nodeType: "FunctionCall",
                                  src: "3185:23:12",
                                  tryCall: false,
                                  typeDescriptions: {
                                    typeIdentifier: "t_bytes32",
                                    typeString: "bytes32",
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                  {
                                    typeIdentifier: "t_bytes32",
                                    typeString: "bytes32",
                                  },
                                ],
                                expression: {
                                  id: 2246,
                                  name: "abi",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 4294967295,
                                  src: "3024:3:12",
                                  typeDescriptions: {
                                    typeIdentifier: "t_magic_abi",
                                    typeString: "abi",
                                  },
                                },
                                id: 2247,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                memberName: "encodePacked",
                                nodeType: "MemberAccess",
                                src: "3024:16:12",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  typeString:
                                    "function () pure returns (bytes memory)",
                                },
                              },
                              id: 2258,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "functionCall",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "3024:206:12",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_bytes_memory_ptr",
                                typeString: "bytes memory",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_bytes_memory_ptr",
                                typeString: "bytes memory",
                              },
                            ],
                            id: 2245,
                            name: "keccak256",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967288,
                            src: "2993:9:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              typeString:
                                "function (bytes memory) pure returns (bytes32)",
                            },
                          },
                          id: 2259,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2993:255:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_bytes32",
                            typeString: "bytes32",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bytes32",
                            typeString: "bytes32",
                          },
                        ],
                        id: 2244,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "2968:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_uint256_$",
                          typeString: "type(uint256)",
                        },
                        typeName: {
                          id: 2243,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "2968:7:12",
                          typeDescriptions: {},
                        },
                      },
                      id: 2260,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2968:294:12",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "%",
                    rightExpression: {
                      components: [
                        {
                          id: 2261,
                          name: "indexerLength",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2058,
                          src: "3266:13:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      id: 2262,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "TupleExpression",
                      src: "3265:15:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "2968:312:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 2234,
                  id: 2264,
                  nodeType: "Return",
                  src: "2949:331:12",
                },
              ],
            },
            id: 2266,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "enoughRandom",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2231,
              nodeType: "ParameterList",
              parameters: [],
              src: "2854:2:12",
            },
            returnParameters: {
              id: 2234,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2233,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2266,
                  src: "2880:7:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2232,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2880:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2879:9:12",
            },
            scope: 2702,
            src: "2833:454:12",
            stateMutability: "view",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 2322,
              nodeType: "Block",
              src: "3364:415:12",
              statements: [
                {
                  assignments: [2274],
                  declarations: [
                    {
                      constant: false,
                      id: 2274,
                      mutability: "mutable",
                      name: "nextIndexerId",
                      nodeType: "VariableDeclaration",
                      scope: 2322,
                      src: "3374:21:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2273,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "3374:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2277,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 2275,
                      name: "enoughRandom",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2266,
                      src: "3398:12:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_uint256_$",
                        typeString: "function () view returns (uint256)",
                      },
                    },
                    id: 2276,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3398:14:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3374:38:12",
                },
                {
                  assignments: [2279],
                  declarations: [
                    {
                      constant: false,
                      id: 2279,
                      mutability: "mutable",
                      name: "nextImageID",
                      nodeType: "VariableDeclaration",
                      scope: 2322,
                      src: "3422:19:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2278,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "3422:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2280,
                  nodeType: "VariableDeclarationStatement",
                  src: "3422:19:12",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2283,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2281,
                      name: "minted",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2072,
                      src: "3454:6:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      hexValue: "3133",
                      id: 2282,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3463:2:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_13_by_1",
                        typeString: "int_const 13",
                      },
                      value: "13",
                    },
                    src: "3454:11:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 2295,
                    nodeType: "Block",
                    src: "3524:68:12",
                    statements: [
                      {
                        expression: {
                          id: 2293,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 2289,
                            name: "nextImageID",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2279,
                            src: "3538:11:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            arguments: [
                              {
                                id: 2291,
                                name: "nextIndexerId",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 2274,
                                src: "3567:13:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              ],
                              id: 2290,
                              name: "getNextImageID",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2230,
                              src: "3552:14:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                typeString:
                                  "function (uint256) returns (uint256)",
                              },
                            },
                            id: 2292,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "3552:29:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3538:43:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2294,
                        nodeType: "ExpressionStatement",
                        src: "3538:43:12",
                      },
                    ],
                  },
                  id: 2296,
                  nodeType: "IfStatement",
                  src: "3451:141:12",
                  trueBody: {
                    id: 2288,
                    nodeType: "Block",
                    src: "3466:53:12",
                    statements: [
                      {
                        expression: {
                          id: 2286,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 2284,
                            name: "nextImageID",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2279,
                            src: "3480:11:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            id: 2285,
                            name: "nextTokenIndex",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2270,
                            src: "3494:14:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3480:28:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2287,
                        nodeType: "ExpressionStatement",
                        src: "3480:28:12",
                      },
                    ],
                  },
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2302,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          baseExpression: {
                            id: 2298,
                            name: "takenImages",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2066,
                            src: "3609:11:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_uint256_$",
                              typeString: "mapping(uint256 => uint256)",
                            },
                          },
                          id: 2300,
                          indexExpression: {
                            id: 2299,
                            name: "nextImageID",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2279,
                            src: "3621:11:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "3609:24:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          hexValue: "30",
                          id: 2301,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "3637:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "3609:29:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      ],
                      id: 2297,
                      name: "assert",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 4294967293,
                      src: "3602:6:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_assert_pure$_t_bool_$returns$__$",
                        typeString: "function (bool) pure",
                      },
                    },
                    id: 2303,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3602:37:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2304,
                  nodeType: "ExpressionStatement",
                  src: "3602:37:12",
                },
                {
                  expression: {
                    id: 2309,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 2305,
                        name: "takenImages",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2066,
                        src: "3649:11:12",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 2307,
                      indexExpression: {
                        id: 2306,
                        name: "nextImageID",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2279,
                        src: "3661:11:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "3649:24:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "31",
                      id: 2308,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3676:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_1_by_1",
                        typeString: "int_const 1",
                      },
                      value: "1",
                    },
                    src: "3649:28:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 2310,
                  nodeType: "ExpressionStatement",
                  src: "3649:28:12",
                },
                {
                  expression: {
                    id: 2315,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 2311,
                        name: "tokenIDMap",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2062,
                        src: "3687:10:12",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 2313,
                      indexExpression: {
                        id: 2312,
                        name: "nextTokenIndex",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2270,
                        src: "3698:14:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "3687:26:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2314,
                      name: "nextImageID",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2279,
                      src: "3716:11:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "3687:40:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 2316,
                  nodeType: "ExpressionStatement",
                  src: "3687:40:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 2318,
                        name: "receiver",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2268,
                        src: "3747:8:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2319,
                        name: "nextTokenIndex",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2270,
                        src: "3757:14:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2317,
                      name: "_safeMint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [599, 628],
                      referencedDeclaration: 599,
                      src: "3737:9:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 2320,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3737:35:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2321,
                  nodeType: "ExpressionStatement",
                  src: "3737:35:12",
                },
              ],
            },
            id: 2323,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "randomMint",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2271,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2268,
                  mutability: "mutable",
                  name: "receiver",
                  nodeType: "VariableDeclaration",
                  scope: 2323,
                  src: "3313:16:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2267,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "3313:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2270,
                  mutability: "mutable",
                  name: "nextTokenIndex",
                  nodeType: "VariableDeclaration",
                  scope: 2323,
                  src: "3331:22:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2269,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3331:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3312:42:12",
            },
            returnParameters: {
              id: 2272,
              nodeType: "ParameterList",
              parameters: [],
              src: "3364:0:12",
            },
            scope: 2702,
            src: "3293:486:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 2333,
              nodeType: "Block",
              src: "3834:37:12",
              statements: [
                {
                  expression: {
                    id: 2331,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2328,
                      name: "canClaim",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2075,
                      src: "3844:8:12",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2330,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "!",
                      prefix: true,
                      src: "3855:9:12",
                      subExpression: {
                        id: 2329,
                        name: "canClaim",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2075,
                        src: "3856:8:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "3844:20:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2332,
                  nodeType: "ExpressionStatement",
                  src: "3844:20:12",
                },
              ],
            },
            functionSelector: "c94364e3",
            id: 2334,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 2326,
                modifierName: {
                  id: 2325,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 46,
                  src: "3824:9:12",
                },
                nodeType: "ModifierInvocation",
                src: "3824:9:12",
              },
            ],
            name: "toggleClaimability",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2324,
              nodeType: "ParameterList",
              parameters: [],
              src: "3812:2:12",
            },
            returnParameters: {
              id: 2327,
              nodeType: "ParameterList",
              parameters: [],
              src: "3834:0:12",
            },
            scope: 2702,
            src: "3785:86:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 2453,
              nodeType: "Block",
              src: "3918:880:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 2340,
                        name: "canClaim",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2075,
                        src: "3936:8:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "49742773206e6f7420706f737369626c6520746f20636c61696d206a757374207965742e",
                        id: 2341,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "3946:38:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_1a5575fa3ec0740a62d13105de9a43af1a09bddaea88628ed3c87f87614e054a",
                          typeString:
                            'literal_string "It\'s not possible to claim just yet."',
                        },
                        value: "It's not possible to claim just yet.",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_1a5575fa3ec0740a62d13105de9a43af1a09bddaea88628ed3c87f87614e054a",
                          typeString:
                            'literal_string "It\'s not possible to claim just yet."',
                        },
                      ],
                      id: 2339,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "3928:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2342,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3928:57:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2343,
                  nodeType: "ExpressionStatement",
                  src: "3928:57:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2349,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 2347,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 2345,
                            name: "n",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2336,
                            src: "4003:1:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "+",
                          rightExpression: {
                            id: 2346,
                            name: "minted",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2072,
                            src: "4007:6:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "4003:10:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "<=",
                        rightExpression: {
                          id: 2348,
                          name: "MAX_MINTABLE",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2042,
                          src: "4017:12:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4003:26:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "4e6f7420656e6f756768206c65667420746f206d696e742e",
                        id: 2350,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4031:26:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_14b300f96da803f669efdbdd02baace360b70bad7a90a912de12c1de64a59ad7",
                          typeString:
                            'literal_string "Not enough left to mint."',
                        },
                        value: "Not enough left to mint.",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_14b300f96da803f669efdbdd02baace360b70bad7a90a912de12c1de64a59ad7",
                          typeString:
                            'literal_string "Not enough left to mint."',
                        },
                      ],
                      id: 2344,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "3995:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2351,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3995:63:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2352,
                  nodeType: "ExpressionStatement",
                  src: "3995:63:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2356,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 2354,
                          name: "n",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2336,
                          src: "4076:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">",
                        rightExpression: {
                          hexValue: "30",
                          id: 2355,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4080:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "4076:5:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "4e756d626572206e65656420746f20626520686967686572207468616e2030",
                        id: 2357,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4083:33:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_5e1e21efea8c1bcd1b33c77d1218e24d2dbcc73f0d3acf2fc1d623814f7ebcc0",
                          typeString:
                            'literal_string "Number need to be higher than 0"',
                        },
                        value: "Number need to be higher than 0",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_5e1e21efea8c1bcd1b33c77d1218e24d2dbcc73f0d3acf2fc1d623814f7ebcc0",
                          typeString:
                            'literal_string "Number need to be higher than 0"',
                        },
                      ],
                      id: 2353,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4068:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2358,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4068:49:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2359,
                  nodeType: "ExpressionStatement",
                  src: "4068:49:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2363,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 2361,
                          name: "n",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2336,
                          src: "4135:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "<=",
                        rightExpression: {
                          id: 2362,
                          name: "MAX_PER_CLAIM",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2045,
                          src: "4140:13:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4135:18:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue: "4d61782070657220636c61696d206973203130",
                        id: 2364,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4155:21:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_31fb5da33fdd32502737a559a2f7e268c46e3fff6d7747d2676688e36949c66d",
                          typeString: 'literal_string "Max per claim is 10"',
                        },
                        value: "Max per claim is 10",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_31fb5da33fdd32502737a559a2f7e268c46e3fff6d7747d2676688e36949c66d",
                          typeString: 'literal_string "Max per claim is 10"',
                        },
                      ],
                      id: 2360,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4127:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2365,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4127:50:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2366,
                  nodeType: "ExpressionStatement",
                  src: "4127:50:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2374,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 2368,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "4208:3:12",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 2369,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "value",
                          nodeType: "MemberAccess",
                          src: "4208:9:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">=",
                        rightExpression: {
                          components: [
                            {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 2372,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                id: 2370,
                                name: "NFT_PRICE",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 2048,
                                src: "4222:9:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: "*",
                              rightExpression: {
                                id: 2371,
                                name: "n",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 2336,
                                src: "4234:1:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              src: "4222:13:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          id: 2373,
                          isConstant: false,
                          isInlineArray: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "TupleExpression",
                          src: "4221:15:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4208:28:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "45746865722076616c75652073656e742069732062656c6f7720746865207072696365",
                        id: 2375,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4250:37:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_84aad3058d1ccb6a9d9d3a0e38e47a2035130e03c464b9b76344f6355bda1fc6",
                          typeString:
                            'literal_string "Ether value sent is below the price"',
                        },
                        value: "Ether value sent is below the price",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_84aad3058d1ccb6a9d9d3a0e38e47a2035130e03c464b9b76344f6355bda1fc6",
                          typeString:
                            'literal_string "Ether value sent is below the price"',
                        },
                      ],
                      id: 2367,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4187:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2376,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4187:110:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2377,
                  nodeType: "ExpressionStatement",
                  src: "4187:110:12",
                },
                {
                  assignments: [2379],
                  declarations: [
                    {
                      constant: false,
                      id: 2379,
                      mutability: "mutable",
                      name: "total_cost",
                      nodeType: "VariableDeclaration",
                      scope: 2453,
                      src: "4308:18:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2378,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4308:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2384,
                  initialValue: {
                    components: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2382,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 2380,
                          name: "NFT_PRICE",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2048,
                          src: "4330:9:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "*",
                        rightExpression: {
                          id: 2381,
                          name: "n",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2336,
                          src: "4342:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4330:13:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    id: 2383,
                    isConstant: false,
                    isInlineArray: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "TupleExpression",
                    src: "4329:15:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4308:36:12",
                },
                {
                  expression: {
                    id: 2387,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2385,
                      name: "gross",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2078,
                      src: "4354:5:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "+=",
                    rightHandSide: {
                      id: 2386,
                      name: "total_cost",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2379,
                      src: "4363:10:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "4354:19:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 2388,
                  nodeType: "ExpressionStatement",
                  src: "4354:19:12",
                },
                {
                  assignments: [2390],
                  declarations: [
                    {
                      constant: false,
                      id: 2390,
                      mutability: "mutable",
                      name: "excess",
                      nodeType: "VariableDeclaration",
                      scope: 2453,
                      src: "4384:14:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2389,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4384:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2395,
                  initialValue: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2394,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 2391,
                        name: "msg",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967281,
                        src: "4401:3:12",
                        typeDescriptions: {
                          typeIdentifier: "t_magic_message",
                          typeString: "msg",
                        },
                      },
                      id: 2392,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "value",
                      nodeType: "MemberAccess",
                      src: "4401:9:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "-",
                    rightExpression: {
                      id: 2393,
                      name: "total_cost",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2379,
                      src: "4413:10:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "4401:22:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4384:39:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 2404,
                        name: "total_cost",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2379,
                        src: "4465:10:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            arguments: [
                              {
                                id: 2400,
                                name: "this",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967268,
                                src: "4449:4:12",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_contract$_AvaxPenguin_$2702",
                                  typeString: "contract AvaxPenguin",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier:
                                    "t_contract$_AvaxPenguin_$2702",
                                  typeString: "contract AvaxPenguin",
                                },
                              ],
                              id: 2399,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "4441:7:12",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 2398,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "4441:7:12",
                                typeDescriptions: {},
                              },
                            },
                            id: 2401,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "4441:13:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 2397,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "4433:8:12",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_payable_$",
                            typeString: "type(address payable)",
                          },
                          typeName: {
                            id: 2396,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "4433:8:12",
                            stateMutability: "payable",
                            typeDescriptions: {},
                          },
                        },
                        id: 2402,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4433:22:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 2403,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "4433:31:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 2405,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4433:43:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2406,
                  nodeType: "ExpressionStatement",
                  src: "4433:43:12",
                },
                {
                  body: {
                    id: 2437,
                    nodeType: "Block",
                    src: "4519:184:12",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              arguments: [],
                              expression: {
                                argumentTypes: [],
                                id: 2418,
                                name: "_msgSender",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1774,
                                src: "4544:10:12",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_internal_view$__$returns$_t_address_$",
                                  typeString:
                                    "function () view returns (address)",
                                },
                              },
                              id: 2419,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "functionCall",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "4544:12:12",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 2420,
                              name: "minted",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2072,
                              src: "4558:6:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            id: 2417,
                            name: "randomMint",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2323,
                            src: "4533:10:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              typeString: "function (address,uint256)",
                            },
                          },
                          id: 2421,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4533:32:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2422,
                        nodeType: "ExpressionStatement",
                        src: "4533:32:12",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              id: 2424,
                              name: "minted",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2072,
                              src: "4596:6:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              id: 2425,
                              name: "royaltyAddress",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2082,
                              src: "4604:14:12",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 2426,
                              name: "ROYALTY_VALUE",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2051,
                              src: "4620:13:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            id: 2423,
                            name: "_setTokenRoyalty",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2781,
                            src: "4579:16:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              typeString: "function (uint256,address,uint256)",
                            },
                          },
                          id: 2427,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4579:55:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2428,
                        nodeType: "ExpressionStatement",
                        src: "4579:55:12",
                      },
                      {
                        expression: {
                          id: 2431,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 2429,
                            name: "minted",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2072,
                            src: "4649:6:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "+=",
                          rightHandSide: {
                            hexValue: "31",
                            id: 2430,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "4659:1:12",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_1_by_1",
                              typeString: "int_const 1",
                            },
                            value: "1",
                          },
                          src: "4649:11:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2432,
                        nodeType: "ExpressionStatement",
                        src: "4649:11:12",
                      },
                      {
                        eventCall: {
                          arguments: [
                            {
                              id: 2434,
                              name: "minted",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2072,
                              src: "4685:6:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            id: 2433,
                            name: "Claim",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2086,
                            src: "4679:5:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              typeString: "function (uint256)",
                            },
                          },
                          id: 2435,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4679:13:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2436,
                        nodeType: "EmitStatement",
                        src: "4674:18:12",
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2413,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2411,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2408,
                      src: "4507:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2412,
                      name: "n",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2336,
                      src: "4511:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "4507:5:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2438,
                  initializationExpression: {
                    assignments: [2408],
                    declarations: [
                      {
                        constant: false,
                        id: 2408,
                        mutability: "mutable",
                        name: "i",
                        nodeType: "VariableDeclaration",
                        scope: 2438,
                        src: "4492:9:12",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2407,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "4492:7:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2410,
                    initialValue: {
                      hexValue: "30",
                      id: 2409,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4504:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "4492:13:12",
                  },
                  loopExpression: {
                    expression: {
                      id: 2415,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "4514:3:12",
                      subExpression: {
                        id: 2414,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2408,
                        src: "4514:1:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2416,
                    nodeType: "ExpressionStatement",
                    src: "4514:3:12",
                  },
                  nodeType: "ForStatement",
                  src: "4487:216:12",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2441,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2439,
                      name: "excess",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2390,
                      src: "4717:6:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      hexValue: "30",
                      id: 2440,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4726:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "4717:10:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2452,
                  nodeType: "IfStatement",
                  src: "4713:79:12",
                  trueBody: {
                    id: 2451,
                    nodeType: "Block",
                    src: "4729:63:12",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              id: 2448,
                              name: "excess",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2390,
                              src: "4774:6:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            expression: {
                              arguments: [
                                {
                                  arguments: [],
                                  expression: {
                                    argumentTypes: [],
                                    id: 2444,
                                    name: "_msgSender",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 1774,
                                    src: "4751:10:12",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_function_internal_view$__$returns$_t_address_$",
                                      typeString:
                                        "function () view returns (address)",
                                    },
                                  },
                                  id: 2445,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  kind: "functionCall",
                                  lValueRequested: false,
                                  names: [],
                                  nodeType: "FunctionCall",
                                  src: "4751:12:12",
                                  tryCall: false,
                                  typeDescriptions: {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                ],
                                id: 2443,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                nodeType: "ElementaryTypeNameExpression",
                                src: "4743:8:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_type$_t_address_payable_$",
                                  typeString: "type(address payable)",
                                },
                                typeName: {
                                  id: 2442,
                                  name: "address",
                                  nodeType: "ElementaryTypeName",
                                  src: "4743:8:12",
                                  stateMutability: "payable",
                                  typeDescriptions: {},
                                },
                              },
                              id: 2446,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "typeConversion",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "4743:21:12",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                            },
                            id: 2447,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "transfer",
                            nodeType: "MemberAccess",
                            src: "4743:30:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              typeString: "function (uint256)",
                            },
                          },
                          id: 2449,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4743:38:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2450,
                        nodeType: "ExpressionStatement",
                        src: "4743:38:12",
                      },
                    ],
                  },
                },
              ],
            },
            functionSelector: "379607f5",
            id: 2454,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "claim",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2337,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2336,
                  mutability: "mutable",
                  name: "n",
                  nodeType: "VariableDeclaration",
                  scope: 2454,
                  src: "3892:9:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2335,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3892:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3891:11:12",
            },
            returnParameters: {
              id: 2338,
              nodeType: "ParameterList",
              parameters: [],
              src: "3918:0:12",
            },
            scope: 2702,
            src: "3877:921:12",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            baseFunctions: [447],
            body: {
              id: 2479,
              nodeType: "Block",
              src: "4923:193:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 2466,
                              name: "_msgSender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 1774,
                              src: "4973:10:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_view$__$returns$_t_address_$",
                                typeString:
                                  "function () view returns (address)",
                              },
                            },
                            id: 2467,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "4973:12:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          {
                            id: 2468,
                            name: "tokenId",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2460,
                            src: "4987:7:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          ],
                          id: 2465,
                          name: "_isApprovedOrOwner",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 584,
                          src: "4954:18:12",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            typeString:
                              "function (address,uint256) view returns (bool)",
                          },
                        },
                        id: 2469,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4954:41:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        id: 2470,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "5009:51:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          typeString:
                            'literal_string "ERC721: transfer caller is not owner nor approved"',
                        },
                        value:
                          "ERC721: transfer caller is not owner nor approved",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          typeString:
                            'literal_string "ERC721: transfer caller is not owner nor approved"',
                        },
                      ],
                      id: 2464,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4933:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2471,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4933:137:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2472,
                  nodeType: "ExpressionStatement",
                  src: "4933:137:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 2474,
                        name: "from",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2456,
                        src: "5091:4:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2475,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2458,
                        src: "5097:2:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2476,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2460,
                        src: "5101:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2473,
                      name: "_transfer",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 805,
                      src: "5081:9:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,address,uint256)",
                      },
                    },
                    id: 2477,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5081:28:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2478,
                  nodeType: "ExpressionStatement",
                  src: "5081:28:12",
                },
              ],
            },
            functionSelector: "23b872dd",
            id: 2480,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "transferFrom",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2462,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "4914:8:12",
            },
            parameters: {
              id: 2461,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2456,
                  mutability: "mutable",
                  name: "from",
                  nodeType: "VariableDeclaration",
                  scope: 2480,
                  src: "4835:12:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2455,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "4835:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2458,
                  mutability: "mutable",
                  name: "to",
                  nodeType: "VariableDeclaration",
                  scope: 2480,
                  src: "4857:10:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2457,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "4857:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2460,
                  mutability: "mutable",
                  name: "tokenId",
                  nodeType: "VariableDeclaration",
                  scope: 2480,
                  src: "4877:15:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2459,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "4877:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "4825:73:12",
            },
            returnParameters: {
              id: 2463,
              nodeType: "ParameterList",
              parameters: [],
              src: "4923:0:12",
            },
            scope: 2702,
            src: "4804:312:12",
            stateMutability: "nonpayable",
            virtual: true,
            visibility: "public",
          },
          {
            baseFunctions: [466],
            body: {
              id: 2497,
              nodeType: "Block",
              src: "5245:57:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 2491,
                        name: "from",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2482,
                        src: "5273:4:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2492,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2484,
                        src: "5279:2:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2493,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2486,
                        src: "5283:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        hexValue: "",
                        id: 2494,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "5292:2:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          typeString: 'literal_string ""',
                        },
                        value: "",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          typeString: 'literal_string ""',
                        },
                      ],
                      id: 2490,
                      name: "safeTransferFrom",
                      nodeType: "Identifier",
                      overloadedDeclarations: [2498, 2527],
                      referencedDeclaration: 2527,
                      src: "5256:16:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        typeString:
                          "function (address,address,uint256,bytes memory)",
                      },
                    },
                    id: 2495,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5256:39:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2496,
                  nodeType: "ExpressionStatement",
                  src: "5256:39:12",
                },
              ],
            },
            functionSelector: "42842e0e",
            id: 2498,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "safeTransferFrom",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2488,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "5236:8:12",
            },
            parameters: {
              id: 2487,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2482,
                  mutability: "mutable",
                  name: "from",
                  nodeType: "VariableDeclaration",
                  scope: 2498,
                  src: "5157:12:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2481,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5157:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2484,
                  mutability: "mutable",
                  name: "to",
                  nodeType: "VariableDeclaration",
                  scope: 2498,
                  src: "5179:10:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2483,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5179:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2486,
                  mutability: "mutable",
                  name: "tokenId",
                  nodeType: "VariableDeclaration",
                  scope: 2498,
                  src: "5199:15:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2485,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "5199:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5147:73:12",
            },
            returnParameters: {
              id: 2489,
              nodeType: "ParameterList",
              parameters: [],
              src: "5245:0:12",
            },
            scope: 2702,
            src: "5122:180:12",
            stateMutability: "nonpayable",
            virtual: true,
            visibility: "public",
          },
          {
            baseFunctions: [496],
            body: {
              id: 2526,
              nodeType: "Block",
              src: "5459:204:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 2512,
                              name: "_msgSender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 1774,
                              src: "5509:10:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_view$__$returns$_t_address_$",
                                typeString:
                                  "function () view returns (address)",
                              },
                            },
                            id: 2513,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "5509:12:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          {
                            id: 2514,
                            name: "tokenId",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2504,
                            src: "5523:7:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          ],
                          id: 2511,
                          name: "_isApprovedOrOwner",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 584,
                          src: "5490:18:12",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            typeString:
                              "function (address,uint256) view returns (bool)",
                          },
                        },
                        id: 2515,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "5490:41:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        id: 2516,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "5545:51:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          typeString:
                            'literal_string "ERC721: transfer caller is not owner nor approved"',
                        },
                        value:
                          "ERC721: transfer caller is not owner nor approved",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          typeString:
                            'literal_string "ERC721: transfer caller is not owner nor approved"',
                        },
                      ],
                      id: 2510,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "5469:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2517,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5469:137:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2518,
                  nodeType: "ExpressionStatement",
                  src: "5469:137:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 2520,
                        name: "from",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2500,
                        src: "5631:4:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2521,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2502,
                        src: "5637:2:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2522,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2504,
                        src: "5641:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 2523,
                        name: "_data",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2506,
                        src: "5650:5:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bytes_memory_ptr",
                          typeString: "bytes memory",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_bytes_memory_ptr",
                          typeString: "bytes memory",
                        },
                      ],
                      id: 2519,
                      name: "_safeTransfer",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 525,
                      src: "5617:13:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        typeString:
                          "function (address,address,uint256,bytes memory)",
                      },
                    },
                    id: 2524,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5617:39:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2525,
                  nodeType: "ExpressionStatement",
                  src: "5617:39:12",
                },
              ],
            },
            functionSelector: "b88d4fde",
            id: 2527,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "safeTransferFrom",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2508,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "5450:8:12",
            },
            parameters: {
              id: 2507,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2500,
                  mutability: "mutable",
                  name: "from",
                  nodeType: "VariableDeclaration",
                  scope: 2527,
                  src: "5343:12:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2499,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5343:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2502,
                  mutability: "mutable",
                  name: "to",
                  nodeType: "VariableDeclaration",
                  scope: 2527,
                  src: "5365:10:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2501,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5365:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2504,
                  mutability: "mutable",
                  name: "tokenId",
                  nodeType: "VariableDeclaration",
                  scope: 2527,
                  src: "5385:15:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2503,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "5385:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2506,
                  mutability: "mutable",
                  name: "_data",
                  nodeType: "VariableDeclaration",
                  scope: 2527,
                  src: "5410:18:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_bytes_memory_ptr",
                    typeString: "bytes",
                  },
                  typeName: {
                    id: 2505,
                    name: "bytes",
                    nodeType: "ElementaryTypeName",
                    src: "5410:5:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bytes_storage_ptr",
                      typeString: "bytes",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5333:101:12",
            },
            returnParameters: {
              id: 2509,
              nodeType: "ParameterList",
              parameters: [],
              src: "5459:0:12",
            },
            scope: 2702,
            src: "5308:355:12",
            stateMutability: "nonpayable",
            virtual: true,
            visibility: "public",
          },
          {
            baseFunctions: [312],
            body: {
              id: 2574,
              nodeType: "Block",
              src: "5888:373:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 2537,
                            name: "tokenId",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2529,
                            src: "5927:7:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          ],
                          id: 2536,
                          name: "_exists",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 543,
                          src: "5919:7:12",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            typeString:
                              "function (uint256) view returns (bool)",
                          },
                        },
                        id: 2538,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "5919:16:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        id: 2539,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "5949:49:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          typeString:
                            'literal_string "ERC721Metadata: URI query for nonexistent token"',
                        },
                        value:
                          "ERC721Metadata: URI query for nonexistent token",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          typeString:
                            'literal_string "ERC721Metadata: URI query for nonexistent token"',
                        },
                      ],
                      id: 2535,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "5898:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2540,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5898:110:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2541,
                  nodeType: "ExpressionStatement",
                  src: "5898:110:12",
                },
                {
                  assignments: [2543],
                  declarations: [
                    {
                      constant: false,
                      id: 2543,
                      mutability: "mutable",
                      name: "baseURI",
                      nodeType: "VariableDeclaration",
                      scope: 2574,
                      src: "6018:21:12",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier: "t_string_memory_ptr",
                        typeString: "string",
                      },
                      typeName: {
                        id: 2542,
                        name: "string",
                        nodeType: "ElementaryTypeName",
                        src: "6018:6:12",
                        typeDescriptions: {
                          typeIdentifier: "t_string_storage_ptr",
                          typeString: "string",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2546,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 2544,
                      name: "_baseURI",
                      nodeType: "Identifier",
                      overloadedDeclarations: [2596],
                      referencedDeclaration: 2596,
                      src: "6042:8:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        typeString: "function () view returns (string memory)",
                      },
                    },
                    id: 2545,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6042:10:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6018:34:12",
                },
                {
                  assignments: [2548],
                  declarations: [
                    {
                      constant: false,
                      id: 2548,
                      mutability: "mutable",
                      name: "imageID",
                      nodeType: "VariableDeclaration",
                      scope: 2574,
                      src: "6062:15:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2547,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6062:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2552,
                  initialValue: {
                    baseExpression: {
                      id: 2549,
                      name: "tokenIDMap",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2062,
                      src: "6080:10:12",
                      typeDescriptions: {
                        typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                        typeString: "mapping(uint256 => uint256)",
                      },
                    },
                    id: 2551,
                    indexExpression: {
                      id: 2550,
                      name: "tokenId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2529,
                      src: "6091:7:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "6080:19:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6062:37:12",
                },
                {
                  expression: {
                    condition: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 2559,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          arguments: [
                            {
                              id: 2555,
                              name: "baseURI",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2543,
                              src: "6134:7:12",
                              typeDescriptions: {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                            ],
                            id: 2554,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "6128:5:12",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_bytes_storage_ptr_$",
                              typeString: "type(bytes storage pointer)",
                            },
                            typeName: {
                              id: 2553,
                              name: "bytes",
                              nodeType: "ElementaryTypeName",
                              src: "6128:5:12",
                              typeDescriptions: {},
                            },
                          },
                          id: 2556,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "6128:14:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_bytes_memory_ptr",
                            typeString: "bytes memory",
                          },
                        },
                        id: 2557,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "length",
                        nodeType: "MemberAccess",
                        src: "6128:21:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: ">",
                      rightExpression: {
                        hexValue: "30",
                        id: 2558,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "6152:1:12",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                        value: "0",
                      },
                      src: "6128:25:12",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    falseExpression: {
                      hexValue: "",
                      id: 2571,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "string",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "6252:2:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        typeString: 'literal_string ""',
                      },
                      value: "",
                    },
                    id: 2572,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "Conditional",
                    src: "6128:126:12",
                    trueExpression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              id: 2564,
                              name: "baseURI",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2543,
                              src: "6196:7:12",
                              typeDescriptions: {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                            },
                            {
                              arguments: [],
                              expression: {
                                argumentTypes: [],
                                expression: {
                                  id: 2565,
                                  name: "imageID",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2548,
                                  src: "6205:7:12",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                id: 2566,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                memberName: "toString",
                                nodeType: "MemberAccess",
                                referencedDeclaration: 1869,
                                src: "6205:16:12",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  typeString:
                                    "function (uint256) pure returns (string memory)",
                                },
                              },
                              id: 2567,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "functionCall",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "6205:18:12",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                            },
                            {
                              hexValue: "2e6a736f6e",
                              id: 2568,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "string",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "6224:7:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                typeString: 'literal_string ".json"',
                              },
                              value: ".json",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                              {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                              {
                                typeIdentifier:
                                  "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                typeString: 'literal_string ".json"',
                              },
                            ],
                            expression: {
                              id: 2562,
                              name: "abi",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967295,
                              src: "6179:3:12",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_abi",
                                typeString: "abi",
                              },
                            },
                            id: 2563,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            memberName: "encodePacked",
                            nodeType: "MemberAccess",
                            src: "6179:16:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              typeString:
                                "function () pure returns (bytes memory)",
                            },
                          },
                          id: 2569,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "6179:53:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_bytes_memory_ptr",
                            typeString: "bytes memory",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bytes_memory_ptr",
                            typeString: "bytes memory",
                          },
                        ],
                        id: 2561,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "6172:6:12",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_string_storage_ptr_$",
                          typeString: "type(string storage pointer)",
                        },
                        typeName: {
                          id: 2560,
                          name: "string",
                          nodeType: "ElementaryTypeName",
                          src: "6172:6:12",
                          typeDescriptions: {},
                        },
                      },
                      id: 2570,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6172:61:12",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_string_memory_ptr",
                        typeString: "string memory",
                      },
                    },
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string memory",
                    },
                  },
                  functionReturnParameters: 2534,
                  id: 2573,
                  nodeType: "Return",
                  src: "6109:145:12",
                },
              ],
            },
            functionSelector: "c87b56dd",
            id: 2575,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "tokenURI",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2531,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "5843:8:12",
            },
            parameters: {
              id: 2530,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2529,
                  mutability: "mutable",
                  name: "tokenId",
                  nodeType: "VariableDeclaration",
                  scope: 2575,
                  src: "5774:15:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2528,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "5774:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5773:17:12",
            },
            returnParameters: {
              id: 2534,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2533,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2575,
                  src: "5869:13:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2532,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "5869:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5868:15:12",
            },
            scope: 2702,
            src: "5756:505:12",
            stateMutability: "view",
            virtual: true,
            visibility: "public",
          },
          {
            body: {
              id: 2586,
              nodeType: "Block",
              src: "6325:30:12",
              statements: [
                {
                  expression: {
                    id: 2584,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2582,
                      name: "baseUri",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2069,
                      src: "6335:7:12",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2583,
                      name: "uri",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2577,
                      src: "6345:3:12",
                      typeDescriptions: {
                        typeIdentifier: "t_string_memory_ptr",
                        typeString: "string memory",
                      },
                    },
                    src: "6335:13:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage",
                      typeString: "string storage ref",
                    },
                  },
                  id: 2585,
                  nodeType: "ExpressionStatement",
                  src: "6335:13:12",
                },
              ],
            },
            functionSelector: "a0bcfc7f",
            id: 2587,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 2580,
                modifierName: {
                  id: 2579,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 46,
                  src: "6315:9:12",
                },
                nodeType: "ModifierInvocation",
                src: "6315:9:12",
              },
            ],
            name: "setBaseUri",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2578,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2577,
                  mutability: "mutable",
                  name: "uri",
                  nodeType: "VariableDeclaration",
                  scope: 2587,
                  src: "6287:17:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2576,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "6287:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6286:19:12",
            },
            returnParameters: {
              id: 2581,
              nodeType: "ParameterList",
              parameters: [],
              src: "6325:0:12",
            },
            scope: 2702,
            src: "6267:88:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            baseFunctions: [321],
            body: {
              id: 2595,
              nodeType: "Block",
              src: "6428:31:12",
              statements: [
                {
                  expression: {
                    id: 2593,
                    name: "baseUri",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2069,
                    src: "6445:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage",
                      typeString: "string storage ref",
                    },
                  },
                  functionReturnParameters: 2592,
                  id: 2594,
                  nodeType: "Return",
                  src: "6438:14:12",
                },
              ],
            },
            id: 2596,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "_baseURI",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2589,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "6395:8:12",
            },
            parameters: {
              id: 2588,
              nodeType: "ParameterList",
              parameters: [],
              src: "6378:2:12",
            },
            returnParameters: {
              id: 2592,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2591,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2596,
                  src: "6413:13:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2590,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "6413:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6412:15:12",
            },
            scope: 2702,
            src: "6361:98:12",
            stateMutability: "view",
            virtual: false,
            visibility: "internal",
          },
          {
            baseFunctions: [1119, 2738],
            body: {
              id: 2612,
              nodeType: "Block",
              src: "6658:60:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 2609,
                        name: "interfaceId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2599,
                        src: "6699:11:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bytes4",
                          typeString: "bytes4",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bytes4",
                          typeString: "bytes4",
                        },
                      ],
                      expression: {
                        id: 2607,
                        name: "super",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967271,
                        src: "6675:5:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_super$_AvaxPenguin_$2702_$",
                          typeString: "type(contract super AvaxPenguin)",
                        },
                      },
                      id: 2608,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "supportsInterface",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 2738,
                      src: "6675:23:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        typeString: "function (bytes4) view returns (bool)",
                      },
                    },
                    id: 2610,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6675:36:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  functionReturnParameters: 2606,
                  id: 2611,
                  nodeType: "Return",
                  src: "6668:43:12",
                },
              ],
            },
            documentation: {
              id: 2597,
              nodeType: "StructuredDocumentation",
              src: "6465:22:12",
              text: "@inheritdoc\tERC165",
            },
            functionSelector: "01ffc9a7",
            id: 2613,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "supportsInterface",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2603,
              nodeType: "OverrideSpecifier",
              overrides: [
                {
                  id: 2601,
                  name: "ERC2981Base",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 2739,
                  src: "6600:11:12",
                },
                {
                  id: 2602,
                  name: "ERC721Enumerable",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 1407,
                  src: "6613:16:12",
                },
              ],
              src: "6591:39:12",
            },
            parameters: {
              id: 2600,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2599,
                  mutability: "mutable",
                  name: "interfaceId",
                  nodeType: "VariableDeclaration",
                  scope: 2613,
                  src: "6519:18:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bytes4",
                    typeString: "bytes4",
                  },
                  typeName: {
                    id: 2598,
                    name: "bytes4",
                    nodeType: "ElementaryTypeName",
                    src: "6519:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bytes4",
                      typeString: "bytes4",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6518:20:12",
            },
            returnParameters: {
              id: 2606,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2605,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2613,
                  src: "6648:4:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 2604,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "6648:4:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6647:6:12",
            },
            scope: 2702,
            src: "6492:226:12",
            stateMutability: "view",
            virtual: true,
            visibility: "public",
          },
          {
            baseFunctions: [1245],
            body: {
              id: 2632,
              nodeType: "Block",
              src: "6863:62:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 2627,
                        name: "from",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2615,
                        src: "6900:4:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2628,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2617,
                        src: "6906:2:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2629,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2619,
                        src: "6910:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 2624,
                        name: "super",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967271,
                        src: "6873:5:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_super$_AvaxPenguin_$2702_$",
                          typeString: "type(contract super AvaxPenguin)",
                        },
                      },
                      id: 2626,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "_beforeTokenTransfer",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1245,
                      src: "6873:26:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,address,uint256)",
                      },
                    },
                    id: 2630,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6873:45:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2631,
                  nodeType: "ExpressionStatement",
                  src: "6873:45:12",
                },
              ],
            },
            id: 2633,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "_beforeTokenTransfer",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2622,
              nodeType: "OverrideSpecifier",
              overrides: [
                {
                  id: 2621,
                  name: "ERC721Enumerable",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 1407,
                  src: "6845:16:12",
                },
              ],
              src: "6836:26:12",
            },
            parameters: {
              id: 2620,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2615,
                  mutability: "mutable",
                  name: "from",
                  nodeType: "VariableDeclaration",
                  scope: 2633,
                  src: "6763:12:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2614,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "6763:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2617,
                  mutability: "mutable",
                  name: "to",
                  nodeType: "VariableDeclaration",
                  scope: 2633,
                  src: "6785:10:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2616,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "6785:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2619,
                  mutability: "mutable",
                  name: "tokenId",
                  nodeType: "VariableDeclaration",
                  scope: 2633,
                  src: "6805:15:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2618,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6805:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6753:73:12",
            },
            returnParameters: {
              id: 2623,
              nodeType: "ParameterList",
              parameters: [],
              src: "6863:0:12",
            },
            scope: 2702,
            src: "6724:201:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 2644,
              nodeType: "Block",
              src: "6994:50:12",
              statements: [
                {
                  expression: {
                    id: 2642,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2640,
                      name: "ownerOfContract",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2080,
                      src: "7003:15:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2641,
                      name: "_ownerOfContract",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2635,
                      src: "7021:16:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "7003:34:12",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 2643,
                  nodeType: "ExpressionStatement",
                  src: "7003:34:12",
                },
              ],
            },
            functionSelector: "13af4035",
            id: 2645,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 2638,
                modifierName: {
                  id: 2637,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 46,
                  src: "6984:9:12",
                },
                nodeType: "ModifierInvocation",
                src: "6984:9:12",
              },
            ],
            name: "setOwner",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2636,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2635,
                  mutability: "mutable",
                  name: "_ownerOfContract",
                  nodeType: "VariableDeclaration",
                  scope: 2645,
                  src: "6949:24:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2634,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "6949:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6948:26:12",
            },
            returnParameters: {
              id: 2639,
              nodeType: "ParameterList",
              parameters: [],
              src: "6994:0:12",
            },
            scope: 2702,
            src: "6931:113:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 2656,
              nodeType: "Block",
              src: "7114:48:12",
              statements: [
                {
                  expression: {
                    id: 2654,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2652,
                      name: "royaltyAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2082,
                      src: "7123:14:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2653,
                      name: "_royaltyAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2647,
                      src: "7140:15:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "7123:32:12",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 2655,
                  nodeType: "ExpressionStatement",
                  src: "7123:32:12",
                },
              ],
            },
            functionSelector: "2a6432a4",
            id: 2657,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 2650,
                modifierName: {
                  id: 2649,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 46,
                  src: "7104:9:12",
                },
                nodeType: "ModifierInvocation",
                src: "7104:9:12",
              },
            ],
            name: "setRoyalty",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2648,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2647,
                  mutability: "mutable",
                  name: "_royaltyAddress",
                  nodeType: "VariableDeclaration",
                  scope: 2657,
                  src: "7070:23:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2646,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "7070:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "7069:25:12",
            },
            returnParameters: {
              id: 2651,
              nodeType: "ParameterList",
              parameters: [],
              src: "7114:0:12",
            },
            scope: 2702,
            src: "7050:112:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 2692,
              nodeType: "Block",
              src: "7197:211:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        id: 2664,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 2661,
                          name: "ownerOfContract",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2080,
                          src: "7215:15:12",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          expression: {
                            id: 2662,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "7234:3:12",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 2663,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "7234:10:12",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        src: "7215:29:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "596f757220617265206e6f7420746865206f776e6572",
                        id: 2665,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "7246:24:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_67b77cb8e323f66f6ae71d6827fe7f806b420df39a9e893bb770ed9f1dc449f1",
                          typeString: 'literal_string "Your are not the owner"',
                        },
                        value: "Your are not the owner",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_67b77cb8e323f66f6ae71d6827fe7f806b420df39a9e893bb770ed9f1dc449f1",
                          typeString: 'literal_string "Your are not the owner"',
                        },
                      ],
                      id: 2660,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "7207:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2666,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7207:64:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2667,
                  nodeType: "ExpressionStatement",
                  src: "7207:64:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2675,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            arguments: [
                              {
                                id: 2671,
                                name: "this",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967268,
                                src: "7297:4:12",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_contract$_AvaxPenguin_$2702",
                                  typeString: "contract AvaxPenguin",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier:
                                    "t_contract$_AvaxPenguin_$2702",
                                  typeString: "contract AvaxPenguin",
                                },
                              ],
                              id: 2670,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "7289:7:12",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 2669,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "7289:7:12",
                                typeDescriptions: {},
                              },
                            },
                            id: 2672,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "7289:13:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          id: 2673,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "balance",
                          nodeType: "MemberAccess",
                          src: "7289:21:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">",
                        rightExpression: {
                          hexValue: "30",
                          id: 2674,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "7313:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "7289:25:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue: "4e6f7468696e6720746f207769746864726177",
                        id: 2676,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "7316:21:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
                          typeString: 'literal_string "Nothing to withdraw"',
                        },
                        value: "Nothing to withdraw",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
                          typeString: 'literal_string "Nothing to withdraw"',
                        },
                      ],
                      id: 2668,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "7281:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2677,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7281:57:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2678,
                  nodeType: "ExpressionStatement",
                  src: "7281:57:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          arguments: [
                            {
                              id: 2687,
                              name: "this",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967268,
                              src: "7387:4:12",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_AvaxPenguin_$2702",
                                typeString: "contract AvaxPenguin",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_contract$_AvaxPenguin_$2702",
                                typeString: "contract AvaxPenguin",
                              },
                            ],
                            id: 2686,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "7379:7:12",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 2685,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "7379:7:12",
                              typeDescriptions: {},
                            },
                          },
                          id: 2688,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "7379:13:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        id: 2689,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "balance",
                        nodeType: "MemberAccess",
                        src: "7379:21:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 2681,
                              name: "_msgSender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 1774,
                              src: "7356:10:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_view$__$returns$_t_address_$",
                                typeString:
                                  "function () view returns (address)",
                              },
                            },
                            id: 2682,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "7356:12:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 2680,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "7348:8:12",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_payable_$",
                            typeString: "type(address payable)",
                          },
                          typeName: {
                            id: 2679,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "7348:8:12",
                            stateMutability: "payable",
                            typeDescriptions: {},
                          },
                        },
                        id: 2683,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "7348:21:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 2684,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "7348:30:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 2690,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7348:53:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2691,
                  nodeType: "ExpressionStatement",
                  src: "7348:53:12",
                },
              ],
            },
            functionSelector: "3ccfd60b",
            id: 2693,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "withdraw",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2658,
              nodeType: "ParameterList",
              parameters: [],
              src: "7185:2:12",
            },
            returnParameters: {
              id: 2659,
              nodeType: "ParameterList",
              parameters: [],
              src: "7197:0:12",
            },
            scope: 2702,
            src: "7168:240:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 2696,
              nodeType: "Block",
              src: "7441:2:12",
              statements: [],
            },
            id: 2697,
            implemented: true,
            kind: "receive",
            modifiers: [],
            name: "",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2694,
              nodeType: "ParameterList",
              parameters: [],
              src: "7421:2:12",
            },
            returnParameters: {
              id: 2695,
              nodeType: "ParameterList",
              parameters: [],
              src: "7441:0:12",
            },
            scope: 2702,
            src: "7414:29:12",
            stateMutability: "payable",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 2700,
              nodeType: "Block",
              src: "7477:2:12",
              statements: [],
            },
            id: 2701,
            implemented: true,
            kind: "fallback",
            modifiers: [],
            name: "",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2698,
              nodeType: "ParameterList",
              parameters: [],
              src: "7457:2:12",
            },
            returnParameters: {
              id: 2699,
              nodeType: "ParameterList",
              parameters: [],
              src: "7477:0:12",
            },
            scope: 2702,
            src: "7449:30:12",
            stateMutability: "payable",
            virtual: false,
            visibility: "external",
          },
        ],
        scope: 2703,
        src: "344:7137:12",
      },
    ],
    src: "32:7450:12",
  },
  legacyAST: {
    absolutePath: "project:/contracts/AvaxPenguin.sol",
    exportedSymbols: {
      Address: [1762],
      AvaxPenguin: [2702],
      Context: [1784],
      ERC165: [2011],
      ERC2981Base: [2739],
      ERC2981PerTokenRoyalties: [2818],
      ERC721: [935],
      ERC721Enumerable: [1407],
      IERC165: [2023],
      IERC2981Royalties: [2834],
      IERC721: [1051],
      IERC721Enumerable: [1438],
      IERC721Metadata: [1465],
      IERC721Receiver: [1069],
      Ownable: [104],
      Strings: [1987],
    },
    id: 2703,
    license: "MIT",
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 2025,
        literals: ["solidity", "0.8", ".0"],
        nodeType: "PragmaDirective",
        src: "32:22:12",
      },
      {
        absolutePath: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        file: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        id: 2026,
        nodeType: "ImportDirective",
        scope: 2703,
        sourceUnit: 936,
        src: "56:57:12",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/access/Ownable.sol",
        file: "@openzeppelin/contracts/access/Ownable.sol",
        id: 2027,
        nodeType: "ImportDirective",
        scope: 2703,
        sourceUnit: 105,
        src: "114:52:12",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/Strings.sol",
        file: "@openzeppelin/contracts/utils/Strings.sol",
        id: 2028,
        nodeType: "ImportDirective",
        scope: 2703,
        sourceUnit: 1988,
        src: "167:51:12",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        file: "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        id: 2029,
        nodeType: "ImportDirective",
        scope: 2703,
        sourceUnit: 1408,
        src: "219:78:12",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "project:/contracts/lib/ERC2981PerTokenRoyalties.sol",
        file: "./lib/ERC2981PerTokenRoyalties.sol",
        id: 2030,
        nodeType: "ImportDirective",
        scope: 2703,
        sourceUnit: 2819,
        src: "298:44:12",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 2031,
              name: "ERC721Enumerable",
              nodeType: "IdentifierPath",
              referencedDeclaration: 1407,
              src: "368:16:12",
            },
            id: 2032,
            nodeType: "InheritanceSpecifier",
            src: "368:16:12",
          },
          {
            baseName: {
              id: 2033,
              name: "Ownable",
              nodeType: "IdentifierPath",
              referencedDeclaration: 104,
              src: "386:7:12",
            },
            id: 2034,
            nodeType: "InheritanceSpecifier",
            src: "386:7:12",
          },
          {
            baseName: {
              id: 2035,
              name: "ERC2981PerTokenRoyalties",
              nodeType: "IdentifierPath",
              referencedDeclaration: 2818,
              src: "395:24:12",
            },
            id: 2036,
            nodeType: "InheritanceSpecifier",
            src: "395:24:12",
          },
        ],
        contractDependencies: [
          104, 935, 1051, 1407, 1438, 1465, 1784, 2011, 2023, 2739, 2818, 2834,
        ],
        contractKind: "contract",
        fullyImplemented: true,
        id: 2702,
        linearizedBaseContracts: [
          2702, 2818, 2739, 2834, 104, 1407, 1438, 935, 1465, 1051, 2011, 2023,
          1784,
        ],
        name: "AvaxPenguin",
        nodeType: "ContractDefinition",
        nodes: [
          {
            id: 2039,
            libraryName: {
              id: 2037,
              name: "Strings",
              nodeType: "IdentifierPath",
              referencedDeclaration: 1987,
              src: "432:7:12",
            },
            nodeType: "UsingForDirective",
            src: "426:26:12",
            typeName: {
              id: 2038,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "444:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
          },
          {
            constant: true,
            functionSelector: "3f879faf",
            id: 2042,
            mutability: "constant",
            name: "MAX_MINTABLE",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "458:43:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2040,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "458:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "35353535",
              id: 2041,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "497:4:12",
              typeDescriptions: {
                typeIdentifier: "t_rational_5555_by_1",
                typeString: "int_const 5555",
              },
              value: "5555",
            },
            visibility: "public",
          },
          {
            constant: true,
            functionSelector: "5471f49f",
            id: 2045,
            mutability: "constant",
            name: "MAX_PER_CLAIM",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "507:42:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2043,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "507:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "3130",
              id: 2044,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "547:2:12",
              typeDescriptions: {
                typeIdentifier: "t_rational_10_by_1",
                typeString: "int_const 10",
              },
              value: "10",
            },
            visibility: "public",
          },
          {
            constant: true,
            functionSelector: "676dd563",
            id: 2048,
            mutability: "constant",
            name: "NFT_PRICE",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "555:46:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2046,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "555:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "302e3835",
              id: 2047,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "591:10:12",
              subdenomination: "ether",
              typeDescriptions: {
                typeIdentifier: "t_rational_850000000000000000_by_1",
                typeString: "int_const 850000000000000000",
              },
              value: "0.85",
            },
            visibility: "public",
          },
          {
            constant: true,
            functionSelector: "93791b03",
            id: 2051,
            mutability: "constant",
            name: "ROYALTY_VALUE",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "608:43:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2049,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "608:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "333030",
              id: 2050,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "648:3:12",
              typeDescriptions: {
                typeIdentifier: "t_rational_300_by_1",
                typeString: "int_const 300",
              },
              value: "300",
            },
            visibility: "public",
          },
          {
            constant: false,
            id: 2055,
            mutability: "mutable",
            name: "indexer",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "681:35:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 2054,
              keyType: {
                id: 2052,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "689:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "681:27:12",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 2053,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "700:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2058,
            mutability: "mutable",
            name: "indexerLength",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "723:36:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2056,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "723:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              id: 2057,
              name: "MAX_MINTABLE",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 2042,
              src: "747:12:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2062,
            mutability: "mutable",
            name: "tokenIDMap",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "765:38:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 2061,
              keyType: {
                id: 2059,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "773:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "765:27:12",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 2060,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "784:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2066,
            mutability: "mutable",
            name: "takenImages",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "809:39:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 2065,
              keyType: {
                id: 2063,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "817:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "809:27:12",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 2064,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "828:7:12",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2069,
            mutability: "mutable",
            name: "baseUri",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "855:73:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_string_storage",
              typeString: "string",
            },
            typeName: {
              id: 2067,
              name: "string",
              nodeType: "ElementaryTypeName",
              src: "855:6:12",
              typeDescriptions: {
                typeIdentifier: "t_string_storage_ptr",
                typeString: "string",
              },
            },
            value: {
              hexValue:
                "697066733a2f2f516d556d526b615371384537744268414558487157756e4a3366623863535866366f4e3273446e45656e534a6d622f",
              id: 2068,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "string",
              lValueRequested: false,
              nodeType: "Literal",
              src: "872:56:12",
              typeDescriptions: {
                typeIdentifier:
                  "t_stringliteral_ff137abc2c7b6c4696aa43e9250400cc2c173f8b891de9c1e160096bc4954ff6",
                typeString:
                  'literal_string "ipfs://QmUmRkaSq8E7tBhAEXHqWunJ3fb8cSXf6oN2sDnEenSJmb/"',
              },
              value: "ipfs://QmUmRkaSq8E7tBhAEXHqWunJ3fb8cSXf6oN2sDnEenSJmb/",
            },
            visibility: "internal",
          },
          {
            constant: false,
            functionSelector: "4f02c420",
            id: 2072,
            mutability: "mutable",
            name: "minted",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "934:25:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2070,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "934:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "30",
              id: 2071,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "958:1:12",
              typeDescriptions: {
                typeIdentifier: "t_rational_0_by_1",
                typeString: "int_const 0",
              },
              value: "0",
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "6dc7a627",
            id: 2075,
            mutability: "mutable",
            name: "canClaim",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "965:28:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_bool",
              typeString: "bool",
            },
            typeName: {
              id: 2073,
              name: "bool",
              nodeType: "ElementaryTypeName",
              src: "965:4:12",
              typeDescriptions: {
                typeIdentifier: "t_bool",
                typeString: "bool",
              },
            },
            value: {
              hexValue: "66616c7365",
              id: 2074,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "bool",
              lValueRequested: false,
              nodeType: "Literal",
              src: "988:5:12",
              typeDescriptions: {
                typeIdentifier: "t_bool",
                typeString: "bool",
              },
              value: "false",
            },
            visibility: "public",
          },
          {
            constant: false,
            id: 2078,
            mutability: "mutable",
            name: "gross",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "999:17:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2076,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "999:7:12",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "30",
              id: 2077,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "1015:1:12",
              typeDescriptions: {
                typeIdentifier: "t_rational_0_by_1",
                typeString: "int_const 0",
              },
              value: "0",
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2080,
            mutability: "mutable",
            name: "ownerOfContract",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "1022:23:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 2079,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1022:7:12",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 2082,
            mutability: "mutable",
            name: "royaltyAddress",
            nodeType: "VariableDeclaration",
            scope: 2702,
            src: "1051:22:12",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 2081,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "1051:7:12",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            visibility: "internal",
          },
          {
            anonymous: false,
            id: 2086,
            name: "Claim",
            nodeType: "EventDefinition",
            parameters: {
              id: 2085,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2084,
                  indexed: true,
                  mutability: "mutable",
                  name: "_id",
                  nodeType: "VariableDeclaration",
                  scope: 2086,
                  src: "1092:19:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2083,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1092:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1091:21:12",
            },
            src: "1080:33:12",
          },
          {
            body: {
              id: 2117,
              nodeType: "Block",
              src: "1324:108:12",
              statements: [
                {
                  expression: {
                    id: 2107,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2105,
                      name: "ownerOfContract",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2080,
                      src: "1334:15:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2106,
                      name: "owner",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2094,
                      src: "1352:5:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1334:23:12",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 2108,
                  nodeType: "ExpressionStatement",
                  src: "1334:23:12",
                },
                {
                  expression: {
                    id: 2111,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2109,
                      name: "royaltyAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2082,
                      src: "1367:14:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2110,
                      name: "royalties",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2096,
                      src: "1384:9:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1367:26:12",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 2112,
                  nodeType: "ExpressionStatement",
                  src: "1367:26:12",
                },
                {
                  expression: {
                    id: 2115,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2113,
                      name: "baseUri",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2069,
                      src: "1403:7:12",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2114,
                      name: "baseTokenURI",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2092,
                      src: "1413:12:12",
                      typeDescriptions: {
                        typeIdentifier: "t_string_memory_ptr",
                        typeString: "string memory",
                      },
                    },
                    src: "1403:22:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage",
                      typeString: "string storage ref",
                    },
                  },
                  id: 2116,
                  nodeType: "ExpressionStatement",
                  src: "1403:22:12",
                },
              ],
            },
            id: 2118,
            implemented: true,
            kind: "constructor",
            modifiers: [
              {
                arguments: [
                  {
                    id: 2099,
                    name: "nftName",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2088,
                    src: "1294:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string memory",
                    },
                  },
                  {
                    id: 2100,
                    name: "nftSymbol",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2090,
                    src: "1303:9:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string memory",
                    },
                  },
                ],
                id: 2101,
                modifierName: {
                  id: 2098,
                  name: "ERC721",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 935,
                  src: "1287:6:12",
                },
                nodeType: "ModifierInvocation",
                src: "1287:26:12",
              },
              {
                arguments: [],
                id: 2103,
                modifierName: {
                  id: 2102,
                  name: "Ownable",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 104,
                  src: "1314:7:12",
                },
                nodeType: "ModifierInvocation",
                src: "1314:9:12",
              },
            ],
            name: "",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2097,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2088,
                  mutability: "mutable",
                  name: "nftName",
                  nodeType: "VariableDeclaration",
                  scope: 2118,
                  src: "1140:21:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2087,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "1140:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2090,
                  mutability: "mutable",
                  name: "nftSymbol",
                  nodeType: "VariableDeclaration",
                  scope: 2118,
                  src: "1171:23:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2089,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "1171:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2092,
                  mutability: "mutable",
                  name: "baseTokenURI",
                  nodeType: "VariableDeclaration",
                  scope: 2118,
                  src: "1204:26:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2091,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "1204:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2094,
                  mutability: "mutable",
                  name: "owner",
                  nodeType: "VariableDeclaration",
                  scope: 2118,
                  src: "1240:13:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2093,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1240:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2096,
                  mutability: "mutable",
                  name: "royalties",
                  nodeType: "VariableDeclaration",
                  scope: 2118,
                  src: "1263:17:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2095,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1263:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1130:156:12",
            },
            returnParameters: {
              id: 2104,
              nodeType: "ParameterList",
              parameters: [],
              src: "1324:0:12",
            },
            scope: 2702,
            src: "1119:313:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2172,
              nodeType: "Block",
              src: "1546:309:12",
              statements: [
                {
                  assignments: [2130],
                  declarations: [
                    {
                      constant: false,
                      id: 2130,
                      mutability: "mutable",
                      name: "result",
                      nodeType: "VariableDeclaration",
                      scope: 2172,
                      src: "1556:23:12",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr",
                        typeString: "uint256[]",
                      },
                      typeName: {
                        baseType: {
                          id: 2128,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "1556:7:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2129,
                        nodeType: "ArrayTypeName",
                        src: "1556:9:12",
                        typeDescriptions: {
                          typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr",
                          typeString: "uint256[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2138,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 2135,
                            name: "_owner",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2120,
                            src: "1606:6:12",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 2134,
                          name: "balanceOf",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 222,
                          src: "1596:9:12",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            typeString:
                              "function (address) view returns (uint256)",
                          },
                        },
                        id: 2136,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "1596:17:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2133,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "NewExpression",
                      src: "1582:13:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        typeString:
                          "function (uint256) pure returns (uint256[] memory)",
                      },
                      typeName: {
                        baseType: {
                          id: 2131,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "1586:7:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2132,
                        nodeType: "ArrayTypeName",
                        src: "1586:9:12",
                        typeDescriptions: {
                          typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr",
                          typeString: "uint256[]",
                        },
                      },
                    },
                    id: 2137,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1582:32:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr",
                      typeString: "uint256[] memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "1556:58:12",
                },
                {
                  assignments: [2140],
                  declarations: [
                    {
                      constant: false,
                      id: 2140,
                      mutability: "mutable",
                      name: "balanceOfOwner",
                      nodeType: "VariableDeclaration",
                      scope: 2172,
                      src: "1624:22:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2139,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "1624:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2144,
                  initialValue: {
                    arguments: [
                      {
                        id: 2142,
                        name: "_owner",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2120,
                        src: "1659:6:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 2141,
                      name: "balanceOf",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 222,
                      src: "1649:9:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        typeString: "function (address) view returns (uint256)",
                      },
                    },
                    id: 2143,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1649:17:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "1624:42:12",
                },
                {
                  body: {
                    id: 2168,
                    nodeType: "Block",
                    src: "1721:105:12",
                    statements: [
                      {
                        assignments: [2156],
                        declarations: [
                          {
                            constant: false,
                            id: 2156,
                            mutability: "mutable",
                            name: "idToken",
                            nodeType: "VariableDeclaration",
                            scope: 2168,
                            src: "1735:15:12",
                            stateVariable: false,
                            storageLocation: "default",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            typeName: {
                              id: 2155,
                              name: "uint256",
                              nodeType: "ElementaryTypeName",
                              src: "1735:7:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 2161,
                        initialValue: {
                          arguments: [
                            {
                              id: 2158,
                              name: "_owner",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2120,
                              src: "1773:6:12",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 2159,
                              name: "i",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2146,
                              src: "1780:1:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            id: 2157,
                            name: "tokenOfOwnerByIndex",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1147,
                            src: "1753:19:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              typeString:
                                "function (address,uint256) view returns (uint256)",
                            },
                          },
                          id: 2160,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "1753:29:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "1735:47:12",
                      },
                      {
                        expression: {
                          id: 2166,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              id: 2162,
                              name: "result",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2130,
                              src: "1796:6:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_array$_t_uint256_$dyn_memory_ptr",
                                typeString: "uint256[] memory",
                              },
                            },
                            id: 2164,
                            indexExpression: {
                              id: 2163,
                              name: "i",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2146,
                              src: "1803:1:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: "IndexAccess",
                            src: "1796:9:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            id: 2165,
                            name: "idToken",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2156,
                            src: "1808:7:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "1796:19:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2167,
                        nodeType: "ExpressionStatement",
                        src: "1796:19:12",
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2151,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2149,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2146,
                      src: "1696:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2150,
                      name: "balanceOfOwner",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2140,
                      src: "1700:14:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "1696:18:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2169,
                  initializationExpression: {
                    assignments: [2146],
                    declarations: [
                      {
                        constant: false,
                        id: 2146,
                        mutability: "mutable",
                        name: "i",
                        nodeType: "VariableDeclaration",
                        scope: 2169,
                        src: "1681:9:12",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2145,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "1681:7:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2148,
                    initialValue: {
                      hexValue: "30",
                      id: 2147,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "1693:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "1681:13:12",
                  },
                  loopExpression: {
                    expression: {
                      id: 2153,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "1716:3:12",
                      subExpression: {
                        id: 2152,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2146,
                        src: "1716:1:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2154,
                    nodeType: "ExpressionStatement",
                    src: "1716:3:12",
                  },
                  nodeType: "ForStatement",
                  src: "1676:150:12",
                },
                {
                  expression: {
                    id: 2170,
                    name: "result",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2130,
                    src: "1842:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr",
                      typeString: "uint256[] memory",
                    },
                  },
                  functionReturnParameters: 2125,
                  id: 2171,
                  nodeType: "Return",
                  src: "1835:13:12",
                },
              ],
            },
            functionSelector: "d6bc5942",
            id: 2173,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "tokensByAddress",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2121,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2120,
                  mutability: "mutable",
                  name: "_owner",
                  nodeType: "VariableDeclaration",
                  scope: 2173,
                  src: "1463:14:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2119,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1463:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1462:16:12",
            },
            returnParameters: {
              id: 2125,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2124,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2173,
                  src: "1524:16:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr",
                    typeString: "uint256[]",
                  },
                  typeName: {
                    baseType: {
                      id: 2122,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "1524:7:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2123,
                    nodeType: "ArrayTypeName",
                    src: "1524:9:12",
                    typeDescriptions: {
                      typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr",
                      typeString: "uint256[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1523:18:12",
            },
            scope: 2702,
            src: "1438:417:12",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2229,
              nodeType: "Block",
              src: "2284:543:12",
              statements: [
                {
                  assignments: [2181],
                  declarations: [
                    {
                      constant: false,
                      id: 2181,
                      mutability: "mutable",
                      name: "nextImageID",
                      nodeType: "VariableDeclaration",
                      scope: 2229,
                      src: "2294:19:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2180,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "2294:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2185,
                  initialValue: {
                    baseExpression: {
                      id: 2182,
                      name: "indexer",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2055,
                      src: "2316:7:12",
                      typeDescriptions: {
                        typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                        typeString: "mapping(uint256 => uint256)",
                      },
                    },
                    id: 2184,
                    indexExpression: {
                      id: 2183,
                      name: "index",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2175,
                      src: "2324:5:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "2316:14:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "2294:36:12",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2188,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2186,
                      name: "nextImageID",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2181,
                      src: "2399:11:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 2187,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2414:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "2399:16:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2194,
                  nodeType: "IfStatement",
                  src: "2395:66:12",
                  trueBody: {
                    id: 2193,
                    nodeType: "Block",
                    src: "2417:44:12",
                    statements: [
                      {
                        expression: {
                          id: 2191,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 2189,
                            name: "nextImageID",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2181,
                            src: "2431:11:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            id: 2190,
                            name: "index",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2175,
                            src: "2445:5:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2431:19:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2192,
                        nodeType: "ExpressionStatement",
                        src: "2431:19:12",
                      },
                    ],
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2201,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      baseExpression: {
                        id: 2195,
                        name: "indexer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2055,
                        src: "2599:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 2199,
                      indexExpression: {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2198,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 2196,
                          name: "indexerLength",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2058,
                          src: "2607:13:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "-",
                        rightExpression: {
                          hexValue: "31",
                          id: 2197,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "2623:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_1_by_1",
                            typeString: "int_const 1",
                          },
                          value: "1",
                        },
                        src: "2607:17:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "2599:26:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 2200,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2629:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "2599:31:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 2221,
                    nodeType: "Block",
                    src: "2697:68:12",
                    statements: [
                      {
                        expression: {
                          id: 2219,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              id: 2211,
                              name: "indexer",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2055,
                              src: "2711:7:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_uint256_$_t_uint256_$",
                                typeString: "mapping(uint256 => uint256)",
                              },
                            },
                            id: 2213,
                            indexExpression: {
                              id: 2212,
                              name: "index",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2175,
                              src: "2719:5:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: "IndexAccess",
                            src: "2711:14:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            baseExpression: {
                              id: 2214,
                              name: "indexer",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2055,
                              src: "2728:7:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_uint256_$_t_uint256_$",
                                typeString: "mapping(uint256 => uint256)",
                              },
                            },
                            id: 2218,
                            indexExpression: {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 2217,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                id: 2215,
                                name: "indexerLength",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 2058,
                                src: "2736:13:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: "-",
                              rightExpression: {
                                hexValue: "31",
                                id: 2216,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "2752:1:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_1_by_1",
                                  typeString: "int_const 1",
                                },
                                value: "1",
                              },
                              src: "2736:17:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "2728:26:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2711:43:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2220,
                        nodeType: "ExpressionStatement",
                        src: "2711:43:12",
                      },
                    ],
                  },
                  id: 2222,
                  nodeType: "IfStatement",
                  src: "2595:170:12",
                  trueBody: {
                    id: 2210,
                    nodeType: "Block",
                    src: "2632:59:12",
                    statements: [
                      {
                        expression: {
                          id: 2208,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              id: 2202,
                              name: "indexer",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2055,
                              src: "2646:7:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_uint256_$_t_uint256_$",
                                typeString: "mapping(uint256 => uint256)",
                              },
                            },
                            id: 2204,
                            indexExpression: {
                              id: 2203,
                              name: "index",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2175,
                              src: "2654:5:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: "IndexAccess",
                            src: "2646:14:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 2207,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 2205,
                              name: "indexerLength",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2058,
                              src: "2663:13:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "-",
                            rightExpression: {
                              hexValue: "31",
                              id: 2206,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "2679:1:12",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_1_by_1",
                                typeString: "int_const 1",
                              },
                              value: "1",
                            },
                            src: "2663:17:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2646:34:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2209,
                        nodeType: "ExpressionStatement",
                        src: "2646:34:12",
                      },
                    ],
                  },
                },
                {
                  expression: {
                    id: 2225,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2223,
                      name: "indexerLength",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2058,
                      src: "2774:13:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "-=",
                    rightHandSide: {
                      hexValue: "31",
                      id: 2224,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2791:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_1_by_1",
                        typeString: "int_const 1",
                      },
                      value: "1",
                    },
                    src: "2774:18:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 2226,
                  nodeType: "ExpressionStatement",
                  src: "2774:18:12",
                },
                {
                  expression: {
                    id: 2227,
                    name: "nextImageID",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2181,
                    src: "2809:11:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 2179,
                  id: 2228,
                  nodeType: "Return",
                  src: "2802:18:12",
                },
              ],
            },
            id: 2230,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getNextImageID",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2176,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2175,
                  mutability: "mutable",
                  name: "index",
                  nodeType: "VariableDeclaration",
                  scope: 2230,
                  src: "2242:13:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2174,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2242:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2241:15:12",
            },
            returnParameters: {
              id: 2179,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2178,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2230,
                  src: "2275:7:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2177,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2275:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2274:9:12",
            },
            scope: 2702,
            src: "2218:609:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 2265,
              nodeType: "Block",
              src: "2889:398:12",
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2239,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 2237,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 2235,
                        name: "MAX_MINTABLE",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2042,
                        src: "2903:12:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        id: 2236,
                        name: "minted",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2072,
                        src: "2918:6:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "2903:21:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "==",
                    rightExpression: {
                      hexValue: "30",
                      id: 2238,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2928:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "2903:26:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2242,
                  nodeType: "IfStatement",
                  src: "2899:40:12",
                  trueBody: {
                    expression: {
                      hexValue: "30",
                      id: 2240,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2938:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    functionReturnParameters: 2234,
                    id: 2241,
                    nodeType: "Return",
                    src: "2931:8:12",
                  },
                },
                {
                  expression: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2263,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              arguments: [
                                {
                                  expression: {
                                    id: 2248,
                                    name: "block",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 4294967292,
                                    src: "3066:5:12",
                                    typeDescriptions: {
                                      typeIdentifier: "t_magic_block",
                                      typeString: "block",
                                    },
                                  },
                                  id: 2249,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "difficulty",
                                  nodeType: "MemberAccess",
                                  src: "3066:16:12",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                {
                                  expression: {
                                    id: 2250,
                                    name: "block",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 4294967292,
                                    src: "3108:5:12",
                                    typeDescriptions: {
                                      typeIdentifier: "t_magic_block",
                                      typeString: "block",
                                    },
                                  },
                                  id: 2251,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "timestamp",
                                  nodeType: "MemberAccess",
                                  src: "3108:15:12",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                {
                                  expression: {
                                    id: 2252,
                                    name: "msg",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 4294967281,
                                    src: "3149:3:12",
                                    typeDescriptions: {
                                      typeIdentifier: "t_magic_message",
                                      typeString: "msg",
                                    },
                                  },
                                  id: 2253,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "sender",
                                  nodeType: "MemberAccess",
                                  src: "3149:10:12",
                                  typeDescriptions: {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                },
                                {
                                  arguments: [
                                    {
                                      expression: {
                                        id: 2255,
                                        name: "block",
                                        nodeType: "Identifier",
                                        overloadedDeclarations: [],
                                        referencedDeclaration: 4294967292,
                                        src: "3195:5:12",
                                        typeDescriptions: {
                                          typeIdentifier: "t_magic_block",
                                          typeString: "block",
                                        },
                                      },
                                      id: 2256,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      lValueRequested: false,
                                      memberName: "number",
                                      nodeType: "MemberAccess",
                                      src: "3195:12:12",
                                      typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                      },
                                    },
                                  ],
                                  expression: {
                                    argumentTypes: [
                                      {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                      },
                                    ],
                                    id: 2254,
                                    name: "blockhash",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 4294967291,
                                    src: "3185:9:12",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                      typeString:
                                        "function (uint256) view returns (bytes32)",
                                    },
                                  },
                                  id: 2257,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  kind: "functionCall",
                                  lValueRequested: false,
                                  names: [],
                                  nodeType: "FunctionCall",
                                  src: "3185:23:12",
                                  tryCall: false,
                                  typeDescriptions: {
                                    typeIdentifier: "t_bytes32",
                                    typeString: "bytes32",
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                  {
                                    typeIdentifier: "t_bytes32",
                                    typeString: "bytes32",
                                  },
                                ],
                                expression: {
                                  id: 2246,
                                  name: "abi",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 4294967295,
                                  src: "3024:3:12",
                                  typeDescriptions: {
                                    typeIdentifier: "t_magic_abi",
                                    typeString: "abi",
                                  },
                                },
                                id: 2247,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                memberName: "encodePacked",
                                nodeType: "MemberAccess",
                                src: "3024:16:12",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  typeString:
                                    "function () pure returns (bytes memory)",
                                },
                              },
                              id: 2258,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "functionCall",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "3024:206:12",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_bytes_memory_ptr",
                                typeString: "bytes memory",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_bytes_memory_ptr",
                                typeString: "bytes memory",
                              },
                            ],
                            id: 2245,
                            name: "keccak256",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967288,
                            src: "2993:9:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              typeString:
                                "function (bytes memory) pure returns (bytes32)",
                            },
                          },
                          id: 2259,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2993:255:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_bytes32",
                            typeString: "bytes32",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bytes32",
                            typeString: "bytes32",
                          },
                        ],
                        id: 2244,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "2968:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_uint256_$",
                          typeString: "type(uint256)",
                        },
                        typeName: {
                          id: 2243,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "2968:7:12",
                          typeDescriptions: {},
                        },
                      },
                      id: 2260,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2968:294:12",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "%",
                    rightExpression: {
                      components: [
                        {
                          id: 2261,
                          name: "indexerLength",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2058,
                          src: "3266:13:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      id: 2262,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "TupleExpression",
                      src: "3265:15:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "2968:312:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 2234,
                  id: 2264,
                  nodeType: "Return",
                  src: "2949:331:12",
                },
              ],
            },
            id: 2266,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "enoughRandom",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2231,
              nodeType: "ParameterList",
              parameters: [],
              src: "2854:2:12",
            },
            returnParameters: {
              id: 2234,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2233,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2266,
                  src: "2880:7:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2232,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2880:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2879:9:12",
            },
            scope: 2702,
            src: "2833:454:12",
            stateMutability: "view",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 2322,
              nodeType: "Block",
              src: "3364:415:12",
              statements: [
                {
                  assignments: [2274],
                  declarations: [
                    {
                      constant: false,
                      id: 2274,
                      mutability: "mutable",
                      name: "nextIndexerId",
                      nodeType: "VariableDeclaration",
                      scope: 2322,
                      src: "3374:21:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2273,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "3374:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2277,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 2275,
                      name: "enoughRandom",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2266,
                      src: "3398:12:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_uint256_$",
                        typeString: "function () view returns (uint256)",
                      },
                    },
                    id: 2276,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3398:14:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3374:38:12",
                },
                {
                  assignments: [2279],
                  declarations: [
                    {
                      constant: false,
                      id: 2279,
                      mutability: "mutable",
                      name: "nextImageID",
                      nodeType: "VariableDeclaration",
                      scope: 2322,
                      src: "3422:19:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2278,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "3422:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2280,
                  nodeType: "VariableDeclarationStatement",
                  src: "3422:19:12",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2283,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2281,
                      name: "minted",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2072,
                      src: "3454:6:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      hexValue: "3133",
                      id: 2282,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3463:2:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_13_by_1",
                        typeString: "int_const 13",
                      },
                      value: "13",
                    },
                    src: "3454:11:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 2295,
                    nodeType: "Block",
                    src: "3524:68:12",
                    statements: [
                      {
                        expression: {
                          id: 2293,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 2289,
                            name: "nextImageID",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2279,
                            src: "3538:11:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            arguments: [
                              {
                                id: 2291,
                                name: "nextIndexerId",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 2274,
                                src: "3567:13:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              ],
                              id: 2290,
                              name: "getNextImageID",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2230,
                              src: "3552:14:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                typeString:
                                  "function (uint256) returns (uint256)",
                              },
                            },
                            id: 2292,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "3552:29:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3538:43:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2294,
                        nodeType: "ExpressionStatement",
                        src: "3538:43:12",
                      },
                    ],
                  },
                  id: 2296,
                  nodeType: "IfStatement",
                  src: "3451:141:12",
                  trueBody: {
                    id: 2288,
                    nodeType: "Block",
                    src: "3466:53:12",
                    statements: [
                      {
                        expression: {
                          id: 2286,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 2284,
                            name: "nextImageID",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2279,
                            src: "3480:11:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            id: 2285,
                            name: "nextTokenIndex",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2270,
                            src: "3494:14:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3480:28:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2287,
                        nodeType: "ExpressionStatement",
                        src: "3480:28:12",
                      },
                    ],
                  },
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2302,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          baseExpression: {
                            id: 2298,
                            name: "takenImages",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2066,
                            src: "3609:11:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_uint256_$",
                              typeString: "mapping(uint256 => uint256)",
                            },
                          },
                          id: 2300,
                          indexExpression: {
                            id: 2299,
                            name: "nextImageID",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2279,
                            src: "3621:11:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "3609:24:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          hexValue: "30",
                          id: 2301,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "3637:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "3609:29:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      ],
                      id: 2297,
                      name: "assert",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 4294967293,
                      src: "3602:6:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_assert_pure$_t_bool_$returns$__$",
                        typeString: "function (bool) pure",
                      },
                    },
                    id: 2303,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3602:37:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2304,
                  nodeType: "ExpressionStatement",
                  src: "3602:37:12",
                },
                {
                  expression: {
                    id: 2309,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 2305,
                        name: "takenImages",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2066,
                        src: "3649:11:12",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 2307,
                      indexExpression: {
                        id: 2306,
                        name: "nextImageID",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2279,
                        src: "3661:11:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "3649:24:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "31",
                      id: 2308,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3676:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_1_by_1",
                        typeString: "int_const 1",
                      },
                      value: "1",
                    },
                    src: "3649:28:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 2310,
                  nodeType: "ExpressionStatement",
                  src: "3649:28:12",
                },
                {
                  expression: {
                    id: 2315,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 2311,
                        name: "tokenIDMap",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2062,
                        src: "3687:10:12",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 2313,
                      indexExpression: {
                        id: 2312,
                        name: "nextTokenIndex",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2270,
                        src: "3698:14:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "3687:26:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2314,
                      name: "nextImageID",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2279,
                      src: "3716:11:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "3687:40:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 2316,
                  nodeType: "ExpressionStatement",
                  src: "3687:40:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 2318,
                        name: "receiver",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2268,
                        src: "3747:8:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2319,
                        name: "nextTokenIndex",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2270,
                        src: "3757:14:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2317,
                      name: "_safeMint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [599, 628],
                      referencedDeclaration: 599,
                      src: "3737:9:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 2320,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3737:35:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2321,
                  nodeType: "ExpressionStatement",
                  src: "3737:35:12",
                },
              ],
            },
            id: 2323,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "randomMint",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2271,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2268,
                  mutability: "mutable",
                  name: "receiver",
                  nodeType: "VariableDeclaration",
                  scope: 2323,
                  src: "3313:16:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2267,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "3313:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2270,
                  mutability: "mutable",
                  name: "nextTokenIndex",
                  nodeType: "VariableDeclaration",
                  scope: 2323,
                  src: "3331:22:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2269,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3331:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3312:42:12",
            },
            returnParameters: {
              id: 2272,
              nodeType: "ParameterList",
              parameters: [],
              src: "3364:0:12",
            },
            scope: 2702,
            src: "3293:486:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 2333,
              nodeType: "Block",
              src: "3834:37:12",
              statements: [
                {
                  expression: {
                    id: 2331,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2328,
                      name: "canClaim",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2075,
                      src: "3844:8:12",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2330,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "!",
                      prefix: true,
                      src: "3855:9:12",
                      subExpression: {
                        id: 2329,
                        name: "canClaim",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2075,
                        src: "3856:8:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "3844:20:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2332,
                  nodeType: "ExpressionStatement",
                  src: "3844:20:12",
                },
              ],
            },
            functionSelector: "c94364e3",
            id: 2334,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 2326,
                modifierName: {
                  id: 2325,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 46,
                  src: "3824:9:12",
                },
                nodeType: "ModifierInvocation",
                src: "3824:9:12",
              },
            ],
            name: "toggleClaimability",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2324,
              nodeType: "ParameterList",
              parameters: [],
              src: "3812:2:12",
            },
            returnParameters: {
              id: 2327,
              nodeType: "ParameterList",
              parameters: [],
              src: "3834:0:12",
            },
            scope: 2702,
            src: "3785:86:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 2453,
              nodeType: "Block",
              src: "3918:880:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 2340,
                        name: "canClaim",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2075,
                        src: "3936:8:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "49742773206e6f7420706f737369626c6520746f20636c61696d206a757374207965742e",
                        id: 2341,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "3946:38:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_1a5575fa3ec0740a62d13105de9a43af1a09bddaea88628ed3c87f87614e054a",
                          typeString:
                            'literal_string "It\'s not possible to claim just yet."',
                        },
                        value: "It's not possible to claim just yet.",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_1a5575fa3ec0740a62d13105de9a43af1a09bddaea88628ed3c87f87614e054a",
                          typeString:
                            'literal_string "It\'s not possible to claim just yet."',
                        },
                      ],
                      id: 2339,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "3928:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2342,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3928:57:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2343,
                  nodeType: "ExpressionStatement",
                  src: "3928:57:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2349,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 2347,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 2345,
                            name: "n",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2336,
                            src: "4003:1:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "+",
                          rightExpression: {
                            id: 2346,
                            name: "minted",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2072,
                            src: "4007:6:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "4003:10:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "<=",
                        rightExpression: {
                          id: 2348,
                          name: "MAX_MINTABLE",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2042,
                          src: "4017:12:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4003:26:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "4e6f7420656e6f756768206c65667420746f206d696e742e",
                        id: 2350,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4031:26:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_14b300f96da803f669efdbdd02baace360b70bad7a90a912de12c1de64a59ad7",
                          typeString:
                            'literal_string "Not enough left to mint."',
                        },
                        value: "Not enough left to mint.",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_14b300f96da803f669efdbdd02baace360b70bad7a90a912de12c1de64a59ad7",
                          typeString:
                            'literal_string "Not enough left to mint."',
                        },
                      ],
                      id: 2344,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "3995:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2351,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3995:63:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2352,
                  nodeType: "ExpressionStatement",
                  src: "3995:63:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2356,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 2354,
                          name: "n",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2336,
                          src: "4076:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">",
                        rightExpression: {
                          hexValue: "30",
                          id: 2355,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4080:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "4076:5:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "4e756d626572206e65656420746f20626520686967686572207468616e2030",
                        id: 2357,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4083:33:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_5e1e21efea8c1bcd1b33c77d1218e24d2dbcc73f0d3acf2fc1d623814f7ebcc0",
                          typeString:
                            'literal_string "Number need to be higher than 0"',
                        },
                        value: "Number need to be higher than 0",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_5e1e21efea8c1bcd1b33c77d1218e24d2dbcc73f0d3acf2fc1d623814f7ebcc0",
                          typeString:
                            'literal_string "Number need to be higher than 0"',
                        },
                      ],
                      id: 2353,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4068:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2358,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4068:49:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2359,
                  nodeType: "ExpressionStatement",
                  src: "4068:49:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2363,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 2361,
                          name: "n",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2336,
                          src: "4135:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "<=",
                        rightExpression: {
                          id: 2362,
                          name: "MAX_PER_CLAIM",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2045,
                          src: "4140:13:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4135:18:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue: "4d61782070657220636c61696d206973203130",
                        id: 2364,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4155:21:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_31fb5da33fdd32502737a559a2f7e268c46e3fff6d7747d2676688e36949c66d",
                          typeString: 'literal_string "Max per claim is 10"',
                        },
                        value: "Max per claim is 10",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_31fb5da33fdd32502737a559a2f7e268c46e3fff6d7747d2676688e36949c66d",
                          typeString: 'literal_string "Max per claim is 10"',
                        },
                      ],
                      id: 2360,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4127:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2365,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4127:50:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2366,
                  nodeType: "ExpressionStatement",
                  src: "4127:50:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2374,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 2368,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "4208:3:12",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 2369,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "value",
                          nodeType: "MemberAccess",
                          src: "4208:9:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">=",
                        rightExpression: {
                          components: [
                            {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 2372,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                id: 2370,
                                name: "NFT_PRICE",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 2048,
                                src: "4222:9:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: "*",
                              rightExpression: {
                                id: 2371,
                                name: "n",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 2336,
                                src: "4234:1:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              src: "4222:13:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          id: 2373,
                          isConstant: false,
                          isInlineArray: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "TupleExpression",
                          src: "4221:15:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4208:28:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "45746865722076616c75652073656e742069732062656c6f7720746865207072696365",
                        id: 2375,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4250:37:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_84aad3058d1ccb6a9d9d3a0e38e47a2035130e03c464b9b76344f6355bda1fc6",
                          typeString:
                            'literal_string "Ether value sent is below the price"',
                        },
                        value: "Ether value sent is below the price",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_84aad3058d1ccb6a9d9d3a0e38e47a2035130e03c464b9b76344f6355bda1fc6",
                          typeString:
                            'literal_string "Ether value sent is below the price"',
                        },
                      ],
                      id: 2367,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4187:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2376,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4187:110:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2377,
                  nodeType: "ExpressionStatement",
                  src: "4187:110:12",
                },
                {
                  assignments: [2379],
                  declarations: [
                    {
                      constant: false,
                      id: 2379,
                      mutability: "mutable",
                      name: "total_cost",
                      nodeType: "VariableDeclaration",
                      scope: 2453,
                      src: "4308:18:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2378,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4308:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2384,
                  initialValue: {
                    components: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2382,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 2380,
                          name: "NFT_PRICE",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2048,
                          src: "4330:9:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "*",
                        rightExpression: {
                          id: 2381,
                          name: "n",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2336,
                          src: "4342:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4330:13:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    id: 2383,
                    isConstant: false,
                    isInlineArray: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "TupleExpression",
                    src: "4329:15:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4308:36:12",
                },
                {
                  expression: {
                    id: 2387,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2385,
                      name: "gross",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2078,
                      src: "4354:5:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "+=",
                    rightHandSide: {
                      id: 2386,
                      name: "total_cost",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2379,
                      src: "4363:10:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "4354:19:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 2388,
                  nodeType: "ExpressionStatement",
                  src: "4354:19:12",
                },
                {
                  assignments: [2390],
                  declarations: [
                    {
                      constant: false,
                      id: 2390,
                      mutability: "mutable",
                      name: "excess",
                      nodeType: "VariableDeclaration",
                      scope: 2453,
                      src: "4384:14:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2389,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4384:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2395,
                  initialValue: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2394,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 2391,
                        name: "msg",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967281,
                        src: "4401:3:12",
                        typeDescriptions: {
                          typeIdentifier: "t_magic_message",
                          typeString: "msg",
                        },
                      },
                      id: 2392,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "value",
                      nodeType: "MemberAccess",
                      src: "4401:9:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "-",
                    rightExpression: {
                      id: 2393,
                      name: "total_cost",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2379,
                      src: "4413:10:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "4401:22:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4384:39:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 2404,
                        name: "total_cost",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2379,
                        src: "4465:10:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            arguments: [
                              {
                                id: 2400,
                                name: "this",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967268,
                                src: "4449:4:12",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_contract$_AvaxPenguin_$2702",
                                  typeString: "contract AvaxPenguin",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier:
                                    "t_contract$_AvaxPenguin_$2702",
                                  typeString: "contract AvaxPenguin",
                                },
                              ],
                              id: 2399,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "4441:7:12",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 2398,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "4441:7:12",
                                typeDescriptions: {},
                              },
                            },
                            id: 2401,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "4441:13:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 2397,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "4433:8:12",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_payable_$",
                            typeString: "type(address payable)",
                          },
                          typeName: {
                            id: 2396,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "4433:8:12",
                            stateMutability: "payable",
                            typeDescriptions: {},
                          },
                        },
                        id: 2402,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4433:22:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 2403,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "4433:31:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 2405,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4433:43:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2406,
                  nodeType: "ExpressionStatement",
                  src: "4433:43:12",
                },
                {
                  body: {
                    id: 2437,
                    nodeType: "Block",
                    src: "4519:184:12",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              arguments: [],
                              expression: {
                                argumentTypes: [],
                                id: 2418,
                                name: "_msgSender",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1774,
                                src: "4544:10:12",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_internal_view$__$returns$_t_address_$",
                                  typeString:
                                    "function () view returns (address)",
                                },
                              },
                              id: 2419,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "functionCall",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "4544:12:12",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 2420,
                              name: "minted",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2072,
                              src: "4558:6:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            id: 2417,
                            name: "randomMint",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2323,
                            src: "4533:10:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              typeString: "function (address,uint256)",
                            },
                          },
                          id: 2421,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4533:32:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2422,
                        nodeType: "ExpressionStatement",
                        src: "4533:32:12",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              id: 2424,
                              name: "minted",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2072,
                              src: "4596:6:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              id: 2425,
                              name: "royaltyAddress",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2082,
                              src: "4604:14:12",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 2426,
                              name: "ROYALTY_VALUE",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2051,
                              src: "4620:13:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            id: 2423,
                            name: "_setTokenRoyalty",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2781,
                            src: "4579:16:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              typeString: "function (uint256,address,uint256)",
                            },
                          },
                          id: 2427,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4579:55:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2428,
                        nodeType: "ExpressionStatement",
                        src: "4579:55:12",
                      },
                      {
                        expression: {
                          id: 2431,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 2429,
                            name: "minted",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2072,
                            src: "4649:6:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "+=",
                          rightHandSide: {
                            hexValue: "31",
                            id: 2430,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "4659:1:12",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_1_by_1",
                              typeString: "int_const 1",
                            },
                            value: "1",
                          },
                          src: "4649:11:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 2432,
                        nodeType: "ExpressionStatement",
                        src: "4649:11:12",
                      },
                      {
                        eventCall: {
                          arguments: [
                            {
                              id: 2434,
                              name: "minted",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2072,
                              src: "4685:6:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            id: 2433,
                            name: "Claim",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2086,
                            src: "4679:5:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              typeString: "function (uint256)",
                            },
                          },
                          id: 2435,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4679:13:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2436,
                        nodeType: "EmitStatement",
                        src: "4674:18:12",
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2413,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2411,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2408,
                      src: "4507:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2412,
                      name: "n",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2336,
                      src: "4511:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "4507:5:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2438,
                  initializationExpression: {
                    assignments: [2408],
                    declarations: [
                      {
                        constant: false,
                        id: 2408,
                        mutability: "mutable",
                        name: "i",
                        nodeType: "VariableDeclaration",
                        scope: 2438,
                        src: "4492:9:12",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2407,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "4492:7:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2410,
                    initialValue: {
                      hexValue: "30",
                      id: 2409,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4504:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "4492:13:12",
                  },
                  loopExpression: {
                    expression: {
                      id: 2415,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "4514:3:12",
                      subExpression: {
                        id: 2414,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2408,
                        src: "4514:1:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2416,
                    nodeType: "ExpressionStatement",
                    src: "4514:3:12",
                  },
                  nodeType: "ForStatement",
                  src: "4487:216:12",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2441,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2439,
                      name: "excess",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2390,
                      src: "4717:6:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      hexValue: "30",
                      id: 2440,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4726:1:12",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "4717:10:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2452,
                  nodeType: "IfStatement",
                  src: "4713:79:12",
                  trueBody: {
                    id: 2451,
                    nodeType: "Block",
                    src: "4729:63:12",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              id: 2448,
                              name: "excess",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2390,
                              src: "4774:6:12",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            expression: {
                              arguments: [
                                {
                                  arguments: [],
                                  expression: {
                                    argumentTypes: [],
                                    id: 2444,
                                    name: "_msgSender",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 1774,
                                    src: "4751:10:12",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_function_internal_view$__$returns$_t_address_$",
                                      typeString:
                                        "function () view returns (address)",
                                    },
                                  },
                                  id: 2445,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  kind: "functionCall",
                                  lValueRequested: false,
                                  names: [],
                                  nodeType: "FunctionCall",
                                  src: "4751:12:12",
                                  tryCall: false,
                                  typeDescriptions: {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                ],
                                id: 2443,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                nodeType: "ElementaryTypeNameExpression",
                                src: "4743:8:12",
                                typeDescriptions: {
                                  typeIdentifier: "t_type$_t_address_payable_$",
                                  typeString: "type(address payable)",
                                },
                                typeName: {
                                  id: 2442,
                                  name: "address",
                                  nodeType: "ElementaryTypeName",
                                  src: "4743:8:12",
                                  stateMutability: "payable",
                                  typeDescriptions: {},
                                },
                              },
                              id: 2446,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "typeConversion",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "4743:21:12",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                            },
                            id: 2447,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "transfer",
                            nodeType: "MemberAccess",
                            src: "4743:30:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              typeString: "function (uint256)",
                            },
                          },
                          id: 2449,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4743:38:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2450,
                        nodeType: "ExpressionStatement",
                        src: "4743:38:12",
                      },
                    ],
                  },
                },
              ],
            },
            functionSelector: "379607f5",
            id: 2454,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "claim",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2337,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2336,
                  mutability: "mutable",
                  name: "n",
                  nodeType: "VariableDeclaration",
                  scope: 2454,
                  src: "3892:9:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2335,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3892:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3891:11:12",
            },
            returnParameters: {
              id: 2338,
              nodeType: "ParameterList",
              parameters: [],
              src: "3918:0:12",
            },
            scope: 2702,
            src: "3877:921:12",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            baseFunctions: [447],
            body: {
              id: 2479,
              nodeType: "Block",
              src: "4923:193:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 2466,
                              name: "_msgSender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 1774,
                              src: "4973:10:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_view$__$returns$_t_address_$",
                                typeString:
                                  "function () view returns (address)",
                              },
                            },
                            id: 2467,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "4973:12:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          {
                            id: 2468,
                            name: "tokenId",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2460,
                            src: "4987:7:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          ],
                          id: 2465,
                          name: "_isApprovedOrOwner",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 584,
                          src: "4954:18:12",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            typeString:
                              "function (address,uint256) view returns (bool)",
                          },
                        },
                        id: 2469,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4954:41:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        id: 2470,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "5009:51:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          typeString:
                            'literal_string "ERC721: transfer caller is not owner nor approved"',
                        },
                        value:
                          "ERC721: transfer caller is not owner nor approved",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          typeString:
                            'literal_string "ERC721: transfer caller is not owner nor approved"',
                        },
                      ],
                      id: 2464,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4933:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2471,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4933:137:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2472,
                  nodeType: "ExpressionStatement",
                  src: "4933:137:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 2474,
                        name: "from",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2456,
                        src: "5091:4:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2475,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2458,
                        src: "5097:2:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2476,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2460,
                        src: "5101:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2473,
                      name: "_transfer",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 805,
                      src: "5081:9:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,address,uint256)",
                      },
                    },
                    id: 2477,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5081:28:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2478,
                  nodeType: "ExpressionStatement",
                  src: "5081:28:12",
                },
              ],
            },
            functionSelector: "23b872dd",
            id: 2480,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "transferFrom",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2462,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "4914:8:12",
            },
            parameters: {
              id: 2461,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2456,
                  mutability: "mutable",
                  name: "from",
                  nodeType: "VariableDeclaration",
                  scope: 2480,
                  src: "4835:12:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2455,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "4835:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2458,
                  mutability: "mutable",
                  name: "to",
                  nodeType: "VariableDeclaration",
                  scope: 2480,
                  src: "4857:10:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2457,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "4857:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2460,
                  mutability: "mutable",
                  name: "tokenId",
                  nodeType: "VariableDeclaration",
                  scope: 2480,
                  src: "4877:15:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2459,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "4877:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "4825:73:12",
            },
            returnParameters: {
              id: 2463,
              nodeType: "ParameterList",
              parameters: [],
              src: "4923:0:12",
            },
            scope: 2702,
            src: "4804:312:12",
            stateMutability: "nonpayable",
            virtual: true,
            visibility: "public",
          },
          {
            baseFunctions: [466],
            body: {
              id: 2497,
              nodeType: "Block",
              src: "5245:57:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 2491,
                        name: "from",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2482,
                        src: "5273:4:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2492,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2484,
                        src: "5279:2:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2493,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2486,
                        src: "5283:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        hexValue: "",
                        id: 2494,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "5292:2:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          typeString: 'literal_string ""',
                        },
                        value: "",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          typeString: 'literal_string ""',
                        },
                      ],
                      id: 2490,
                      name: "safeTransferFrom",
                      nodeType: "Identifier",
                      overloadedDeclarations: [2498, 2527],
                      referencedDeclaration: 2527,
                      src: "5256:16:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        typeString:
                          "function (address,address,uint256,bytes memory)",
                      },
                    },
                    id: 2495,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5256:39:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2496,
                  nodeType: "ExpressionStatement",
                  src: "5256:39:12",
                },
              ],
            },
            functionSelector: "42842e0e",
            id: 2498,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "safeTransferFrom",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2488,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "5236:8:12",
            },
            parameters: {
              id: 2487,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2482,
                  mutability: "mutable",
                  name: "from",
                  nodeType: "VariableDeclaration",
                  scope: 2498,
                  src: "5157:12:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2481,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5157:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2484,
                  mutability: "mutable",
                  name: "to",
                  nodeType: "VariableDeclaration",
                  scope: 2498,
                  src: "5179:10:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2483,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5179:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2486,
                  mutability: "mutable",
                  name: "tokenId",
                  nodeType: "VariableDeclaration",
                  scope: 2498,
                  src: "5199:15:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2485,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "5199:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5147:73:12",
            },
            returnParameters: {
              id: 2489,
              nodeType: "ParameterList",
              parameters: [],
              src: "5245:0:12",
            },
            scope: 2702,
            src: "5122:180:12",
            stateMutability: "nonpayable",
            virtual: true,
            visibility: "public",
          },
          {
            baseFunctions: [496],
            body: {
              id: 2526,
              nodeType: "Block",
              src: "5459:204:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 2512,
                              name: "_msgSender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 1774,
                              src: "5509:10:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_view$__$returns$_t_address_$",
                                typeString:
                                  "function () view returns (address)",
                              },
                            },
                            id: 2513,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "5509:12:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          {
                            id: 2514,
                            name: "tokenId",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2504,
                            src: "5523:7:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          ],
                          id: 2511,
                          name: "_isApprovedOrOwner",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 584,
                          src: "5490:18:12",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            typeString:
                              "function (address,uint256) view returns (bool)",
                          },
                        },
                        id: 2515,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "5490:41:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        id: 2516,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "5545:51:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          typeString:
                            'literal_string "ERC721: transfer caller is not owner nor approved"',
                        },
                        value:
                          "ERC721: transfer caller is not owner nor approved",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          typeString:
                            'literal_string "ERC721: transfer caller is not owner nor approved"',
                        },
                      ],
                      id: 2510,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "5469:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2517,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5469:137:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2518,
                  nodeType: "ExpressionStatement",
                  src: "5469:137:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 2520,
                        name: "from",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2500,
                        src: "5631:4:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2521,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2502,
                        src: "5637:2:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2522,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2504,
                        src: "5641:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 2523,
                        name: "_data",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2506,
                        src: "5650:5:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bytes_memory_ptr",
                          typeString: "bytes memory",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_bytes_memory_ptr",
                          typeString: "bytes memory",
                        },
                      ],
                      id: 2519,
                      name: "_safeTransfer",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 525,
                      src: "5617:13:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        typeString:
                          "function (address,address,uint256,bytes memory)",
                      },
                    },
                    id: 2524,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5617:39:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2525,
                  nodeType: "ExpressionStatement",
                  src: "5617:39:12",
                },
              ],
            },
            functionSelector: "b88d4fde",
            id: 2527,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "safeTransferFrom",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2508,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "5450:8:12",
            },
            parameters: {
              id: 2507,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2500,
                  mutability: "mutable",
                  name: "from",
                  nodeType: "VariableDeclaration",
                  scope: 2527,
                  src: "5343:12:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2499,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5343:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2502,
                  mutability: "mutable",
                  name: "to",
                  nodeType: "VariableDeclaration",
                  scope: 2527,
                  src: "5365:10:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2501,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5365:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2504,
                  mutability: "mutable",
                  name: "tokenId",
                  nodeType: "VariableDeclaration",
                  scope: 2527,
                  src: "5385:15:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2503,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "5385:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2506,
                  mutability: "mutable",
                  name: "_data",
                  nodeType: "VariableDeclaration",
                  scope: 2527,
                  src: "5410:18:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_bytes_memory_ptr",
                    typeString: "bytes",
                  },
                  typeName: {
                    id: 2505,
                    name: "bytes",
                    nodeType: "ElementaryTypeName",
                    src: "5410:5:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bytes_storage_ptr",
                      typeString: "bytes",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5333:101:12",
            },
            returnParameters: {
              id: 2509,
              nodeType: "ParameterList",
              parameters: [],
              src: "5459:0:12",
            },
            scope: 2702,
            src: "5308:355:12",
            stateMutability: "nonpayable",
            virtual: true,
            visibility: "public",
          },
          {
            baseFunctions: [312],
            body: {
              id: 2574,
              nodeType: "Block",
              src: "5888:373:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 2537,
                            name: "tokenId",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2529,
                            src: "5927:7:12",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          ],
                          id: 2536,
                          name: "_exists",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 543,
                          src: "5919:7:12",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            typeString:
                              "function (uint256) view returns (bool)",
                          },
                        },
                        id: 2538,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "5919:16:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        id: 2539,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "5949:49:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          typeString:
                            'literal_string "ERC721Metadata: URI query for nonexistent token"',
                        },
                        value:
                          "ERC721Metadata: URI query for nonexistent token",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          typeString:
                            'literal_string "ERC721Metadata: URI query for nonexistent token"',
                        },
                      ],
                      id: 2535,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "5898:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2540,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5898:110:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2541,
                  nodeType: "ExpressionStatement",
                  src: "5898:110:12",
                },
                {
                  assignments: [2543],
                  declarations: [
                    {
                      constant: false,
                      id: 2543,
                      mutability: "mutable",
                      name: "baseURI",
                      nodeType: "VariableDeclaration",
                      scope: 2574,
                      src: "6018:21:12",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier: "t_string_memory_ptr",
                        typeString: "string",
                      },
                      typeName: {
                        id: 2542,
                        name: "string",
                        nodeType: "ElementaryTypeName",
                        src: "6018:6:12",
                        typeDescriptions: {
                          typeIdentifier: "t_string_storage_ptr",
                          typeString: "string",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2546,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 2544,
                      name: "_baseURI",
                      nodeType: "Identifier",
                      overloadedDeclarations: [2596],
                      referencedDeclaration: 2596,
                      src: "6042:8:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        typeString: "function () view returns (string memory)",
                      },
                    },
                    id: 2545,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6042:10:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6018:34:12",
                },
                {
                  assignments: [2548],
                  declarations: [
                    {
                      constant: false,
                      id: 2548,
                      mutability: "mutable",
                      name: "imageID",
                      nodeType: "VariableDeclaration",
                      scope: 2574,
                      src: "6062:15:12",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2547,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6062:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2552,
                  initialValue: {
                    baseExpression: {
                      id: 2549,
                      name: "tokenIDMap",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2062,
                      src: "6080:10:12",
                      typeDescriptions: {
                        typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                        typeString: "mapping(uint256 => uint256)",
                      },
                    },
                    id: 2551,
                    indexExpression: {
                      id: 2550,
                      name: "tokenId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2529,
                      src: "6091:7:12",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "6080:19:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6062:37:12",
                },
                {
                  expression: {
                    condition: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 2559,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          arguments: [
                            {
                              id: 2555,
                              name: "baseURI",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2543,
                              src: "6134:7:12",
                              typeDescriptions: {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                            ],
                            id: 2554,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "6128:5:12",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_bytes_storage_ptr_$",
                              typeString: "type(bytes storage pointer)",
                            },
                            typeName: {
                              id: 2553,
                              name: "bytes",
                              nodeType: "ElementaryTypeName",
                              src: "6128:5:12",
                              typeDescriptions: {},
                            },
                          },
                          id: 2556,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "6128:14:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_bytes_memory_ptr",
                            typeString: "bytes memory",
                          },
                        },
                        id: 2557,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "length",
                        nodeType: "MemberAccess",
                        src: "6128:21:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: ">",
                      rightExpression: {
                        hexValue: "30",
                        id: 2558,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "6152:1:12",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                        value: "0",
                      },
                      src: "6128:25:12",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    falseExpression: {
                      hexValue: "",
                      id: 2571,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "string",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "6252:2:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        typeString: 'literal_string ""',
                      },
                      value: "",
                    },
                    id: 2572,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "Conditional",
                    src: "6128:126:12",
                    trueExpression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              id: 2564,
                              name: "baseURI",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2543,
                              src: "6196:7:12",
                              typeDescriptions: {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                            },
                            {
                              arguments: [],
                              expression: {
                                argumentTypes: [],
                                expression: {
                                  id: 2565,
                                  name: "imageID",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2548,
                                  src: "6205:7:12",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                id: 2566,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                memberName: "toString",
                                nodeType: "MemberAccess",
                                referencedDeclaration: 1869,
                                src: "6205:16:12",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  typeString:
                                    "function (uint256) pure returns (string memory)",
                                },
                              },
                              id: 2567,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "functionCall",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "6205:18:12",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                            },
                            {
                              hexValue: "2e6a736f6e",
                              id: 2568,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "string",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "6224:7:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                typeString: 'literal_string ".json"',
                              },
                              value: ".json",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                              {
                                typeIdentifier: "t_string_memory_ptr",
                                typeString: "string memory",
                              },
                              {
                                typeIdentifier:
                                  "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                typeString: 'literal_string ".json"',
                              },
                            ],
                            expression: {
                              id: 2562,
                              name: "abi",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967295,
                              src: "6179:3:12",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_abi",
                                typeString: "abi",
                              },
                            },
                            id: 2563,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            memberName: "encodePacked",
                            nodeType: "MemberAccess",
                            src: "6179:16:12",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              typeString:
                                "function () pure returns (bytes memory)",
                            },
                          },
                          id: 2569,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "6179:53:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_bytes_memory_ptr",
                            typeString: "bytes memory",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bytes_memory_ptr",
                            typeString: "bytes memory",
                          },
                        ],
                        id: 2561,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "6172:6:12",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_string_storage_ptr_$",
                          typeString: "type(string storage pointer)",
                        },
                        typeName: {
                          id: 2560,
                          name: "string",
                          nodeType: "ElementaryTypeName",
                          src: "6172:6:12",
                          typeDescriptions: {},
                        },
                      },
                      id: 2570,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6172:61:12",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_string_memory_ptr",
                        typeString: "string memory",
                      },
                    },
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string memory",
                    },
                  },
                  functionReturnParameters: 2534,
                  id: 2573,
                  nodeType: "Return",
                  src: "6109:145:12",
                },
              ],
            },
            functionSelector: "c87b56dd",
            id: 2575,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "tokenURI",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2531,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "5843:8:12",
            },
            parameters: {
              id: 2530,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2529,
                  mutability: "mutable",
                  name: "tokenId",
                  nodeType: "VariableDeclaration",
                  scope: 2575,
                  src: "5774:15:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2528,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "5774:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5773:17:12",
            },
            returnParameters: {
              id: 2534,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2533,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2575,
                  src: "5869:13:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2532,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "5869:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5868:15:12",
            },
            scope: 2702,
            src: "5756:505:12",
            stateMutability: "view",
            virtual: true,
            visibility: "public",
          },
          {
            body: {
              id: 2586,
              nodeType: "Block",
              src: "6325:30:12",
              statements: [
                {
                  expression: {
                    id: 2584,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2582,
                      name: "baseUri",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2069,
                      src: "6335:7:12",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2583,
                      name: "uri",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2577,
                      src: "6345:3:12",
                      typeDescriptions: {
                        typeIdentifier: "t_string_memory_ptr",
                        typeString: "string memory",
                      },
                    },
                    src: "6335:13:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage",
                      typeString: "string storage ref",
                    },
                  },
                  id: 2585,
                  nodeType: "ExpressionStatement",
                  src: "6335:13:12",
                },
              ],
            },
            functionSelector: "a0bcfc7f",
            id: 2587,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 2580,
                modifierName: {
                  id: 2579,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 46,
                  src: "6315:9:12",
                },
                nodeType: "ModifierInvocation",
                src: "6315:9:12",
              },
            ],
            name: "setBaseUri",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2578,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2577,
                  mutability: "mutable",
                  name: "uri",
                  nodeType: "VariableDeclaration",
                  scope: 2587,
                  src: "6287:17:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2576,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "6287:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6286:19:12",
            },
            returnParameters: {
              id: 2581,
              nodeType: "ParameterList",
              parameters: [],
              src: "6325:0:12",
            },
            scope: 2702,
            src: "6267:88:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            baseFunctions: [321],
            body: {
              id: 2595,
              nodeType: "Block",
              src: "6428:31:12",
              statements: [
                {
                  expression: {
                    id: 2593,
                    name: "baseUri",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2069,
                    src: "6445:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage",
                      typeString: "string storage ref",
                    },
                  },
                  functionReturnParameters: 2592,
                  id: 2594,
                  nodeType: "Return",
                  src: "6438:14:12",
                },
              ],
            },
            id: 2596,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "_baseURI",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2589,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "6395:8:12",
            },
            parameters: {
              id: 2588,
              nodeType: "ParameterList",
              parameters: [],
              src: "6378:2:12",
            },
            returnParameters: {
              id: 2592,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2591,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2596,
                  src: "6413:13:12",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 2590,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "6413:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6412:15:12",
            },
            scope: 2702,
            src: "6361:98:12",
            stateMutability: "view",
            virtual: false,
            visibility: "internal",
          },
          {
            baseFunctions: [1119, 2738],
            body: {
              id: 2612,
              nodeType: "Block",
              src: "6658:60:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 2609,
                        name: "interfaceId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2599,
                        src: "6699:11:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bytes4",
                          typeString: "bytes4",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bytes4",
                          typeString: "bytes4",
                        },
                      ],
                      expression: {
                        id: 2607,
                        name: "super",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967271,
                        src: "6675:5:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_super$_AvaxPenguin_$2702_$",
                          typeString: "type(contract super AvaxPenguin)",
                        },
                      },
                      id: 2608,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "supportsInterface",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 2738,
                      src: "6675:23:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        typeString: "function (bytes4) view returns (bool)",
                      },
                    },
                    id: 2610,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6675:36:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  functionReturnParameters: 2606,
                  id: 2611,
                  nodeType: "Return",
                  src: "6668:43:12",
                },
              ],
            },
            documentation: {
              id: 2597,
              nodeType: "StructuredDocumentation",
              src: "6465:22:12",
              text: "@inheritdoc\tERC165",
            },
            functionSelector: "01ffc9a7",
            id: 2613,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "supportsInterface",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2603,
              nodeType: "OverrideSpecifier",
              overrides: [
                {
                  id: 2601,
                  name: "ERC2981Base",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 2739,
                  src: "6600:11:12",
                },
                {
                  id: 2602,
                  name: "ERC721Enumerable",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 1407,
                  src: "6613:16:12",
                },
              ],
              src: "6591:39:12",
            },
            parameters: {
              id: 2600,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2599,
                  mutability: "mutable",
                  name: "interfaceId",
                  nodeType: "VariableDeclaration",
                  scope: 2613,
                  src: "6519:18:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bytes4",
                    typeString: "bytes4",
                  },
                  typeName: {
                    id: 2598,
                    name: "bytes4",
                    nodeType: "ElementaryTypeName",
                    src: "6519:6:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bytes4",
                      typeString: "bytes4",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6518:20:12",
            },
            returnParameters: {
              id: 2606,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2605,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  scope: 2613,
                  src: "6648:4:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 2604,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "6648:4:12",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6647:6:12",
            },
            scope: 2702,
            src: "6492:226:12",
            stateMutability: "view",
            virtual: true,
            visibility: "public",
          },
          {
            baseFunctions: [1245],
            body: {
              id: 2632,
              nodeType: "Block",
              src: "6863:62:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 2627,
                        name: "from",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2615,
                        src: "6900:4:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2628,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2617,
                        src: "6906:2:12",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 2629,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2619,
                        src: "6910:7:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 2624,
                        name: "super",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967271,
                        src: "6873:5:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_super$_AvaxPenguin_$2702_$",
                          typeString: "type(contract super AvaxPenguin)",
                        },
                      },
                      id: 2626,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "_beforeTokenTransfer",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1245,
                      src: "6873:26:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,address,uint256)",
                      },
                    },
                    id: 2630,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6873:45:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2631,
                  nodeType: "ExpressionStatement",
                  src: "6873:45:12",
                },
              ],
            },
            id: 2633,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "_beforeTokenTransfer",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 2622,
              nodeType: "OverrideSpecifier",
              overrides: [
                {
                  id: 2621,
                  name: "ERC721Enumerable",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 1407,
                  src: "6845:16:12",
                },
              ],
              src: "6836:26:12",
            },
            parameters: {
              id: 2620,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2615,
                  mutability: "mutable",
                  name: "from",
                  nodeType: "VariableDeclaration",
                  scope: 2633,
                  src: "6763:12:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2614,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "6763:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2617,
                  mutability: "mutable",
                  name: "to",
                  nodeType: "VariableDeclaration",
                  scope: 2633,
                  src: "6785:10:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2616,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "6785:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 2619,
                  mutability: "mutable",
                  name: "tokenId",
                  nodeType: "VariableDeclaration",
                  scope: 2633,
                  src: "6805:15:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2618,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "6805:7:12",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6753:73:12",
            },
            returnParameters: {
              id: 2623,
              nodeType: "ParameterList",
              parameters: [],
              src: "6863:0:12",
            },
            scope: 2702,
            src: "6724:201:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 2644,
              nodeType: "Block",
              src: "6994:50:12",
              statements: [
                {
                  expression: {
                    id: 2642,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2640,
                      name: "ownerOfContract",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2080,
                      src: "7003:15:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2641,
                      name: "_ownerOfContract",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2635,
                      src: "7021:16:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "7003:34:12",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 2643,
                  nodeType: "ExpressionStatement",
                  src: "7003:34:12",
                },
              ],
            },
            functionSelector: "13af4035",
            id: 2645,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 2638,
                modifierName: {
                  id: 2637,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 46,
                  src: "6984:9:12",
                },
                nodeType: "ModifierInvocation",
                src: "6984:9:12",
              },
            ],
            name: "setOwner",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2636,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2635,
                  mutability: "mutable",
                  name: "_ownerOfContract",
                  nodeType: "VariableDeclaration",
                  scope: 2645,
                  src: "6949:24:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2634,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "6949:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6948:26:12",
            },
            returnParameters: {
              id: 2639,
              nodeType: "ParameterList",
              parameters: [],
              src: "6994:0:12",
            },
            scope: 2702,
            src: "6931:113:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 2656,
              nodeType: "Block",
              src: "7114:48:12",
              statements: [
                {
                  expression: {
                    id: 2654,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 2652,
                      name: "royaltyAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2082,
                      src: "7123:14:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 2653,
                      name: "_royaltyAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2647,
                      src: "7140:15:12",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "7123:32:12",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 2655,
                  nodeType: "ExpressionStatement",
                  src: "7123:32:12",
                },
              ],
            },
            functionSelector: "2a6432a4",
            id: 2657,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 2650,
                modifierName: {
                  id: 2649,
                  name: "onlyOwner",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 46,
                  src: "7104:9:12",
                },
                nodeType: "ModifierInvocation",
                src: "7104:9:12",
              },
            ],
            name: "setRoyalty",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2648,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2647,
                  mutability: "mutable",
                  name: "_royaltyAddress",
                  nodeType: "VariableDeclaration",
                  scope: 2657,
                  src: "7070:23:12",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 2646,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "7070:7:12",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "7069:25:12",
            },
            returnParameters: {
              id: 2651,
              nodeType: "ParameterList",
              parameters: [],
              src: "7114:0:12",
            },
            scope: 2702,
            src: "7050:112:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 2692,
              nodeType: "Block",
              src: "7197:211:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        id: 2664,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 2661,
                          name: "ownerOfContract",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2080,
                          src: "7215:15:12",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          expression: {
                            id: 2662,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "7234:3:12",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 2663,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "7234:10:12",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        src: "7215:29:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "596f757220617265206e6f7420746865206f776e6572",
                        id: 2665,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "7246:24:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_67b77cb8e323f66f6ae71d6827fe7f806b420df39a9e893bb770ed9f1dc449f1",
                          typeString: 'literal_string "Your are not the owner"',
                        },
                        value: "Your are not the owner",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_67b77cb8e323f66f6ae71d6827fe7f806b420df39a9e893bb770ed9f1dc449f1",
                          typeString: 'literal_string "Your are not the owner"',
                        },
                      ],
                      id: 2660,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "7207:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2666,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7207:64:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2667,
                  nodeType: "ExpressionStatement",
                  src: "7207:64:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2675,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            arguments: [
                              {
                                id: 2671,
                                name: "this",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967268,
                                src: "7297:4:12",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_contract$_AvaxPenguin_$2702",
                                  typeString: "contract AvaxPenguin",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier:
                                    "t_contract$_AvaxPenguin_$2702",
                                  typeString: "contract AvaxPenguin",
                                },
                              ],
                              id: 2670,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "7289:7:12",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 2669,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "7289:7:12",
                                typeDescriptions: {},
                              },
                            },
                            id: 2672,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "7289:13:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          id: 2673,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "balance",
                          nodeType: "MemberAccess",
                          src: "7289:21:12",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">",
                        rightExpression: {
                          hexValue: "30",
                          id: 2674,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "7313:1:12",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "7289:25:12",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue: "4e6f7468696e6720746f207769746864726177",
                        id: 2676,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "7316:21:12",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
                          typeString: 'literal_string "Nothing to withdraw"',
                        },
                        value: "Nothing to withdraw",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
                          typeString: 'literal_string "Nothing to withdraw"',
                        },
                      ],
                      id: 2668,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "7281:7:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2677,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7281:57:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2678,
                  nodeType: "ExpressionStatement",
                  src: "7281:57:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          arguments: [
                            {
                              id: 2687,
                              name: "this",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967268,
                              src: "7387:4:12",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_AvaxPenguin_$2702",
                                typeString: "contract AvaxPenguin",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_contract$_AvaxPenguin_$2702",
                                typeString: "contract AvaxPenguin",
                              },
                            ],
                            id: 2686,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "7379:7:12",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 2685,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "7379:7:12",
                              typeDescriptions: {},
                            },
                          },
                          id: 2688,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "7379:13:12",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        id: 2689,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "balance",
                        nodeType: "MemberAccess",
                        src: "7379:21:12",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 2681,
                              name: "_msgSender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 1774,
                              src: "7356:10:12",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_view$__$returns$_t_address_$",
                                typeString:
                                  "function () view returns (address)",
                              },
                            },
                            id: 2682,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "7356:12:12",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 2680,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "7348:8:12",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_payable_$",
                            typeString: "type(address payable)",
                          },
                          typeName: {
                            id: 2679,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "7348:8:12",
                            stateMutability: "payable",
                            typeDescriptions: {},
                          },
                        },
                        id: 2683,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "7348:21:12",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 2684,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "7348:30:12",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 2690,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7348:53:12",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2691,
                  nodeType: "ExpressionStatement",
                  src: "7348:53:12",
                },
              ],
            },
            functionSelector: "3ccfd60b",
            id: 2693,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "withdraw",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2658,
              nodeType: "ParameterList",
              parameters: [],
              src: "7185:2:12",
            },
            returnParameters: {
              id: 2659,
              nodeType: "ParameterList",
              parameters: [],
              src: "7197:0:12",
            },
            scope: 2702,
            src: "7168:240:12",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 2696,
              nodeType: "Block",
              src: "7441:2:12",
              statements: [],
            },
            id: 2697,
            implemented: true,
            kind: "receive",
            modifiers: [],
            name: "",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2694,
              nodeType: "ParameterList",
              parameters: [],
              src: "7421:2:12",
            },
            returnParameters: {
              id: 2695,
              nodeType: "ParameterList",
              parameters: [],
              src: "7441:0:12",
            },
            scope: 2702,
            src: "7414:29:12",
            stateMutability: "payable",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 2700,
              nodeType: "Block",
              src: "7477:2:12",
              statements: [],
            },
            id: 2701,
            implemented: true,
            kind: "fallback",
            modifiers: [],
            name: "",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2698,
              nodeType: "ParameterList",
              parameters: [],
              src: "7457:2:12",
            },
            returnParameters: {
              id: 2699,
              nodeType: "ParameterList",
              parameters: [],
              src: "7477:0:12",
            },
            scope: 2702,
            src: "7449:30:12",
            stateMutability: "payable",
            virtual: false,
            visibility: "external",
          },
        ],
        scope: 2703,
        src: "344:7137:12",
      },
    ],
    src: "32:7450:12",
  },
  compiler: {
    name: "solc",
    version: "0.8.0+commit.c7dfd78e.Emscripten.clang",
  },
  networks: {
    1: {
      events: {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "approved",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "ApprovalForAll",
          type: "event",
        },
        "0x7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f7": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "_id",
              type: "uint256",
            },
          ],
          name: "Claim",
          type: "event",
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
      },
      links: {},
      address: "0x96f020B13F1b8b46D70723C3a3C7b4cC6618e99e",
      transactionHash:
        "0x81bcd17fc65d29727830d7e304e43394776dd38f3f6b752b0294d343d3ab6dc0",
    },
  },
  schemaVersion: "3.4.3",
  updatedAt: "2022-01-07T13:54:10.223Z",
  networkType: "ethereum",
  devdoc: {
    kind: "dev",
    methods: {
      "approve(address,uint256)": {
        details: "See {IERC721-approve}.",
      },
      "balanceOf(address)": {
        details: "See {IERC721-balanceOf}.",
      },
      "getApproved(uint256)": {
        details: "See {IERC721-getApproved}.",
      },
      "isApprovedForAll(address,address)": {
        details: "See {IERC721-isApprovedForAll}.",
      },
      "name()": {
        details: "See {IERC721Metadata-name}.",
      },
      "owner()": {
        details: "Returns the address of the current owner.",
      },
      "ownerOf(uint256)": {
        details: "See {IERC721-ownerOf}.",
      },
      "renounceOwnership()": {
        details:
          "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      },
      "royaltyInfo(uint256,uint256)": {
        params: {
          _tokenId: "- the NFT asset queried for royalty information",
          _value: "- the sale price of the NFT asset specified by _tokenId",
        },
        returns: {
          receiver: "- address of who should be sent the royalty payment",
          royaltyAmount: "- the royalty payment amount for value sale price",
        },
      },
      "safeTransferFrom(address,address,uint256)": {
        details: "See {IERC721-safeTransferFrom}.",
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        details: "See {IERC721-safeTransferFrom}.",
      },
      "setApprovalForAll(address,bool)": {
        details: "See {IERC721-setApprovalForAll}.",
      },
      "supportsInterface(bytes4)": {
        details: "See {IERC165-supportsInterface}.",
      },
      "symbol()": {
        details: "See {IERC721Metadata-symbol}.",
      },
      "tokenByIndex(uint256)": {
        details: "See {IERC721Enumerable-tokenByIndex}.",
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        details: "See {IERC721Enumerable-tokenOfOwnerByIndex}.",
      },
      "tokenURI(uint256)": {
        details: "See {IERC721Metadata-tokenURI}.",
      },
      "totalSupply()": {
        details: "See {IERC721Enumerable-totalSupply}.",
      },
      "transferFrom(address,address,uint256)": {
        details: "See {IERC721-transferFrom}.",
      },
      "transferOwnership(address)": {
        details:
          "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      },
    },
    version: 1,
  },
  userdoc: {
    kind: "user",
    methods: {},
    version: 1,
  },
};
